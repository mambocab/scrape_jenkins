{"baseurl": "http://cassci.datastax.com/job/trunk_dtest/720/testReport/api/python", "_data": {"failCount": 203, "passCount": 755, "skipCount": 208, "testActions": [], "empty": false, "duration": 45384.062, "suites": [{"duration": 45384.062, "timestamp": null, "cases": [{"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_5732_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 75.798, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.705, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "tuple_notation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.993, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_key_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.075, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.425, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "collection_flush_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 47.682, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3240, in collection_flush_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, set([2])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[1, set([2])]] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YBst1S\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Expected [[1, set([2])]] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YBst1S\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.293, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.607, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2436, in multi_in_test\n    self.__multi_in(False)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uztEUx\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uztEUx\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 65.537, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 595, in test_with_allow_filtering\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lnmT_Q\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lnmT_Q\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 63.483, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 221, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JTaPyL\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JTaPyL\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "indexes_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.516, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1972, in indexes_composite_test\n    res = cursor.execute(\"SELECT blog_id, timestamp FROM test WHERE author = 'bob'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QNS3Jm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QNS3Jm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "static_columns_with_2i_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.443, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3918, in static_columns_with_2i_test\n    assert_all(cursor, \"SELECT * FROM test WHERE v = 1\", [[0, 0, 42, 1], [0, 1, 42, 1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mQV6_E\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mQV6_E\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "limit_bugs_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.674, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1831, in limit_bugs_test\n    res = cursor.execute(\"SELECT * FROM testcf;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ee2cCZ\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Ee2cCZ\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Ee2cCZ] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-36Vg84\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ee2cCZ\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Ee2cCZ\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Ee2cCZ] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-36Vg84\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_clause_wide_rows_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.258, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "limit_ranges_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.818, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 337, in limit_ranges_test\n    res = cursor.execute(\"SELECT * FROM clicks WHERE token(userid) >= token(2) LIMIT 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4vUFQr\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-4vUFQr\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-4vUFQr] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9D2S7R\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4vUFQr\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-4vUFQr\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-4vUFQr] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9D2S7R\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_order_and_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.097, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2936, in clustering_order_and_functions_test\n    cursor.execute(\"SELECT dateOf(t) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JofmRP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JofmRP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "empty_blob_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.422, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2883, in empty_blob_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AzXKL7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AzXKL7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.425, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1314, in delete_row_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wjmn74\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wjmn74\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4532_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.191, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 61.661, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 41.388, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "create_lots_of_schema_churn_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 215.587, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 331, in create_lots_of_schema_churn_test\n    self._do_lots_of_schema_actions(session)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 290, in _do_lots_of_schema_actions\n    results = execute_concurrent(session, cmds, concurrency=100, raise_on_first_error=True)\n  File \"cassandra/concurrent.py\", line 88, in cassandra.concurrent.execute_concurrent (cassandra/concurrent.c:1453)\n    return executor.execute(concurrency, raise_on_first_error)\n  File \"cassandra/concurrent.py\", line 185, in cassandra.concurrent.ConcurrentExecutorListResults.execute (cassandra/concurrent.c:4829)\n    return super(ConcurrentExecutorListResults, self).execute(concurrency, fail_fast)\n  File \"cassandra/concurrent.py\", line 111, in cassandra.concurrent._ConcurrentExecutor.execute (cassandra/concurrent.c:2118)\n    return self._results()\n  File \"cassandra/concurrent.py\", line 199, in cassandra.concurrent.ConcurrentExecutorListResults._results (cassandra/concurrent.c:5597)\n    with self._condition:\n  File \"cassandra/concurrent.py\", line 203, in cassandra.concurrent.ConcurrentExecutorListResults._results (cassandra/concurrent.c:5529)\n    self._raise(self._exception)\n  File \"cassandra/concurrent.py\", line 151, in cassandra.concurrent._ConcurrentExecutor._raise (cassandra/concurrent.c:3527)\n    raise exc\n'code=2200 [Invalid query] message=\"No column definition found for column c4\"\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f_YAa4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=2200 [Invalid query] message=\"No column definition found for column c4\"\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f_YAa4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy", "className": "consistency_test.TestAvailability", "duration": 199.178, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "interrupt_build_process_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 148.381, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "add_dc_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 91.277, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "secondary_index_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_index_stress", "className": "wide_rows_test.TestWideRows", "duration": 88.993, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 83.022, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 74.994, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "network_topology_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6924_dropping_cf", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 56.561, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_8280_validate_indexed_values", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 8.257, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_read_old_sstables_after_upgrade", "className": "secondary_indexes_test.TestUpgradeSecondaryIndexes", "duration": 0.059, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replica_availability_test", "className": "paxos_tests.TestPaxos", "duration": 59.357, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "cluster_availability_test", "className": "paxos_tests.TestPaxos", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "paging_test.TestPagingSize", "duration": 47.647, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 30.951, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 6237", "name": "test_multiple_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_order_preserving", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 41.951, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_letter_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 24.299, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tuple_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 9.154, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_invalid_text", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.661, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_writing_dont_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.172, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_rejects_bad_pass", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.059, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_index", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.841, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tracing", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.551, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_pep8_compliance", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 0.813, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "login_test", "className": "auth_test.TestAuth", "duration": 37.997, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "regular_users_can_alter_their_passwords_only_test", "className": "auth_test.TestAuth", "duration": 18.789, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superusers_can_drop_users_test", "className": "auth_test.TestAuth", "duration": 0.062, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "password_authenticator_create_user_requires_password_test", "className": "auth_test.TestAuth", "duration": 0.06, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_dropping", "className": "user_types_test.TestUserTypes", "duration": 30.301, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7423", "name": "udt_subfield_test", "className": "user_types_test.TestUserTypes", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "removing_default_ttl_does_not_affect_existing_rows_test", "className": "ttl_test.TestTTL", "duration": 26.875, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_remove", "className": "thrift_tests.TestMutations", "duration": 27.37, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_dynamic_indexes_with_system_update_cf", "className": "thrift_tests.TestMutations", "duration": 8.332, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_integer_remove", "className": "thrift_tests.TestMutations", "duration": 7.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_insertions_and_deletions", "className": "thrift_tests.TestMutations", "duration": 7.641, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice", "className": "thrift_tests.TestMutations", "duration": 7.525, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_range", "className": "thrift_tests.TestMutations", "duration": 7.609, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_reenabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.615, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 144, in hintedhandoff_dc_reenabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-webuzp\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-webuzp\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "hintedhandoff_decom_test", "className": "hintedhandoff_test.TestHintedHandoff", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "uniform_ratio_test", "className": "stress_tool_test.TestStressSparsenessRatio", "duration": 16.007, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "gc_test", "className": "deletion_test.TestDeletion", "duration": 11.567, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compaction_test", "className": "schema_test.TestSchema", "duration": 9.912, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "each_statement_in_batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 7.635, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "only_one_timestamp_is_valid_test", "className": "batch_test.TestBatch", "duration": 7.459, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_rejects_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.291, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "nan_infinity_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.062, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_8558_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "in_with_desc_order_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_2ndary_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_and_list_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_with_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "blobAs_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "3.0.0 > 2.0.x", "name": "counters_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "edge_2i_on_complex_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "validate_counter_regular_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 701, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_5732_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 20, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_and_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 648, "skippedMessage": "3.0.0 > 2.0.x", "name": "null_support_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 73, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_tombstones_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "3.0.0 > 2.0.x", "name": "cql3_insert_thrift_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "downgrade_to_compact_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "function_with_null_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "exclusive_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "no_range_ghost_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_ranges_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_with_2i_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_table_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 129, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "deletion_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug7105_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "undefined_column_handling_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_index_with_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "truncate_clean_cache_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4532_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "double_with_npe_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "multi_list_set_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "unescaped_string_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_bugs_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 71, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 649, "skippedMessage": "3.0.0 > 2.0.x", "name": "timestamp_and_ttl_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 72, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6069_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 5, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6115_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "row_existence_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 8, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "indexes_composite_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.119, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_clustering_indexing_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "rename_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_with_limit_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test3", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test7", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test6", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test8", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test9", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test4", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test2", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test5", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 695, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_index_creation_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.056, "errorStackTrace": null, "age": 26, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_counters_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.111, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 0.058, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.058, "errorStackTrace": null, "age": 215, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_mutation_v2", "className": "write_failures_test.TestWriteFailures", "duration": 0.057, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "json_tools_test", "className": "json_tools_test.TestJson", "duration": 0.057, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommissioned_node_cant_rejoin_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "movement_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommission_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "local_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "materialized_view_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "remote_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "index_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "initial_empty_repair_tables_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_repair_order_preserving_test", "className": "repair_test.TestRepair", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "wide_slice_test", "className": "putget_test.TestPutGet", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require Fixes to ccm around upgrades", "name": "test_upgrade_index_summary", "className": "index_summary_upgrade_test.TestUpgradeIndexSummary", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 9961", "name": "schema_changes_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "consistent_reads_after_move_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "multiple_subsequent_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "test hangs: see CASSANDRA-9831", "name": "resumable_replace_test", "className": "replace_address_test.TestReplaceAddress", "duration": 0.0, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "simple_tuple_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 368.101, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 394, in simple_tuple_query_test\n    res = cursor.execute(\"SELECT * FROM bard WHERE b=0 AND (c, d, e) > (1, 1, 1) ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MQc5gq\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 72, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MQc5gq\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 48.331, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mU5Lst\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mU5Lst\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "limit_bugs_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.407, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1831, in limit_bugs_test\n    res = cursor.execute(\"SELECT * FROM testcf;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7bvGpi\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-7bvGpi\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-7bvGpi] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-q4MvnI\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7bvGpi\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-7bvGpi\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-7bvGpi] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-q4MvnI\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.208, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4040, in select_count_paging_test\n    assert_one(cursor, \"select count(*) from test where field3 = false limit 1;\", [2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[2]] from select count(*) from test where field3 = false limit 1;, but got [[0]]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w5E7LH\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "Expected [[2]] from select count(*) from test where field3 = false limit 1;, but got [[0]]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w5E7LH\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "truncate_clean_cache_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.163, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 93.149, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z4ao_x\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z4ao_x\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_empty_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.549, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.365, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_in_compact_non_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.414, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 35.61, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.448, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.191, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4896, in bug_6612_test\n    assert_one(cursor, \"select count(*) from session_data where app_name='foo' and account='bar' and last_access > 4 allow filtering\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bKg7mk\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bKg7mk\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.523, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BANTCG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BANTCG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.488, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.119, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jlmFQg\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jlmFQg\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "whole_map_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.229, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4503, in whole_map_conditional_test\n    check_applies(\"m = {'foo': 'bar'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4501, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Jcsuc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------'", "age": 10, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Jcsuc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_order_by_without_selecting_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.781, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.328, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1590, in cql3_insert_thrift_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ur2sib\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ur2sib\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "sparse_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.321, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.658, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.078, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 221, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B9o8md\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B9o8md\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "local_quorum_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 454.404, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_to_30_test", "className": "upgrade_internal_auth_test.TestAuthUpgrade", "duration": 325.336, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-3.0)\nCompiling Cassandra cassandra-3.0 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 164.068, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 28.421, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 130.956, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_tables_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 96.649, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_rebuild_test", "className": "rebuild_test.TestRebuild", "duration": 91.346, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 79.076, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 73.437, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_thrift", "className": "write_failures_test.TestWriteFailures", "duration": 59.524, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_quorum", "className": "write_failures_test.TestWriteFailures", "duration": 41.614, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_respected_on_delayed_replication_test", "className": "ttl_test.TestDistributedTTL", "duration": 53.323, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "small_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 47.182, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_snappy_test", "className": "putget_test.TestPutGet", "duration": 34.701, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_deflate_test", "className": "putget_test.TestPutGet", "duration": 34.748, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 27.021, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "paging_test.TestPagingWithModifiers", "duration": 25.181, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_as_clustering_col", "className": "user_types_test.TestUserTypes", "duration": 25.268, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 21.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_slice_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 20.119, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_cleanup_test", "className": "auth_test.TestAuth", "duration": 17.965, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 563, "skippedMessage": "This test is only designed to work with 2.0 and 2.1 right now", "name": "test_friendly_unrecognized_table_handling", "className": "mixed_version_test.TestSchemaChanges", "duration": 16.956, "errorStackTrace": null, "age": 158, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cfid_test", "className": "cfid_test.TestCFID", "duration": 13.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableexpiredblockers_test", "className": "offline_tools_test.TestOfflineTools", "duration": 12.192, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count_around_page_size", "className": "thrift_tests.TestMutations", "duration": 8.691, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_time_uuid", "className": "thrift_tests.TestMutations", "duration": 7.929, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_index_scan", "className": "thrift_tests.TestMutations", "duration": 7.114, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter_get_slice_range", "className": "thrift_tests.TestMutations", "duration": 7.048, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_with_remove_cf", "className": "thrift_tests.TestMutations", "duration": 6.913, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slices_tokens", "className": "thrift_tests.TestMutations", "duration": 7.02, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_index_scan_uuid_names", "className": "thrift_tests.TestMutations", "duration": 7.034, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_resurrect_subcolumn", "className": "thrift_tests.TestMutations", "duration": 6.992, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice_after_deletion", "className": "thrift_tests.TestMutations", "duration": 6.796, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_standard_row", "className": "thrift_tests.TestMutations", "duration": 6.876, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 8.506, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_source_glass", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.652, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wrong_number_of_columns", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:(EE)  list index out of range(EE)  <stdin>:2:Aborting import at record #1. Previously inserted records are still present, and some records after that may be present as well.(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_write", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 6.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_queries_test", "className": "schema_test.TestSchema", "duration": 7.217, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "durable_writes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.457, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "empty_blob_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 366.831, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2883, in empty_blob_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FPSAAg\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 70, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FPSAAg\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "indexes_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 51.56, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1972, in indexes_composite_test\n    res = cursor.execute(\"SELECT blog_id, timestamp FROM test WHERE author = 'bob'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_Z8gO7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_Z8gO7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_custom_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.489, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.982, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 43.74, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.659, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.899, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 57, in static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jEzb5k\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jEzb5k\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "row_existence_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 93.753, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1613, in row_existence_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pMpG0v\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 70, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pMpG0v\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "nan_infinity_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.531, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3690, in nan_infinity_test\n    selected = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MqHTOr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MqHTOr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 47.059, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.464, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 248, in test_with_less_results_than_page_size\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KaaNnS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KaaNnS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 60.274, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 312, in test_with_equal_results_to_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m3zcYR\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m3zcYR\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 78.251, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "static_columns_with_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.132, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3957, in static_columns_with_distinct_test\n    assert_all(cursor, \"SELECT k, s FROM test\", [[1, None], [1, None]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YYpn6u\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YYpn6u\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "nameless_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.744, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 922, in nameless_index_test\n    res = cursor.execute(\"SELECT id FROM users WHERE birth_year = 42\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLCZ9U\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLCZ9U\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.209, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2694, in clustering_indexing_test\n    res = cursor.execute(\"SELECT v1 FROM posts WHERE time = 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z7r4_k\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z7r4_k\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_function_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.199, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.46, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QBgL_D\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QBgL_D\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "simple_tuple_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.263, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 394, in simple_tuple_query_test\n    res = cursor.execute(\"SELECT * FROM bard WHERE b=0 AND (c, d, e) > (1, 1, 1) ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lob7qx\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 72, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lob7qx\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 38.693, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.858, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_3_test", "className": "batch_test.TestBatch", "duration": 140.218, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 7.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "local_dc_repair_test", "className": "repair_test.TestRepair", "duration": 197.859, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bulk_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 129.78, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_byte_ordered", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 39.736, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_explicit_column_order_writing", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.3, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_mv", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 10.048, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_datetime_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.987, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_select", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.353, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_colons_in_string_literals", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.501, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "failed_bootstap_wiped_node_can_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 99.256, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog_point_in_time_with_active_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 90.702, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "readrepair_test", "className": "consistency_test.TestConsistency", "duration": 87.974, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 70.754, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 69.608, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 40.11, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 49.165, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 23.112, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 18.953, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos_any", "className": "write_failures_test.TestWriteFailures", "duration": 58.784, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_increment_test", "className": "counter_tests.TestCounters", "duration": 30.138, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_local_read_test", "className": "putget_test.TestPutGet", "duration": 30.021, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_decommission_after_drain_is_invalid", "className": "nodetool_test.TestNodetool", "duration": 26.728, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nested_type_dropping", "className": "user_types_test.TestUserTypes", "duration": 26.527, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_no_results", "className": "paging_test.TestPagingSize", "duration": 24.905, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "cleanup_test", "className": "largecolumn_test.TestLargeColumn", "duration": 19.172, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 40, in cleanup_test\n    debug(\"Before stress {0}\".format(self.directbytes(node1)))\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 20, in directbytes\n    assert output[0].strip().startswith(\"Interval\"), \"Expected output from nodetool gcstats starts with a header line with first column Interval\"\n'Expected output from nodetool gcstats starts with a header line with first column Interval\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SBOLfj\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "Expected output from nodetool gcstats starts with a header line with first column Interval\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SBOLfj\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "alter_cf_auth_test", "className": "auth_test.TestAuth", "duration": 19.046, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "use_custom_ssl_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 17.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 12.138, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "select_using_secondary_index_test", "className": "json_test.FromJsonSelectTests", "duration": 9.387, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_indexes_on_single_map_column", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 8.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "test_nodetool_scrub", "className": "scrub_test.TestScrub", "duration": 8.116, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 338, in test_nodetool_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Aq5IZK\\n--------------------- >> end captured logging << ---------------------'", "age": 10, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Aq5IZK\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_super_add", "className": "thrift_tests.TestMutations", "duration": 7.685, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_supercolumn", "className": "thrift_tests.TestMutations", "duration": 7.569, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_batch_calls", "className": "thrift_tests.TestMutations", "duration": 7.375, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_table_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.552, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_cql_disabled_with_alter_test", "className": "compression_test.TestCompression", "duration": 7.175, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_cql_enabled_with_alter_test", "className": "compression_test.TestCompression", "duration": 7.177, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.013, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 36.877, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.117, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4040, in select_count_paging_test\n    assert_one(cursor, \"select count(*) from test where field3 = false limit 1;\", [2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-C9yddF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-C9yddF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.174, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4424, in whole_set_conditional_test\n    check_applies(\"s = {'bar', 'foo'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4422, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, set(['bar', 'foo'])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GFk5OO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GFk5OO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.707, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "static_with_empty_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.097, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4732, in static_with_empty_clustering_test\n    assert_one(cursor, \"SELECT * FROM test\", ['partition1', '', 'static value', 'value'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HgIAR8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HgIAR8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.955, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3399, in bug_6115_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xqk3pB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xqk3pB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_limit_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.226, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.605, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.383, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mAPsxB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mAPsxB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 42.172, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.171, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JW6abF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JW6abF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.734, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2694, in clustering_indexing_test\n    res = cursor.execute(\"SELECT v1 FROM posts WHERE time = 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ffXmLL\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ffXmLL\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "rename_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.966, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2916, in rename_test\n    assert_one(cursor, \"SELECT foo1, foo2, foo3 FROM test\", [4, 3, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[4, 3, 2]] from SELECT foo1, foo2, foo3 FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XewbJr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Expected [[4, 3, 2]] from SELECT foo1, foo2, foo3 FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XewbJr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "expanded_list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.62, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "nonpure_function_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.253, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.77, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "column_name_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.223, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.719, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4532_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.875, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 30.958, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 718, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2RWxrz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\n--------------------- >> end captured logging << ---------------------'", "age": 36, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2RWxrz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "single_file_split_test", "className": "sstablesplit_test.TestSSTableSplit", "duration": 473.078, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "-- ma-27-big-Data.db-----\n-- ma-42-big-Data.db-----\n-- ma-22-big-Data.db-----\n-- ma-16-big-Data.db-----\n-- ma-53-big-Data.db-----\n-- ma-59-big-Data.db-----\n-- ma-32-big-Data.db-----\n-- ma-62-big-Data.db-----\n-- ma-46-big-Data.db-----\n-- ma-17-big-Data.db-----\n-- ma-51-big-Data.db-----\n-- ma-21-big-Data.db-----\n-- ma-25-big-Data.db-----\n-- ma-49-big-Data.db-----\n-- ma-43-big-Data.db-----\n-- ma-15-big-Data.db-----\n-- ma-48-big-Data.db-----\n-- ma-30-big-Data.db-----\n-- ma-19-big-Data.db-----\n-- ma-\n...[truncated 66 chars]...\n-----\n-- ma-45-big-Data.db-----\n-- ma-23-big-Data.db-----\n-- ma-38-big-Data.db-----\n-- ma-31-big-Data.db-----\n-- ma-40-big-Data.db-----\n-- ma-61-big-Data.db-----\n-- ma-26-big-Data.db-----\n-- ma-24-big-Data.db-----\n-- ma-13-big-Data.db-----\n-- ma-54-big-Data.db-----\n-- ma-57-big-Data.db-----\n-- ma-28-big-Data.db-----\n-- ma-64-big-Data.db-----\n-- ma-18-big-Data.db-----\n-- ma-14-big-Data.db-----\n-- ma-37-big-Data.db-----\n-- ma-12-big-Data.db-----\n-- ma-29-big-Data.db-----\n-- ma-35-big-Data.db-----\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "wide_row_test", "className": "putget_test.TestPutGet", "duration": 244.833, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 150.47, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multiple_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 139.536, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test", "className": "incremental_repair_test.TestIncRepair", "duration": 66.845, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "abortedcompaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 154.353, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 73.472, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "empty_vs_gcable_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 133.185, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 79.735, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter", "className": "write_failures_test.TestWriteFailures", "duration": 58.603, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "change_durable_writes_test", "className": "configuration_test.TestConfiguration", "duration": 51.817, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_chunk_length_test", "className": "configuration_test.TestConfiguration", "duration": 7.056, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_random", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 39.966, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.819, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.195, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_on_non_reserved_keywords", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.152, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_with_internode_ssl_without_compression_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 36.763, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "load_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 31.532, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_secondary_indexing", "className": "user_types_test.TestUserTypes", "duration": 29.8, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tombstone_failure_threshold_message_test", "className": "pushed_notifications_test.TestVariousNotifications", "duration": 28.155, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tuple_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 25.801, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multi_index_filtering_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 7.191, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "clustering_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.007, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 22.814, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "die_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 20.708, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commitlog_replay_on_startup", "className": "commitlog_test.TestCommitLog", "duration": 12.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "only_superuser_alters_superuser_status_test", "className": "auth_test.TestAuth", "duration": 17.262, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_ks_auth_test", "className": "auth_test.TestAuth", "duration": 17.792, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_ttl_has_priority_on_defaut_ttl_test", "className": "ttl_test.TestTTL", "duration": 13.791, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_column_family_operations", "className": "thrift_tests.TestMutations", "duration": 7.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_entire_row", "className": "thrift_tests.TestMutations", "duration": 7.874, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cas", "className": "thrift_tests.TestMutations", "duration": 7.413, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_with_standard_under", "className": "thrift_tests.TestMutations", "duration": 7.569, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get", "className": "thrift_tests.TestCompactStorageThriftAccesses", "duration": 7.608, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "table_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 8.635, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.989, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_gcgs_below_threshold_multi_table_test", "className": "batch_test.TestBatch", "duration": 7.748, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_accepts_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.429, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_table_datatype_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.721, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_table_datatype_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.698, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 358.594, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 345, in test_undefined_page_size_default\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n'Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SqfWbv\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ncassandra.cluster: ERROR: Unexpected exception while handling result in ResponseFuture:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 3013, in cassandra.cluster.ResponseFuture._set_result (cassandra/cluster.c:57100)\\n    self._set_final_exception(response.to_exception())\\n  File \"cassandra/cluster.py\", line 3122, in cassandra.cluster.ResponseFuture._set_final_exception (cassandra/cluster.c:60216)\\n    fn(response, *args, **kwargs)\\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 90, in handle_error\\n    raise exc\\nReadFailure: code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\ncassandra.connection: ERROR: Callback handler errored, ignoring:\\nTraceback (most recent call last):\\n  File \"cassandra/connection.py\", line 583, in cassandra.connection.Connection.process_msg (cassandra/connection.c:13106)\\n    callback(response)\\n  File \"cassandra/cluster.py\", line 3048, in cassandra.cluster.ResponseFuture._set_result (cassandra/cluster.c:57976)\\n    self._set_final_exception(exc)\\n  File \"cassandra/cluster.py\", line 3122, in cassandra.cluster.ResponseFuture._set_final_exception (cassandra/cluster.c:60216)\\n    fn(response, *args, **kwargs)\\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 90, in handle_error\\n    raise exc\\nReadFailure: code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SqfWbv\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ncassandra.cluster: ERROR: Unexpected exception while handling result in ResponseFuture:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 3013, in cassandra.cluster.ResponseFuture._set_result (cassandra/cluster.c:57100)\n    self._set_final_exception(response.to_exception())\n  File \"cassandra/cluster.py\", line 3122, in cassandra.cluster.ResponseFuture._set_final_exception (cassandra/cluster.c:60216)\n    fn(response, *args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 90, in handle_error\n    raise exc\nReadFailure: code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\ncassandra.connection: ERROR: Callback handler errored, ignoring:\nTraceback (most recent call last):\n  File \"cassandra/connection.py\", line 583, in cassandra.connection.Connection.process_msg (cassandra/connection.c:13106)\n    callback(response)\n  File \"cassandra/cluster.py\", line 3048, in cassandra.cluster.ResponseFuture._set_result (cassandra/cluster.c:57976)\n    self._set_final_exception(exc)\n  File \"cassandra/cluster.py\", line 3122, in cassandra.cluster.ResponseFuture._set_final_exception (cassandra/cluster.c:60216)\n    fn(response, *args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 90, in handle_error\n    raise exc\nReadFailure: code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 69.034, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 248, in test_with_less_results_than_page_size\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CL2cPs\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CL2cPs\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 700, "skippedMessage": null, "name": "select_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 96.469, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3263, in select_distinct_test\n    res = cursor.execute('SELECT DISTINCT pk0, pk1 FROM regular LIMIT 1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7dlvcj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 21, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7dlvcj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.042, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "token_range_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.955, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1061, in token_range_test\n    rows = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vEh_NP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vEh_NP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_clause_wide_rows_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.798, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.144, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.01, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.942, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.393, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FF8cLJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FF8cLJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.188, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "limit_sparse_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.823, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 423, in limit_sparse_test\n    res = cursor.execute(\"SELECT * FROM clicks LIMIT 4\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G3nVnX\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G3nVnX\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "rename_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.933, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2916, in rename_test\n    assert_one(cursor, \"SELECT foo1, foo2, foo3 FROM test\", [4, 3, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-z9fvu5\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-z9fvu5\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.153, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "map_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.079, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1406, in map_test\n    res = cursor.execute(\"SELECT m FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9TJhHs\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9TJhHs\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.065, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bpTYVn\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bpTYVn\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "tuple_notation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.002, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "exclusive_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.164, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "row_existence_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.689, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1613, in row_existence_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f6ASqW\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f6ASqW\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.245, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes2RF1", "duration": 70.875, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 32.332, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 859, in static_columns_paging_test\n    results = list(cursor.execute(\"SELECT %s FROM test\" % selector))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gQLhFR\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gQLhFR\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "logged_batch_compatibility_4_test", "className": "batch_test.TestBatch", "duration": 104.898, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 319, in logged_batch_compatibility_4_test\n    self._logged_batch_compatibility_test(2, 2, 'git:cassandra-2.2', 1)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 339, in _logged_batch_compatibility_test\n    rows = session.execute(\"SELECT id, firstname, lastname FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2yma1R\\ndtest: DEBUG: Testing with 1 node(s) at version \\'git:cassandra-2.2\\', 2 node(s) at current version\\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\\ndtest: DEBUG: Creating schema...\\ndtest: DEBUG: Upgrading node1\\ndtest: DEBUG: Shutting down node: node1\\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\\ndtest: DEBUG: Starting node1 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\ndtest: DEBUG: Upgrading node2\\ndtest: DEBUG: Shutting down node: node2\\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\\ndtest: DEBUG: Starting node2 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2yma1R\ndtest: DEBUG: Testing with 1 node(s) at version 'git:cassandra-2.2', 2 node(s) at current version\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.2\ndtest: DEBUG: Creating schema...\ndtest: DEBUG: Upgrading node1\ndtest: DEBUG: Shutting down node: node1\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\ndtest: DEBUG: Starting node1 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\ndtest: DEBUG: Upgrading node2\ndtest: DEBUG: Shutting down node: node2\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\ndtest: DEBUG: Starting node2 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableofflinerelevel_test", "className": "offline_tools_test.TestOfflineTools", "duration": 181.296, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_stopped_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 133.568, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "killed_wiped_node_cannot_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 98.025, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "read_from_bootstrapped_node_test", "className": "bootstrap_test.TestBootstrap", "duration": 91.17, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dont_test_archive_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 77.774, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_basic_snapshot_and_restore", "className": "snapshot_test.TestSnapshot", "duration": 13.051, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_refresh_schema_on_timeout_error", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 77.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_authenticates_correct_user", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 17.849, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:3:Unauthorized: code=2100 [Unauthorized] message=\"Only superusers can create a role with superuser status\"(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_uuid", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.373, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_while_node_down_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 64.167, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 45.876, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 37.976, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "rangeputget_test", "className": "putget_test.TestPutGet", "duration": 44.791, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_node_unavailabe_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 38.323, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_delete_test", "className": "consistency_test.TestConsistency", "duration": 30.777, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "quorum_available_during_failure_test", "className": "consistency_test.TestConsistency", "duration": 29.458, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "query_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.004, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crc_check_chance_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_2dc_rf1_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 26.17, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_1_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.351, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_3_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.323, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_test", "className": "auth_test.TestAuth", "duration": 17.706, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_schema_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 12.469, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "selecting_pkey_as_json_test", "className": "json_test.FromJsonSelectTests", "duration": 8.267, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 8.165, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_column", "className": "thrift_tests.TestMutations", "duration": 7.137, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_integer_order", "className": "thrift_tests.TestMutations", "duration": 7.084, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiget_slice_with_compact_table", "className": "thrift_tests.TestMutations", "duration": 7.065, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_standard_columns_blocking", "className": "thrift_tests.TestMutations", "duration": 7.096, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cf_remove", "className": "thrift_tests.TestMutations", "duration": 7.164, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_super_blocking", "className": "thrift_tests.TestMutations", "duration": 7.016, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_empty_slice", "className": "thrift_tests.TestMutations", "duration": 6.791, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_not_found_quorum", "className": "thrift_tests.TestMutations", "duration": 6.655, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_ring_on_invalid_keyspace", "className": "thrift_tests.TestMutations", "duration": 6.916, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.2", "name": "test_batch_mutate_remove_slice_part_of_supercolumns", "className": "thrift_tests.TestMutations", "duration": 6.445, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.282, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udt_table_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.358, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dropped_index_test", "className": "prepared_statements_test.TestPreparedStatements", "duration": 6.767, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "Number of matching rows: 10\nExecuting prepared statement with dropped index...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "basic_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 368.672, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 671, in basic_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NmKYKB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NmKYKB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 115.817, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes3RF3", "duration": 86.05, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "static_columns_with_2i_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.683, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3918, in static_columns_with_2i_test\n    assert_all(cursor, \"SELECT * FROM test WHERE v = 1\", [[0, 0, 42, 1], [0, 1, 42, 1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 54, in assert_all\n    assert list_res == expected, \"Expected %s from %s, but got %s\" % (expected, query, list_res)\n\"Expected [[0, 0, 42, 1], [0, 1, 42, 1]] from SELECT * FROM test WHERE v = 1, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-P0OEnH\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Expected [[0, 0, 42, 1], [0, 1, 42, 1]] from SELECT * FROM test WHERE v = 1, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-P0OEnH\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "nameless_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.638, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 922, in nameless_index_test\n    res = cursor.execute(\"SELECT id FROM users WHERE birth_year = 42\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LN6XF_\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LN6XF_\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "composite_index_collections_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.265, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2335, in composite_index_collections_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3vWFWp\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3vWFWp\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3vWFWp] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5ItGbG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3vWFWp\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3vWFWp\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3vWFWp] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5ItGbG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "date_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.553, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.096, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 54.557, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.567, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.299, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3720, in static_columns_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, None, 42, None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, None, 42, None]] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JS4hNh\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 8, "errorDetails": "Expected [[0, None, 42, None]] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JS4hNh\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.489, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1730, in range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QEKEM1\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QEKEM1\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QEKEM1] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SO0eDP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QEKEM1\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QEKEM1\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QEKEM1] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SO0eDP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_index_with_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1760, in composite_index_with_pk_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_VVFf7\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-_VVFf7\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-_VVFf7] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mjs1n8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_VVFf7\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-_VVFf7\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-_VVFf7] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mjs1n8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.154, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 484, in indexed_with_eq_test\n    res = cursor.execute(\"SELECT firstname FROM users WHERE userid = 550e8400-e29b-41d4-a716-446655440000 AND age = 33\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NKRCU7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 20, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NKRCU7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.455, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.452, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.265, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z0x2Iw\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Z0x2Iw\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.789, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.297, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "noncomposite_static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.064, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 145, in noncomposite_static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ALLH9s\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ALLH9s\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 29.634, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 81.131, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 345, in test_undefined_page_size_default\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uFdaD0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uFdaD0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_1_test", "className": "batch_test.TestBatch", "duration": 86.518, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_first_boot_test", "className": "replace_address_test.TestReplaceAddress", "duration": 158.731, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "resumable_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 143.353, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_test", "className": "counter_tests.TestCounters", "duration": 109.124, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "consistent_reads_after_bootstrap_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 88.59, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.717, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_index_file_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 36.609, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6924_dropping_ks", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 66.016, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_one", "className": "write_failures_test.TestWriteFailures", "duration": 67.42, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "system_auth_ks_is_alterable_test", "className": "auth_test.TestAuth", "duration": 55.951, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 47.436, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 41.074, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 33.139, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "paging_test.TestPagingData", "duration": 27.625, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_with_empty_non_static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 25.124, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "paging_test.TestPagingWithModifiers", "duration": 24.165, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_super_remove", "className": "thrift_tests.TestMutations", "duration": 27.169, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_cf_recreate", "className": "thrift_tests.TestMutations", "duration": 7.841, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_add", "className": "thrift_tests.TestMutations", "duration": 7.4, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_keyspace_operations", "className": "thrift_tests.TestMutations", "duration": 7.343, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_muliget_slice", "className": "thrift_tests.TestMutations", "duration": 7.157, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_with_remove", "className": "thrift_tests.TestMutations", "duration": 6.994, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 6.852, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert", "className": "thrift_tests.TestMutations", "duration": 7.495, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_empty_range", "className": "thrift_tests.TestMutations", "duration": 7.005, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_standard", "className": "thrift_tests.TestMutations", "duration": 7.165, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_ring", "className": "thrift_tests.TestMutations", "duration": 6.994, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_copy_to", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 27.74, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_queries", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 18.761, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "select_element_inside_udt_test", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.06, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_keeps_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.126, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_allows_bad_pass_and_continued_use", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 17.903, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_reading_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.575, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "fixed_ratio_test", "className": "stress_tool_test.TestStressSparsenessRatio", "duration": 15.824, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_single_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.619, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_update_test", "className": "json_test.FromJsonUpdateTests", "duration": 9.598, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tombstone_size_test", "className": "deletion_test.TestDeletion", "duration": 8.235, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 6.789, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "static_column_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.42, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "edge_2i_on_complex_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 368.473, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2744, in edge_2i_on_complex_pk_test\n    res = cursor.execute(\"SELECT value FROM indexed WHERE pk0 = 2\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxKKYP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 70, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxKKYP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 105.617, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rfXL40\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 73, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rfXL40\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_function_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.242, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.977, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_and_reverse_type_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.316, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.25, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.505, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "blobAs_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.207, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.057, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 89.213, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 36.066, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 45.876, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 35.901, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "refuse_in_with_indexes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.229, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.184, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.295, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "limit_sparse_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.257, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 423, in limit_sparse_test\n    res = cursor.execute(\"SELECT * FROM clicks LIMIT 4\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UOgZd0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UOgZd0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.974, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.101, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-91wzIO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-91wzIO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "timeuuid_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.038, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2605, in timeuuid_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5sSRCz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5sSRCz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_partition_key_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.92, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2429, in composite_partition_key_validation_test\n    res = cursor.execute(\"SELECT * FROM foo\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0XtSUx\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0XtSUx\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.059, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 58.956, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 595, in test_with_allow_filtering\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ggbgd1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ggbgd1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 35.866, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_2_test", "className": "batch_test.TestBatch", "duration": 121.38, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "consistent_reads_after_write_test", "className": "materialized_views_test.TestMaterializedViewsConsistency", "duration": 230.334, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "\n0\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\n1100\n1200\n1300\n1400\n1500\n1600\n1700\n1800\n1900\n2000\n2100\n2200\n2300\n2400\n2500\n2600\n2700\n2800\n2900\n3000\n3100\n3200\n3300\n3400\n3500\n3600\n3700\n3800\n3900\n4000\n4100\n4200\n4300\n4400\n4500\n4600\n4700\n4800\n4900\n5000\n5100\n5200\n5300\n5400\n5500\n5600\n5700\n5800\n5900\n6000\n6100\n6200\n6300\n6400\n6500\n6600\n6700\n6800\n6900\n7000\n7100\n7200\n7300\n7400\n7500\n7600\n7700\n7800\n7900\n8000\n8100\n8200\n8300\n8400\n8500\n8600\n8700\n8800\n8900\n9000\n9100\n9200\n9300\n9400\n9500\n9600\n9700\n9800\n9900\n10000\n10100\n...[truncated 57692 chars]...\n125; extra: 0; missing: 0\nOn 99000; match: 150; extra: 0; missing: 0\nOn 99100; match: 175; extra: 0; missing: 0\nOn 99200; match: 200; extra: 0; missing: 0\nOn 99300; match: 225; extra: 0; missing: 0\nOn 99400; match: 250; extra: 0; missing: 0\nOn 99500; match: 275; extra: 0; missing: 0\nOn 99600; match: 300; extra: 0; missing: 0\nOn 99700; match: 325; extra: 0; missing: 0\nOn 99800; match: 350; extra: 0; missing: 0\nOn 99900; match: 375; extra: 0; missing: 0\nOn 100000; match: 400; extra: 0; missing: 0\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "base_replica_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 91.986, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_mv_select_statements_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 59.332, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_table_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 28.028, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_decommission_test", "className": "topology_test.TestTopology", "duration": 125.39, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ignore_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 85.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_compressed_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 48.513, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 79.443, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_expand_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.059, "errorStackTrace": null, "age": 120, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_collapse_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.059, "errorStackTrace": null, "age": 120, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_slice_query_with_tombstones_test", "className": "read_repair_test.TestRepairDataSystemTable", "duration": 67.716, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "manual_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 49.758, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "begin_test", "className": "jmxmetrics_test.TestJMXMetrics", "duration": 35.335, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_murmur3", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 38.452, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_reading_use_header", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.463, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_alter_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.18, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_update", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.013, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_insert", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.114, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_connect_timeout", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.546, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "get_test_table_output", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 0.059, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 34.593, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_only_coordinator_chooses_index_for_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 29.955, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 26.115, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 23.17, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 10.526, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 0.059, "errorStackTrace": null, "age": 215, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 23.665, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 0.06, "errorStackTrace": null, "age": 215, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.06, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "use_custom_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 20.044, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_users_test", "className": "auth_test.TestAuth", "duration": 17.258, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superuser_can_create_users_test", "className": "auth_test.TestAuth", "duration": 0.059, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_disabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.318, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 106, in hintedhandoff_disabled_test\n    self.assertEqual('Hinted handoff is not running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is not running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rdJztW\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is not running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rdJztW\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_map_ttl_test", "className": "ttl_test.TestTTL", "duration": 14.839, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_ttl_works_without_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 9.589, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_update_expiring", "className": "thrift_tests.TestMutations", "duration": 8.774, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_super_column_family_operations", "className": "thrift_tests.TestMutations", "duration": 7.229, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_collation", "className": "thrift_tests.TestMutations", "duration": 7.088, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cf_remove_column", "className": "thrift_tests.TestMutations", "duration": 7.047, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_and_range_slice", "className": "thrift_tests.TestMutations", "duration": 7.15, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 7.079, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_truncate", "className": "thrift_tests.TestTruncate", "duration": 7.49, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "json_test.ToJsonSelectTests", "duration": 7.742, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.654, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_udf_test", "className": "user_functions_test.TestUserFunctions", "duration": 8.132, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.579, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_aggregate_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.677, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_migration", "className": "user_functions_test.TestUserFunctions", "duration": 34.021, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_overload_test", "className": "user_functions_test.TestUserFunctions", "duration": 32.809, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_scripting_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.495, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.353, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_compact_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.058, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "3.0.0 > 2.0.x", "name": "keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_update_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 5, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_with_empty_clustering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_partition_key_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_old_property_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "nameless_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "allow_filtering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "noncomposite_static_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "create_alter_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "multi_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4882_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.108, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "remove_range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_with_collections_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "identifier_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.108, "errorStackTrace": null, "age": 129, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "3.0.0 > 2.0.x", "name": "compression_option_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_function_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 695, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_clustering_and_static_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 26, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_sparse_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 706, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6327_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 15, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_comparator_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "tuple_notation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 700, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 21, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "negative_timestamp_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "dynamic_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "delete_row_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_and_regular_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_simple_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "float_with_exponent_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 701, "skippedMessage": "3.0.0 > 2.0.x", "name": "indexed_with_eq_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 20, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "conversion_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 583, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_counter_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 138, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 712, "skippedMessage": "3.0.0 > 2.0.x", "name": "map_item_conditional_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 9, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "token_range_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 71, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "timeuuid_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "3.0.0 > 2.0.x", "name": "create_invalid_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 36, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "compact_metadata_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "set_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "Hanging the build", "name": "contention_test_multi_iterations", "className": "paxos_tests.TestPaxos", "duration": 0.055, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0", "name": "metadata_reset_while_compact_test", "className": "metadata_tests.TestMetadata", "duration": 0.056, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "bug_5732_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 339.617, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 5186, in bug_5732_test\n    assert_all(cursor, \"SELECT k FROM ks.test WHERE v = 0\", [[0]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: Using jna.jar in CASSANDRA_DIR/lib..\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ne7xep\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.1:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2126, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:37783)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2146, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:38260)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 786, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9141)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5134)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6266)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.1\\', 9042)]. Last error: Connection refused\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 20, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: Using jna.jar in CASSANDRA_DIR/lib..\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ne7xep\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.1:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2126, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:37783)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2146, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:38260)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 786, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9141)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5134)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6266)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 706, "skippedMessage": null, "name": "bug_6327_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 40.205, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3546, in bug_6327_test\n    assert_one(cursor, \"SELECT v FROM test WHERE v IN (1, 0) ALLOW FILTERING\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QG8ad7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 15, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QG8ad7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "expanded_list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.956, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4349, in expanded_list_item_conditional_test\n    check_applies(\"l[1] < 'zzz'\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4347, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HVsnB8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HVsnB8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.279, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.945, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_key_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.36, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.297, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "column_name_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.213, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.798, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hmZuGM\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hmZuGM\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 68.489, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1083, in test_paging_using_secondary_indexes_with_static_cols\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AIk_Br\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AIk_Br\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_range_ghost_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.551, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1154, in no_range_ghost_test\n    unsorted_res = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7A3nG1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7A3nG1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.872, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cs1pey\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cs1pey\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cs1pey] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9Ivhp4\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cs1pey\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cs1pey\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cs1pey] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9Ivhp4\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.881, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "bug_5240_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.451, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2784, in bug_5240_test\n    res = cursor.execute(\"select * from test where severity = 3 and interval = 't' and seq =1;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G09jlD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G09jlD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "batch_and_list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.861, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1dXyze\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1dXyze\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.995, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u9iJQy\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u9iJQy\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_order_by_without_selecting_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.422, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 36.824, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 67.499, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 62.695, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1083, in test_paging_using_secondary_indexes_with_static_cols\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8rnDUp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8rnDUp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 65.375, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "split_test", "className": "sstablesplit_test.TestSSTableSplit", "duration": 393.311, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "-- ma-26-big-Data.db-----\n-- ma-50-big-Data.db-----\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_alters_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 239.36, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "snapshot_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 73.173, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_shutdown_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 125.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_active_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 92.111, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "functional_test", "className": "super_counter_test.TestSuperCounterClusterRestart", "duration": 86.401, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "empty_vs_gcable_sequential_repair_test", "className": "repair_test.TestRepair", "duration": 133.815, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_set_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 65.365, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "write_failures_test.TestWriteFailures", "duration": 59.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 43.125, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "table_metric_mbeans_test", "className": "jmx_test.TestJMX", "duration": 43.067, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nested_user_types", "className": "user_types_test.TestUserTypes", "duration": 34.358, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_user_type_isolation", "className": "user_types_test.TestUserTypes", "duration": 6.782, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_compression_error", "className": "commitlog_test.TestCommitLog", "duration": 33.816, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_closing_connections", "className": "thrift_hsha_test.ThriftHSHATest", "duration": 28.468, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_gcgs_validation", "className": "materialized_views_test.TestMaterializedViews", "duration": 27.949, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udt_test", "className": "udtencoding_test.TestUDTEncoding", "duration": 26.678, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 23.486, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 22.882, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_round_trip", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.511, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_int_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.82, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_source_copy_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 9.693, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_read", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.545, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_writing_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.213, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.718, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_3_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.59, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "nodetool_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.269, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 80, in nodetool_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-61yFcI\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-61yFcI\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "altering_nonexistent_user_throws_exception_test", "className": "auth_test.TestAuth", "duration": 16.721, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ghosts_test", "className": "range_ghost_test.TestRangeGhosts", "duration": 14.138, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 11.882, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "rename_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 7.632, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "index_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.147, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_rejects_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.484, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_validators", "className": "thrift_tests.TestMutations", "duration": 7.708, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_super", "className": "thrift_tests.TestMutations", "duration": 7.077, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_standard_columns", "className": "thrift_tests.TestMutations", "duration": 7.561, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_system_calls", "className": "thrift_tests.TestMutations", "duration": 7.236, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_tombstone_and_static", "className": "thrift_tests.TestCQLAccesses", "duration": 7.625, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_function_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "builtin_functions_require_no_special_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.497, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_create_drop_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.793, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_and_grant_roles_with_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.247, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_drop_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.731, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_drop_role_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.222, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_user_as_alias_for_create_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.959, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creator_of_db_resource_granted_all_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.418, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disallow_grant_execute_on_non_function_resources_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.934, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disallow_grant_revoke_on_builtin_functions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.921, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_and_revoke_roles_with_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.295, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_function_and_keyspace_cleans_up_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.402, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_keyspace_cleans_up_function_level_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.449, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_cleans_up_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.888, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_removes_memberships_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.993, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_revokes_permissions_granted_on_it_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.872, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "filter_granted_permissions_by_resource_type_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.15, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_resource_hierarchy_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.632, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_are_idempotent_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.876, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.784, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_role_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.346, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.864, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.9, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ignore_invalid_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.738, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "inheritence_of_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.264, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.726, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.733, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.275, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_users_considers_inherited_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.905, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "prevent_circular_grants_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.923, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_admin_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.699, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_caching_authenticated_user_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.699, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_name_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.495, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_requires_login_privilege_to_authenticate_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.754, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_requires_password_to_login_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.207, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "roles_do_not_inherit_login_privilege_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.032, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "superuser_status_is_inherited_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.373, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_delete_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.251, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_insert_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.479, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_select_where_clause_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.139, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_selection_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.238, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_update_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.221, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.519, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_overloads_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.142, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "nonpure_function_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.06, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_indexing_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6612_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "reserved_keyword_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 54, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_5240_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "dense_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_flush_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_blob_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "map_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "drop_and_readd_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 129, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6050_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_tombstones_compaction_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_row_key_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "refuse_in_with_indexes_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_key_ordered_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 8, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "column_name_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "only_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 720, "skippedMessage": "3.0.0 > 2.0.x", "name": "table_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "in_clause_wide_rows_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_string_literals_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_multiget_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_index_collections_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 71, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "count_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_with_deletions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 71, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_key_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_count_paging_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 5, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "boolean_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_with_deletes_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_with_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 70, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "table_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "keyspace_creation_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 130, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "list_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_and_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "ticket_5230_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "large_clustering_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "sparse_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "large_count_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 583, "skippedMessage": "3.0.0 > 2.0.x", "name": "update_type_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 138, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_with_alias_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 649, "skippedMessage": "3.0.0 > 2.0.x", "name": "simple_tuple_query_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 72, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "date_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_and_ttl_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "more_order_by_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "function_and_reverse_type_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 717, "skippedMessage": "3.0.0 > 2.0.x", "name": "list_item_conditional_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_delete_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_cas_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 8, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cfhistograms_test", "className": "jmx_test.TestJMX", "duration": 2834.119, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "undefined_column_handling_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.818, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1200, in undefined_column_handling_test\n    res = cursor.execute(\"SELECT v2 FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5wWb4I\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-5wWb4I\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-5wWb4I] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JqdWMS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5wWb4I\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-5wWb4I\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-5wWb4I] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JqdWMS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.941, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.502, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conversion_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.234, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 40.759, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.663, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.124, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LZ6H6e\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-LZ6H6e\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-LZ6H6e] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UBwOQD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LZ6H6e\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-LZ6H6e\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-LZ6H6e] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UBwOQD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conversion_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.267, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 59.121, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1730, in range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7uGjPG\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-7uGjPG\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-7uGjPG] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lVJ8Ul\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7uGjPG\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-7uGjPG\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-7uGjPG] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lVJ8Ul\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "nan_infinity_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.977, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3690, in nan_infinity_test\n    selected = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ge6WbA\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ge6WbA\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "batch_and_list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.51, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "date_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.99, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.624, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 99.944, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 859, in static_columns_paging_test\n    results = list(cursor.execute(\"SELECT %s FROM test\" % selector))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HVJK7n\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HVJK7n\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 31.628, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 81.709, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_to_22_test", "className": "upgrade_internal_auth_test.TestAuthUpgrade", "duration": 384.903, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-2.2)\nCompiling Cassandra cassandra-2.2 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "decommissioned_wiped_node_can_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 202.919, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "shutdown_wiped_node_cannot_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 98.39, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_sequential_repair_test", "className": "repair_test.TestRepair", "duration": 131.582, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "add_node_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 82.382, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "allow_filtering_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 39.664, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "query_all_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.508, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.501, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog_point_in_time", "className": "snapshot_test.TestArchiveCommitlog", "duration": 80.473, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 78.542, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_while_node_toggle_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 61.361, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_test", "className": "incremental_repair_test.TestIncRepair", "duration": 52.842, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "paging_test.TestPagingData", "duration": 48.955, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 30.11, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "paging_test.TestPagingSize", "duration": 24.651, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 38.841, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_nonexistent_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 28.938, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_batch_remove", "className": "thrift_tests.TestMutations", "duration": 26.866, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice_super", "className": "thrift_tests.TestMutations", "duration": 6.795, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_partial", "className": "thrift_tests.TestMutations", "duration": 7.003, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_missing_super", "className": "thrift_tests.TestMutations", "duration": 6.983, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_cf_names", "className": "thrift_tests.TestMutations", "duration": 7.038, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_then_drop_ks", "className": "thrift_tests.TestMutations", "duration": 7.184, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wrapped_range_slices", "className": "thrift_tests.TestMutations", "duration": 6.9, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multi_slice", "className": "thrift_tests.TestMutations", "duration": 7.113, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe", "className": "thrift_tests.TestMutations", "duration": 6.857, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_enabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.056, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 118, in hintedhandoff_enabled_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U93AI8\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U93AI8\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.588, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_cant_drop_themselves_test", "className": "auth_test.TestAuth", "duration": 16.767, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_column_ttl_with_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 16.594, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_multiple_columns_ttl_test", "className": "ttl_test.TestTTL", "duration": 10.426, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_scrub_with_UDT", "className": "scrub_test.TestScrub", "duration": 9.41, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub_essential_files_only", "className": "scrub_test.TestScrub", "duration": 7.735, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 404, in test_standalone_scrub_essential_files_only\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tZ8m4Z\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tZ8m4Z\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_scrub_static_table", "className": "scrub_test.TestScrubIndexes", "duration": 8.371, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 204, in test_scrub_static_table\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7h6gcc\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7h6gcc\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrubIndexes", "duration": 8.123, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 243, in test_standalone_scrub\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxQbYa\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxQbYa\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_explicit_column_order_reading", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.903, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_accepts_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.029, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "nondefault_table_settings_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.397, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compact_storage_composite_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.615, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 366.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1590, in cql3_insert_thrift_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: Using jna.jar in CASSANDRA_DIR/lib..\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EFn5uP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: Using jna.jar in CASSANDRA_DIR/lib..\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EFn5uP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 112.196, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1314, in delete_row_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-j0N18S\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-j0N18S\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_index_with_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.79, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1760, in composite_index_with_pk_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WdygJ2\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-WdygJ2\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-WdygJ2] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OkE5tq\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WdygJ2\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-WdygJ2\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-WdygJ2] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OkE5tq\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_limit_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.374, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_comparator_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.635, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.858, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1093, in timestamp_and_ttl_test\n    res = cursor.execute(\"SELECT k, c, writetime(c), ttl(c) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O2guhL\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 72, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O2guhL\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.99, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Zqrh1w\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Zqrh1w\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.902, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_order_and_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.947, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2936, in clustering_order_and_functions_test\n    cursor.execute(\"SELECT dateOf(t) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0kj34x\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0kj34x\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 69.902, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 818, in test_paging_using_secondary_indexes\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ggi38e\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ggi38e\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 34.567, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 31.936, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "select_distinct_with_deletions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.498, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3303, in select_distinct_with_deletions_test\n    rows = cursor.execute('SELECT DISTINCT k FROM t1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qQrbH1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qQrbH1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.468, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.074, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZvI4bI\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 73, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZvI4bI\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_with_deletes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.357, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2397, in range_with_deletes_test\n    res = cursor.execute(\"SELECT * FROM test LIMIT %d\" % (nb_keys / 2))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EM_CqQ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EM_CqQ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.077, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.407, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3720, in static_columns_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, None, 42, None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Wmh3wU\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 8, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Wmh3wU\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.344, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.088, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 37.528, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "create_lots_of_schema_churn_with_node_down_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 265.551, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 353, in create_lots_of_schema_churn_with_node_down_test\n    self._verify_lots_of_schema_actions(session)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 318, in _verify_lots_of_schema_actions\n    self.assertTrue(0 == len(errors), \"\\n\".join(errors))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 422, in assertTrue\n    raise self.failureException(msg)\n\"alter_me_14 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c7', u'id']\\nalter_me_18 column[s1] does not start with c and should have been dropped: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's1']\\nalter_me_18 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's1']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7N2Vps\\ndtest: DEBUG: waiting for things to settle and sync\\ndtest: DEBUG: validate_schema_consistent() node1\\ndtest: DEBUG: validate_schema_consistent() node2\\ndtest: DEBUG: validate_schema_consistent() node3\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "alter_me_14 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c7', u'id']\nalter_me_18 column[s1] does not start with c and should have been dropped: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's1']\nalter_me_18 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's1']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7N2Vps\ndtest: DEBUG: waiting for things to settle and sync\ndtest: DEBUG: validate_schema_consistent() node1\ndtest: DEBUG: validate_schema_consistent() node2\ndtest: DEBUG: validate_schema_consistent() node3\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_mv_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 136.591, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simultaneous_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 169.169, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "restart_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 103.236, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_consistency_test", "className": "counter_tests.TestCounters", "duration": 89.027, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_counter_update_test", "className": "counter_tests.TestCounters", "duration": 25.938, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_commit_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 82.377, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 66.582, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 64.954, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_quorum_delete_test", "className": "consistency_test.TestConsistency", "duration": 53.492, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_counters", "className": "consistency_test.TestAccuracy", "duration": 42.551, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6285", "className": "thrift_hsha_test.ThriftHSHATest", "duration": 47.26, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_with_internode_ssl_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 37.381, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wide_rows", "className": "wide_rows_test.TestWideRows", "duration": 31.004, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_doesnt_throw_uae_test", "className": "batch_test.TestBatch", "duration": 30.132, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_table_batch_for_10554_test", "className": "batch_test.TestBatch", "duration": 17.213, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_gcgs_below_threshold_single_table_test", "className": "batch_test.TestBatch", "duration": 7.144, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 25.553, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.095, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_number_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 22.175, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_undefined_as_null_indicator", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.123, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 6.972, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 6.995, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_clear", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.624, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "materialized_views_auth_test", "className": "auth_test.TestAuth", "duration": 17.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_auth_test", "className": "auth_test.TestAuth", "duration": 17.479, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_with_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 16.33, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_ttl_test", "className": "ttl_test.TestTTL", "duration": 9.512, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_schema_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 10.171, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "null_value_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 7.824, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_scrub_collections_table", "className": "scrub_test.TestScrubIndexes", "duration": 8.069, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 279, in test_scrub_collections_table\n    initial_sstables = self.flush('users', 'user_uuids_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2u7K53\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2u7K53\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_batch_add", "className": "thrift_tests.TestMutations", "duration": 7.021, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count_paging", "className": "thrift_tests.TestMutations", "duration": 6.988, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiget_slice", "className": "thrift_tests.TestMutations", "duration": 7.135, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_long_order", "className": "thrift_tests.TestMutations", "duration": 6.964, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_snitch", "className": "thrift_tests.TestMutations", "duration": 6.941, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_standard_columns", "className": "thrift_tests.TestMutations", "duration": 6.711, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.852, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.535, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "netstats_test", "className": "jmx_test.TestJMX", "duration": 1102.72, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 106.704, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4424, in whole_set_conditional_test\n    check_applies(\"s = {'bar', 'foo'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4422, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, set(['bar', 'foo'])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, set(['foo', 'bar'])]] from SELECT * FROM tset, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XTUQUt\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "Expected [[0, set(['foo', 'bar'])]] from SELECT * FROM tset, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XTUQUt\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "refuse_in_with_indexes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.575, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.123, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.94, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1S7p1W\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1S7p1W\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "whole_map_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.935, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4503, in whole_map_conditional_test\n    check_applies(\"m = {'foo': 'bar'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4501, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-q2t1MB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------\"", "age": 10, "errorDetails": "Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-q2t1MB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6327_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 49.592, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "dynamic_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.679, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 201, in dynamic_cf_test\n    res = cursor.execute(\"SELECT time FROM clicks\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dqk4Jt\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dqk4Jt\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.82, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1687, in no_clustering_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G1EeXu\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G1EeXu\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4882_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.737, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 37.79, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 35.108, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.592, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4618, in expanded_map_item_conditional_test\n    check_applies(\"m['xxx'] = null\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4616, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5CI8hy\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5CI8hy\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_range_ghost_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.498, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1154, in no_range_ghost_test\n    unsorted_res = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VdKHVN\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VdKHVN\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_custom_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.175, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.832, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 57, in static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-efoqA6\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-efoqA6\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.987, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "blobAs_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.154, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.24, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.568, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4311, in list_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vE1zso\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vE1zso\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "basic_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 32.143, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 671, in basic_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IDeLWC\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IDeLWC\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_reversed_test", "className": "consistency_test.TestConsistency", "duration": 435.755, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_with_reset_resume_state_test", "className": "replace_address_test.TestReplaceAddress", "duration": 254.647, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "really_complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 132.337, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 68.914, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 95.548, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "repair_parent_table_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 93.33, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 85.773, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_to_different_nodes_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 82.797, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_v3", "className": "write_failures_test.TestWriteFailures", "duration": 59.903, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "do_not_join_ring_test", "className": "topology_test.TestTopology", "duration": 46.709, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_keyspace_permission_isolation", "className": "user_types_test.TestUserTypes", "duration": 41.167, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nulls_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 27.116, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_correct_dc_rack_in_nodetool_info", "className": "nodetool_test.TestNodetool", "duration": 35.615, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_low_cardinality_indexes", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 33.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "paging_test.TestPagingData", "duration": 29.06, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "paging_test.TestPagingSize", "duration": 24.733, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 28.612, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "connect_to_ssl_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 23.032, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.018, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_disabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.6, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 131, in hintedhandoff_dc_disabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qZYFm1\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qZYFm1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.467, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_column_ttl_with_default_ttl_test2", "className": "ttl_test.TestTTL", "duration": 14.753, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_ttl_can_be_removed_test", "className": "ttl_test.TestTTL", "duration": 8.285, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 12.384, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "pkey_requirement_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 7.721, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_materialized_view", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 9.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commented_lines", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.196, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:6:SyntaxException: <ErrorMessage code=2000 [Syntax error in CQL query] message=\"line 1:0 no viable alternative at input ';' ([;])\">(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.834, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_index", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.242, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_delete", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_valid_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.609, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_slice", "className": "thrift_tests.TestMutations", "duration": 7.493, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_deletion", "className": "thrift_tests.TestMutations", "duration": 7.398, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_get", "className": "thrift_tests.TestMutations", "duration": 7.367, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_keyspace", "className": "thrift_tests.TestMutations", "duration": 7.332, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_insert", "className": "thrift_tests.TestMutations", "duration": 7.672, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.51, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_accepts_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.534, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_preparation_test", "className": "cql_prepared_test.TestCQL", "duration": 6.926, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "timeuuid_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 115.986, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2605, in timeuuid_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AoNKGa\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AoNKGa\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "static_columns_with_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.386, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3979, in static_columns_with_distinct_test\n    rows = list(cursor.execute(\"SELECT DISTINCT k, s FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6pex1M\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6pex1M\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.596, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.521, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "noncomposite_static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.086, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 145, in noncomposite_static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-clebSK\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-clebSK\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "float_with_exponent_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.995, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.032, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.415, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "range_key_ordered_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.612, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3120, in range_key_ordered_test\n    assert_all(cursor, \"SELECT * FROM test\", [[0], [1], [-1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S85FPn\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-S85FPn\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-S85FPn] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w_qgjF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 8, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S85FPn\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-S85FPn\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-S85FPn] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w_qgjF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 96.294, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 718, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UYBMAG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 36, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UYBMAG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 37.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "edge_2i_on_complex_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.839, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2744, in edge_2i_on_complex_pk_test\n    res = cursor.execute(\"SELECT value FROM indexed WHERE pk0 = 2\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pz8_Q1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pz8_Q1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.57, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1687, in no_clustering_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jMna3t\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jMna3t\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.66, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e9qAzj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e9qAzj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "nonpure_function_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.732, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 43.574, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3582, in large_count_test\n    assert_one(cursor, \"SELECT COUNT(*) FROM test\", [9999])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JkzYWr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JkzYWr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.384, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.166, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "undefined_column_handling_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.87, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1200, in undefined_column_handling_test\n    res = cursor.execute(\"SELECT v2 FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ruYXgI\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-ruYXgI\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-ruYXgI] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VAS2Z4\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ruYXgI\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-ruYXgI\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-ruYXgI] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VAS2Z4\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.712, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 281, in test_with_more_results_than_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NxXa7z\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NxXa7z\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 31.236, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 29.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy_users", "className": "consistency_test.TestAccuracy", "duration": 261.276, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy_counters", "className": "consistency_test.TestAccuracy", "duration": 132.652, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bootstrap_with_reset_bootstrap_state_test", "className": "bootstrap_test.TestBootstrap", "duration": 235.125, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "repair_table_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 91.75, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.854, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 82.643, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_any", "className": "write_failures_test.TestWriteFailures", "duration": 68.749, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_v4", "className": "write_failures_test.TestWriteFailures", "duration": 59.19, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "small_compressed_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 50.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "acknowledged_by_batchlog_set_when_batchlog_write_succeeds_test", "className": "batch_test.TestBatch", "duration": 46.356, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_rejects_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.74, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_gcgs_below_threshold_should_not_print_warning_test", "className": "batch_test.TestBatch", "duration": 7.954, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_manual_rebuild_index", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 48.223, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 34.274, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 34.16, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 23.239, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 29.156, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "paging_test.TestPagingSize", "duration": 24.927, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_as_part_of_pkey", "className": "user_types_test.TestUserTypes", "duration": 27.753, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_replicated_test", "className": "ttl_test.TestDistributedTTL", "duration": 27.217, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.224, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_1_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.756, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_auth_test", "className": "auth_test.TestAuth", "duration": 17.275, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_validation_test", "className": "auth_test.TestAuth", "duration": 18.025, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cant_create_existing_user_test", "className": "auth_test.TestAuth", "duration": 17.984, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_float_formatting", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 9.425, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_eat_glass", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.141, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.334, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_describes_non_default_compaction_parameters", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.48, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_invalid_float", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.176, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_dynamic_indexes_creation_deletion", "className": "thrift_tests.TestMutations", "duration": 9.531, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_strategy_class", "className": "thrift_tests.TestMutations", "duration": 7.812, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_with_none_given_underneath", "className": "thrift_tests.TestMutations", "duration": 8.0, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert", "className": "thrift_tests.TestMutations", "duration": 7.577, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter_get_slice_super_range", "className": "thrift_tests.TestMutations", "duration": 7.735, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_reinsert", "className": "thrift_tests.TestMutations", "duration": 7.656, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 8.671, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_counter_column_test", "className": "counter_tests.TestCounters", "duration": 7.395, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compact_storage_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "map_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 104.446, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1406, in map_test\n    res = cursor.execute(\"SELECT m FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ms9cN1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ms9cN1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.555, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.253, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "sparse_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.605, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.058, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.435, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.425, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "select_distinct_with_deletions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.965, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3303, in select_distinct_with_deletions_test\n    rows = cursor.execute('SELECT DISTINCT k FROM t1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BIqo5F\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BIqo5F\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_partition_key_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.308, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2429, in composite_partition_key_validation_test\n    res = cursor.execute(\"SELECT * FROM foo\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8ljR34\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8ljR34\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "collection_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.261, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3625, in collection_indexing_test\n    assert_all(cursor, \"SELECT k, v FROM test WHERE l CONTAINS 1\", [[1, 0], [0, 0], [0, 2]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8wKZTb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8wKZTb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "composite_index_collections_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.789, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2335, in composite_index_collections_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MPs9bu\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-MPs9bu\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-MPs9bu] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qIBkCz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MPs9bu\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-MPs9bu\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-MPs9bu] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qIBkCz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.113, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "token_range_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.623, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1061, in token_range_test\n    rows = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-a2N6bA\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 71, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-a2N6bA\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.996, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "large_clustering_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.031, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "collection_flush_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.08, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3240, in collection_flush_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, set([2])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Enxx9V\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Enxx9V\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.117, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4682, in cas_and_list_index_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, ['foo', 'bar'], 'foobar'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dOGEYo\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dOGEYo\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4882_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.335, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 38.159, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3385, in bug_6069_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, {1, 2, 3}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FLl6JS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FLl6JS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 35.963, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.056, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "short_read_test", "className": "consistency_test.TestConsistency", "duration": 41.805, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 625, in short_read_test\n    self.stop_delete_and_restart(1, 0)\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 823, in stop_delete_and_restart\n    session = self.patient_cql_connection(next_node, 'ks')\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.3': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zeO75T\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.3': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zeO75T\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "crc_check_chance_upgrade_test", "className": "upgrade_crc_check_chance_test.TestCrcCheckChanceUpgrade", "duration": 189.924, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_crc_check_chance_test.py\", line 35, in crc_check_chance_upgrade_test\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mom1eC\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mom1eC\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "dc_repair_test", "className": "repair_test.TestRepair", "duration": 68.674, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 252, in dc_repair_test\n    cluster = self._setup_multi_dc()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 291, in _setup_multi_dc\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3veOhz\\ndtest: DEBUG: Starting cluster..\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3veOhz\ndtest: DEBUG: Starting cluster..\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crash_during_decommission_test", "className": "topology_test.TestTopology", "duration": 162.472, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 174.022, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/replication_test.py\", line 367, in test_rf_expand_gossiping_property_file_snitch_multi_dc\n    final_racks=[\"rack0\", \"rack1\", \"rack2\", \"rack0\", \"rack1\", \"rack2\"])\n  File \"/home/automaton/cassandra-dtest/replication_test.py\", line 472, in _test_rf_on_snitch_update\n    session = self.patient_cql_connection(cluster.nodelist()[0])\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l90WCG\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l90WCG\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_archive_commitlog_with_active_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 31.905, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 141, in test_archive_commitlog_with_active_commitlog\n    self.run_archive_commitlog(restore_point_in_time=False, archive_active_commitlogs=True)\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 174, in run_archive_commitlog\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ypUjyg\\ndtest: DEBUG: tmp_commitlog: /mnt/tmp/tmpuTlpDG\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ypUjyg\ndtest: DEBUG: tmp_commitlog: /mnt/tmp/tmpuTlpDG\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 47.132, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 112, in sstableloader_compression_deflate_to_none_test\n    self.load_sstable_with_configuration('Deflate', None)\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 147, in load_sstable_with_configuration\n    session = self.cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xP_zID\\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=None\\ndtest: DEBUG: creating keyspace and inserting\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xP_zID\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=None\ndtest: DEBUG: creating keyspace and inserting\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "restart_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 94.893, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/pushed_notifications_test.py\", line 202, in restart_node_localhost_test\n    waiter = NotificationWaiter(self, node1, [\"STATUS_CHANGE\", \"TOPOLOGY_CHANGE\"])\n  File \"/home/automaton/cassandra-dtest/pushed_notifications_test.py\", line 30, in __init__\n    session = tester.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'localhost': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qsljgu\\ndtest: DEBUG: None\\ndtest: DEBUG: None\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'localhost': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qsljgu\ndtest: DEBUG: None\ndtest: DEBUG: None\n--------------------- >> end captured logging << ---------------------", "stdout": "node1: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9160)\n       binary=('localhost', 9161)\n       storage=('127.0.0.1', 7000)\n       jmx_port=7100\n       remote_debug_port=0\n       initial_token=-9223372036854775808\nnode2: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9162)\n       binary=('localhost', 9163)\n       storage=('127.0.0.2', 7000)\n       jmx_port=7200\n       remote_debug_port=0\n       initial_token=0\n", "skipped": false, "stderr": "/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9161 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9163 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n"}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 39.83, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 145, in dtcs_deletion_test\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8eyv1U\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8eyv1U\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 42.187, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 313, in disable_autocompaction_schema_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Id7xu4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Id7xu4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 34.995, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 373, in disable_autocompaction_alter_and_nodetool_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oMkRjX\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oMkRjX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 40.049, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 258, in large_compaction_warning_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ICBQ6U\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ICBQ6U\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "paging_test.TestPagingData", "duration": 93.992, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/paging_test.py\", line 580, in test_paging_a_single_wide_row\n    session = self.prepare()\n  File \"/home/automaton/cassandra-dtest/paging_test.py\", line 186, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cOz8CH\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cOz8CH\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_paging_with_in_orderby_and_two_partition_keys", "className": "paging_test.TestPagingData", "duration": 68.496, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/paging_test.py\", line 671, in test_paging_with_in_orderby_and_two_partition_keys\n    session = self.prepare()\n  File \"/home/automaton/cassandra-dtest/paging_test.py\", line 186, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k3CSl4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k3CSl4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "acknowledged_by_batchlog_not_set_when_batchlog_write_fails_test", "className": "batch_test.TestBatch", "duration": 70.075, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 193, in acknowledged_by_batchlog_not_set_when_batchlog_write_fails_test\n    session = self.prepare(nodes=3, compression=False)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 374, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MxFC7M\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MxFC7M\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "delete_insert_search_test", "className": "delete_insert_test.DeleteInsertTest", "duration": 91.836, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/delete_insert_test.py\", line 47, in delete_insert_search_test\n    session = self.cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Ue3jm\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Ue3jm\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "populate_mv_after_insert_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 85.598, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 137, in populate_mv_after_insert_test\n    session = self.prepare()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HjgVF5\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HjgVF5\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "prepared_statement_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 76.139, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 171, in prepared_statement_test\n    session = self.prepare(user_table=True)\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XTrdHF\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XTrdHF\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "create_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 80.802, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 71, in create_test\n    session = self.prepare(user_table=True)\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rpoqB6\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rpoqB6\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_incr_standard_remove", "className": "thrift_tests.TestMutations", "duration": 24.688, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6oz9hk\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6oz9hk\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_index_scan_expiring", "className": "thrift_tests.TestMutations", "duration": 27.395, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6oz9hk\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6oz9hk] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FU423N\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6oz9hk\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6oz9hk] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FU423N\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_simple_expiration_batch_mutate", "className": "thrift_tests.TestMutations", "duration": 27.499, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-FU423N\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-FU423N] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-trKi7r\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-FU423N\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-FU423N] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-trKi7r\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_multi_count", "className": "thrift_tests.TestMutations", "duration": 25.579, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-trKi7r\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-trKi7r] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W3W58a\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-trKi7r\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-trKi7r] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W3W58a\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_of_entire_supercolumns", "className": "thrift_tests.TestMutations", "duration": 27.689, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-W3W58a\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-W3W58a] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8ti06q\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-W3W58a\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-W3W58a] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8ti06q\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_long_remove", "className": "thrift_tests.TestMutations", "duration": 30.074, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-8ti06q\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-8ti06q] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-D8iMJ_\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-8ti06q\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-8ti06q] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-D8iMJ_\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_bad_calls", "className": "thrift_tests.TestMutations", "duration": 27.496, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-D8iMJ_\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-D8iMJ_] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b2Lcuf\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-D8iMJ_\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-D8iMJ_] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b2Lcuf\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_batch_mutate_super_deletion", "className": "thrift_tests.TestMutations", "duration": 25.49, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-b2Lcuf\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-b2Lcuf] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PuyDS1\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-b2Lcuf\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-b2Lcuf] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PuyDS1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_column_name_lengths", "className": "thrift_tests.TestMutations", "duration": 28.735, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-PuyDS1\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-PuyDS1] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GMFCOt\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-PuyDS1\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-PuyDS1] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GMFCOt\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "collection_list_ttl_test", "className": "ttl_test.TestTTL", "duration": 26.565, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 237, in wrapped_setUp\n    orig_setUp(obj, *args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/ttl_test.py\", line 25, in setUp\n    self.session1 = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gzdria\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gzdria\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "users_cant_alter_their_superuser_status_test", "className": "auth_test.TestAuth", "duration": 42.144, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 161, in users_cant_alter_their_superuser_status_test\n    session = self.get_session(user='cassandra', password='cassandra')\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 621, in get_session\n    conn = self.patient_cql_connection(node, user=user, password=password)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rxZUz_\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rxZUz_\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "conditional_create_drop_user_test", "className": "auth_test.TestAuth", "duration": 35.858, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 186, in conditional_create_drop_user_test\n    session = self.get_session(user='cassandra', password='cassandra')\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 621, in get_session\n    conn = self.patient_cql_connection(node, user=user, password=password)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3msqQi\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3msqQi\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_read_invalid_uuid", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 25.667, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 655, in test_read_invalid_uuid\n    self.data_validation_on_read_template(uuid4(), expect_invalid=True)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 611, in data_validation_on_read_template\n    self.prepare()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 73, in prepare\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uWwfy4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uWwfy4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_empty_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 22.596, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cls", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 18.232, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "test_create_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 26.233, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1478, in setUp\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Iylxrf\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Iylxrf\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "compression_cql_options_test", "className": "compression_test.TestCompression", "duration": 25.635, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 55, in compression_cql_options_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XZuUhc\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XZuUhc\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "disable_compression_cql_test", "className": "compression_test.TestCompression", "duration": 31.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 30, in disable_compression_cql_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aqF9_J\\n--------------------- >> end captured logging << ---------------------\"", "age": 9, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aqF9_J\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "creating_and_dropping_table_with_2ary_indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 28.315, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 534, in setUp\n    self.session = self.patient_cql_connection(cluster.nodelist()[0])\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UW9TMZ\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UW9TMZ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 37.0, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cql_tests.py\", line 267, in cql3_insert_thrift_test\n    session = self.prepare(start_rpc=True)\n  File \"/home/automaton/cassandra-dtest/cql_tests.py\", line 46, in prepare\n    session = self.patient_cql_connection(node1, protocol_version=protocol_version, user=user, password=password)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UGaIWu\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UGaIWu\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 720, "skippedMessage": null, "name": "validate_empty_column_name_test", "className": "counter_tests.TestCounters", "duration": 25.89, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/counter_tests.py\", line 237, in validate_empty_column_name_test\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 821, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11250)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 847, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11072)\n    raise\n  File \"cassandra/cluster.py\", line 841, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:10952)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2100, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:37187)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2135, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:38043)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qZdcnK\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qZdcnK\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 322.099, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 98.126, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xpoYdS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xpoYdS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 42.29, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 484, in indexed_with_eq_test\n    res = cursor.execute(\"SELECT firstname FROM users WHERE userid = 550e8400-e29b-41d4-a716-446655440000 AND age = 33\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pJMTjb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 20, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pJMTjb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 55.639, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3582, in large_count_test\n    assert_one(cursor, \"SELECT COUNT(*) FROM test\", [9999])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oaY776\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oaY776\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.058, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lPYeRQ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lPYeRQ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "large_clustering_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.465, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 40.399, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_and_reverse_type_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.269, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 43.591, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B4icON\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B4icON\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.756, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3790, in static_columns_cas_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, 'foo', 1, 'foo'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UMCA0h\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 8, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UMCA0h\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "truncate_clean_cache_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.834, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.807, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2964, in conditional_update_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2, 'foo', None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S341RI\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S341RI\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.672, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.073, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4574, in map_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ugppbh\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ugppbh\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.278, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4232, in whole_list_conditional_test\n    check_applies(\"l = ['foo', 'bar', 'foobar']\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4230, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fmxSst\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fmxSst\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "range_key_ordered_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.606, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3120, in range_key_ordered_test\n    assert_all(cursor, \"SELECT * FROM test\", [[0], [1], [-1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-beiqIm\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-beiqIm\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-beiqIm] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K2bKWS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 8, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-beiqIm\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-beiqIm\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-beiqIm] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K2bKWS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "float_with_exponent_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.684, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 65.029, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 281, in test_with_more_results_than_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w5aGWB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w5aGWB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 72.882, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 37.681, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "logged_batch_compatibility_5_test", "className": "batch_test.TestBatch", "duration": 199.259, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 328, in logged_batch_compatibility_5_test\n    self._logged_batch_compatibility_test(2, 2, 'git:cassandra-2.1', 1)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 339, in _logged_batch_compatibility_test\n    rows = session.execute(\"SELECT id, firstname, lastname FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.3\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mspYct\\ndtest: DEBUG: Testing with 1 node(s) at version 'git:cassandra-2.1', 2 node(s) at current version\\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Creating schema...\\ndtest: DEBUG: Upgrading node1\\ndtest: DEBUG: Shutting down node: node1\\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\\ndtest: DEBUG: Starting node1 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\ndtest: DEBUG: Upgrading node2\\ndtest: DEBUG: Shutting down node: node2\\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\\ndtest: DEBUG: Starting node2 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "errors={}, last_host=127.0.0.3\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mspYct\ndtest: DEBUG: Testing with 1 node(s) at version 'git:cassandra-2.1', 2 node(s) at current version\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Creating schema...\ndtest: DEBUG: Upgrading node1\ndtest: DEBUG: Shutting down node: node1\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\ndtest: DEBUG: Starting node1 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\ndtest: DEBUG: Upgrading node2\ndtest: DEBUG: Shutting down node: node2\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\ndtest: DEBUG: Starting node2 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_throws_uae_test", "className": "batch_test.TestBatch", "duration": 35.016, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "decommission_node_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 153.816, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 475, in decommission_node_test\n    self.validate_schema_consistent(node1)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 127, in validate_schema_consistent\n    assert num_schemas == 1, \"There were multiple schema versions: \" + pprint.pformat(schemas)\n\"There were multiple schema versions: '0e1ea6b2-4eb1-35ad-ab96-feefea953e6f: [127.0.0.1]\\\\n\\\\n\\\\t\\\\tUNREACHABLE: [127.0.0.2]'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gcVK3f\\ndtest: DEBUG: decommission_node_test()\\ndtest: DEBUG: prepare_for_changes() ns1\\ndtest: DEBUG: validate_schema_consistent() node1\\n--------------------- >> end captured logging << ---------------------\"", "age": 72, "errorDetails": "There were multiple schema versions: '0e1ea6b2-4eb1-35ad-ab96-feefea953e6f: [127.0.0.1]\\n\\n\\t\\tUNREACHABLE: [127.0.0.2]'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gcVK3f\ndtest: DEBUG: decommission_node_test()\ndtest: DEBUG: prepare_for_changes() ns1\ndtest: DEBUG: validate_schema_consistent() node1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 83.256, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 84.195, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "incompressible_data_in_compressed_table_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 10.968, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_compactionstats", "className": "jmx_test.TestJMX", "duration": 307.91, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_map_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 86.542, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 70.036, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug3367_test", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 7.735, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test_not_intersecting_all_ranges", "className": "incremental_repair_test.TestIncRepair", "duration": 77.619, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy", "className": "consistency_test.TestAvailability", "duration": 58.985, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 53.065, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_respected_on_repair_test", "className": "ttl_test.TestDistributedTTL", "duration": 43.081, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_with_ttl_expired_test", "className": "ttl_test.TestTTL", "duration": 9.097, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 34.938, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "paging_test.TestPagingWithModifiers", "duration": 28.411, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "paging_test.TestPagingWithModifiers", "duration": 25.138, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 26.403, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_super_remove", "className": "thrift_tests.TestMutations", "duration": 27.373, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert_ttl", "className": "thrift_tests.TestMutations", "duration": 7.505, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_subcolumn_limit", "className": "thrift_tests.TestMutations", "duration": 7.665, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_token_map", "className": "thrift_tests.TestMutations", "duration": 7.401, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_colon_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 24.098, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_reading_dont_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.738, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_writing_use_header", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.72, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_past_and_future_dates", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.854, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "permissions_caching_test", "className": "auth_test.TestAuth", "duration": 21.49, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_ks_auth_test", "className": "auth_test.TestAuth", "duration": 18.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "alter_ks_auth_test", "className": "auth_test.TestAuth", "duration": 17.418, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 17.316, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "statements_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 6.94, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "keyspace_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.384, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "prepared_statement_invalidation_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 7.595, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_using_pkey_json_test", "className": "json_test.FromJsonDeleteTests", "duration": 9.538, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 8.318, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrub", "duration": 8.301, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 377, in test_standalone_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bqhcby\\n--------------------- >> end captured logging << ---------------------'", "age": 9, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bqhcby\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sc_with_row_cache_test", "className": "super_column_cache_test.TestSCCache", "duration": 7.093, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_no_counters_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 6.684, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 106.615, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KYzsFq\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KYzsFq\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.908, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_with_deletes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.868, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2397, in range_with_deletes_test\n    res = cursor.execute(\"SELECT * FROM test LIMIT %d\" % (nb_keys / 2))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6ZBaxO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6ZBaxO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "exclusive_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.534, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.813, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.806, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.779, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "limit_ranges_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 95.541, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 337, in limit_ranges_test\n    res = cursor.execute(\"SELECT * FROM clicks WHERE token(userid) >= token(2) LIMIT 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eqgTee\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eqgTee\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eqgTee] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uzvnqJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eqgTee\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eqgTee\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eqgTee] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uzvnqJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.855, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 36.834, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 63.412, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 312, in test_with_equal_results_to_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vEpGxc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vEpGxc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_comparator_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.313, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_5240_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.459, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.477, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1093, in timestamp_and_ttl_test\n    res = cursor.execute(\"SELECT k, c, writetime(c), ttl(c) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_7eDL\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 72, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_7eDL\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multi_in_compact_non_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.474, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.317, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O2Q4Wg\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O2Q4Wg\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.467, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.676, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.349, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2436, in multi_in_test\n    self.__multi_in(False)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-x8vMwp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-x8vMwp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "dynamic_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 201, in dynamic_cf_test\n    res = cursor.execute(\"SELECT time FROM clicks\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Cg8uZb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 70, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Cg8uZb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 66.047, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 818, in test_paging_using_secondary_indexes\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QJ7a_C\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QJ7a_C\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableverify_test", "className": "offline_tools_test.TestOfflineTools", "duration": 500.99, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstablelevelreset_test", "className": "offline_tools_test.TestOfflineTools", "duration": 115.808, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "functional_test", "className": "global_row_key_cache_test.TestGlobalRowKeyCache", "duration": 254.004, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_indexes_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 139.729, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_users", "className": "consistency_test.TestAccuracy", "duration": 153.672, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_repairedset_test", "className": "incremental_repair_test.TestIncRepair", "duration": 88.755, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "contention_test_many_threads", "className": "paxos_tests.TestPaxos", "duration": 85.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "lwt_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 73.543, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 46.856, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "immutable_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 24.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "paging_test.TestPagingQueryIsolation", "duration": 64.074, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 27.706, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos", "className": "write_failures_test.TestWriteFailures", "duration": 60.116, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_2dc_rf2_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 44.099, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_test", "className": "putget_test.TestPutGet", "duration": 35.536, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_crc", "className": "commitlog_test.TestCommitLog", "duration": 33.762, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_enforcement", "className": "user_types_test.TestUserTypes", "duration": 27.199, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 26.668, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 18.332, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 10.608, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.983, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_set_ttl_test", "className": "ttl_test.TestTTL", "duration": 18.783, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "modify_and_select_auth_test", "className": "auth_test.TestAuth", "duration": 18.641, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dropping_nonexistent_user_throws_exception_test", "className": "auth_test.TestAuth", "duration": 16.658, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_expiration", "className": "thrift_tests.TestMutations", "duration": 10.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_by_names", "className": "thrift_tests.TestMutations", "duration": 7.261, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_super_range", "className": "thrift_tests.TestMutations", "duration": 7.276, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count", "className": "thrift_tests.TestMutations", "duration": 7.238, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_ks_names", "className": "thrift_tests.TestMutations", "duration": 6.951, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_partitioner", "className": "thrift_tests.TestMutations", "duration": 7.247, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_remove_expiring", "className": "thrift_tests.TestMutations", "duration": 6.927, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tracing_from_system_traces_test", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_client_warnings", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.322, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_use_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.15, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_truncate", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.479, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.402, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_null_as_null_indicator", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.34, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_keyspace_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.92, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_user_types_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.99, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compact_test", "className": "schema_test.TestSchema", "duration": 6.771, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}], "stdout": null, "id": null, "name": "nosetests", "stderr": null}]}}
