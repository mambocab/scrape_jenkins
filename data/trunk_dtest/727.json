{"baseurl": "http://cassci.datastax.com/job/trunk_dtest/727/testReport/api/python", "_data": {"failCount": 282, "passCount": 311, "skipCount": 134, "testActions": [], "empty": false, "duration": 28974.676, "suites": [{"duration": 28974.676, "timestamp": null, "cases": [{"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "netstats_test", "className": "jmx_test.TestJMX", "duration": 914.267, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "table_metric_mbeans_test", "className": "jmx_test.TestJMX", "duration": 44.18, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "bug_5240_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 226.196, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2784, in bug_5240_test\n    res = cursor.execute(\"select * from test where severity = 3 and interval = 't' and seq =1;\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U7SwPi\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U7SwPi\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 62.875, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 40.436, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "expanded_list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.709, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4352, in expanded_list_item_conditional_test\n    check_applies(\"l[1] >= 'bar'\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4347, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, ['foo', 'bar', 'foobar']]] from SELECT * FROM tlist, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8mS2T4\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Expected [[0, ['foo', 'bar', 'foobar']]] from SELECT * FROM tlist, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8mS2T4\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "whole_map_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.174, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.848, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.27, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.901, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.53, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.512, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.259, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.45, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.722, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 95.974, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 718, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6cPRkk\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 43, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6cPRkk\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 87.93, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 78.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.148, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 312, in test_with_equal_results_to_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OUxcHO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 12, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OUxcHO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_comparator_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.011, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.121, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4618, in expanded_map_item_conditional_test\n    check_applies(\"m['xxx'] = null\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4616, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NEEIIZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NEEIIZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.269, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_KtVy\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_KtVy\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.282, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.186, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u8kUIG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u8kUIG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_4532_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.295, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.102, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3399, in bug_6115_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-46XCsS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-46XCsS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.664, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "functional_test", "className": "super_counter_test.TestSuperCounterClusterRestart", "duration": 24.668, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/super_counter_test.py\", line 40, in functional_test\n    thrift_conn.system_add_column_family(cf_def)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1758, in system_add_column_family\n    return self.recv_system_add_column_family()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1769, in recv_system_add_column_family\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pzF14G\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pzF14G\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "functional_test", "className": "super_counter_test.TestSuperCounterClusterRestart", "duration": 25.023, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 358, in run\n    self.tearDown()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 550, in tearDown\n    raise AssertionError('Unexpected error in %s node log: %s' % (node.name, errors))\n\"Unexpected error in node1 node log: ['ERROR [MigrationStage:1] 2015-11-04 19:20:30,905 CassandraDaemon.java:195 - Exception in thread Thread[MigrationStage:1,5,main]\\\\norg.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\\\n\\\\tat org.apache.cassandra.cql3.CQL3Type$Raw$RawCollection.prepare(CQL3Type.java:469) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.CQLTypeParser.parse(CQLTypeParser.java:55) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.createColumnFromRow(SchemaKeyspace.java:1013) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.lambda$fetchColumns$248(SchemaKeyspace.java:997) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace$$Lambda$125/2139976816.accept(Unknown Source) ~[na:na]\\\\n\\\\tat java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchColumns(SchemaKeyspace.java:997) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTable(SchemaKeyspace.java:951) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTables(SchemaKeyspace.java:930) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspace(SchemaKeyspace.java:893) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspacesOnly(SchemaKeyspace.java:885) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchema(SchemaKeyspace.java:1275) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchemaAndAnnounceVersion(SchemaKeyspace.java:1254) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.MigrationManager$1.runMayThrow(MigrationManager.java:491) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) ~[main/:na]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\\\nERROR [Thrift:1] 2015-11-04 19:20:30,905 CustomTThreadPoolServer.java:223 - Error occurred during processing of message.\\\\njava.lang.RuntimeException: java.util.concurrent.ExecutionException: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\\\n\\\\tat org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:368) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.MigrationManager.announce(MigrationManager.java:473) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.MigrationManager.announceNewColumnFamily(MigrationManager.java:303) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.MigrationManager.announceNewColumnFamily(MigrationManager.java:288) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.thrift.CassandraServer.system_add_column_family(CassandraServer.java:1894) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.thrift.Cassandra$Processor$system_add_column_family.getResult(Cassandra.java:4402) ~[thrift/:na]\\\\n\\\\tat org.apache.cassandra.thrift.Cassandra$Processor$system_add_column_family.getResult(Cassandra.java:4386) ~[thrift/:na]\\\\n\\\\tat org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39) ~[libthrift-0.9.2.jar:0.9.2]\\\\n\\\\tat org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39) ~[libthrift-0.9.2.jar:0.9.2]\\\\n\\\\tat org.apache.cassandra.thrift.CustomTThreadPoolServer$WorkerProcess.run(CustomTThreadPoolServer.java:204) ~[main/:na]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\\\nCaused by: java.util.concurrent.ExecutionException: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\\\n\\\\tat java.util.concurrent.FutureTask.report(FutureTask.java:122) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.FutureTask.get(FutureTask.java:192) ~[na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:364) ~[main/:na]\\\\n\\\\t... 12 common frames omitted\\\\nCaused by: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\\\n\\\\tat org.apache.cassandra.cql3.CQL3Type$Raw$RawCollection.prepare(CQL3Type.java:469) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.CQLTypeParser.parse(CQLTypeParser.java:55) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.createColumnFromRow(SchemaKeyspace.java:1013) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.lambda$fetchColumns$248(SchemaKeyspace.java:997) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace$$Lambda$125/2139976816.accept(Unknown Source) ~[na:na]\\\\n\\\\tat java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchColumns(SchemaKeyspace.java:997) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTable(SchemaKeyspace.java:951) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTables(SchemaKeyspace.java:930) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspace(SchemaKeyspace.java:893) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspacesOnly(SchemaKeyspace.java:885) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchema(SchemaKeyspace.java:1275) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchemaAndAnnounceVersion(SchemaKeyspace.java:1254) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.MigrationManager$1.runMayThrow(MigrationManager.java:491) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) ~[main/:na]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_45]\\\\n\\\\t... 3 common frames omitted']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pzF14G\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-pzF14G\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-pzF14G] directory\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Unexpected error in node1 node log: ['ERROR [MigrationStage:1] 2015-11-04 19:20:30,905 CassandraDaemon.java:195 - Exception in thread Thread[MigrationStage:1,5,main]\\norg.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\n\\tat org.apache.cassandra.cql3.CQL3Type$Raw$RawCollection.prepare(CQL3Type.java:469) ~[main/:na]\\n\\tat org.apache.cassandra.schema.CQLTypeParser.parse(CQLTypeParser.java:55) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.createColumnFromRow(SchemaKeyspace.java:1013) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.lambda$fetchColumns$248(SchemaKeyspace.java:997) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace$$Lambda$125/2139976816.accept(Unknown Source) ~[na:na]\\n\\tat java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_45]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchColumns(SchemaKeyspace.java:997) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTable(SchemaKeyspace.java:951) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTables(SchemaKeyspace.java:930) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspace(SchemaKeyspace.java:893) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspacesOnly(SchemaKeyspace.java:885) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchema(SchemaKeyspace.java:1275) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchemaAndAnnounceVersion(SchemaKeyspace.java:1254) ~[main/:na]\\n\\tat org.apache.cassandra.service.MigrationManager$1.runMayThrow(MigrationManager.java:491) ~[main/:na]\\n\\tat org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) ~[main/:na]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\nERROR [Thrift:1] 2015-11-04 19:20:30,905 CustomTThreadPoolServer.java:223 - Error occurred during processing of message.\\njava.lang.RuntimeException: java.util.concurrent.ExecutionException: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\n\\tat org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:368) ~[main/:na]\\n\\tat org.apache.cassandra.service.MigrationManager.announce(MigrationManager.java:473) ~[main/:na]\\n\\tat org.apache.cassandra.service.MigrationManager.announceNewColumnFamily(MigrationManager.java:303) ~[main/:na]\\n\\tat org.apache.cassandra.service.MigrationManager.announceNewColumnFamily(MigrationManager.java:288) ~[main/:na]\\n\\tat org.apache.cassandra.thrift.CassandraServer.system_add_column_family(CassandraServer.java:1894) ~[main/:na]\\n\\tat org.apache.cassandra.thrift.Cassandra$Processor$system_add_column_family.getResult(Cassandra.java:4402) ~[thrift/:na]\\n\\tat org.apache.cassandra.thrift.Cassandra$Processor$system_add_column_family.getResult(Cassandra.java:4386) ~[thrift/:na]\\n\\tat org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39) ~[libthrift-0.9.2.jar:0.9.2]\\n\\tat org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39) ~[libthrift-0.9.2.jar:0.9.2]\\n\\tat org.apache.cassandra.thrift.CustomTThreadPoolServer$WorkerProcess.run(CustomTThreadPoolServer.java:204) ~[main/:na]\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_45]\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\nCaused by: java.util.concurrent.ExecutionException: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\n\\tat java.util.concurrent.FutureTask.report(FutureTask.java:122) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.FutureTask.get(FutureTask.java:192) ~[na:1.8.0_45]\\n\\tat org.apache.cassandra.utils.FBUtilities.waitOnFuture(FBUtilities.java:364) ~[main/:na]\\n\\t... 12 common frames omitted\\nCaused by: org.apache.cassandra.exceptions.InvalidRequestException: Counters are not allowed inside collections: map<blob, counter>\\n\\tat org.apache.cassandra.cql3.CQL3Type$Raw$RawCollection.prepare(CQL3Type.java:469) ~[main/:na]\\n\\tat org.apache.cassandra.schema.CQLTypeParser.parse(CQLTypeParser.java:55) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.createColumnFromRow(SchemaKeyspace.java:1013) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.lambda$fetchColumns$248(SchemaKeyspace.java:997) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace$$Lambda$125/2139976816.accept(Unknown Source) ~[na:na]\\n\\tat java.lang.Iterable.forEach(Iterable.java:75) ~[na:1.8.0_45]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchColumns(SchemaKeyspace.java:997) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTable(SchemaKeyspace.java:951) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchTables(SchemaKeyspace.java:930) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspace(SchemaKeyspace.java:893) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.fetchKeyspacesOnly(SchemaKeyspace.java:885) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchema(SchemaKeyspace.java:1275) ~[main/:na]\\n\\tat org.apache.cassandra.schema.SchemaKeyspace.mergeSchemaAndAnnounceVersion(SchemaKeyspace.java:1254) ~[main/:na]\\n\\tat org.apache.cassandra.service.MigrationManager$1.runMayThrow(MigrationManager.java:491) ~[main/:na]\\n\\tat org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.java:28) ~[main/:na]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_45]\\n\\t... 3 common frames omitted']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pzF14G\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-pzF14G\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-pzF14G] directory\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 61.733, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 118, in sstableloader_compression_deflate_to_deflate_test\n    self.load_sstable_with_configuration('Deflate', 'Deflate')\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 194, in load_sstable_with_configuration\n    \"sstableloader exited with a non-zero status: %d\" % exit_status)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'sstableloader exited with a non-zero status: 1\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O1hbaY\\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=Deflate\\ndtest: DEBUG: creating keyspace and inserting\\ndtest: DEBUG: Making a copy of the sstables\\ndtest: DEBUG: Wiping out the data and restarting cluster\\ndtest: DEBUG: re-creating the keyspace and column families.\\ndtest: DEBUG: Calling sstableloader\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "sstableloader exited with a non-zero status: 1\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-O1hbaY\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=Deflate\ndtest: DEBUG: creating keyspace and inserting\ndtest: DEBUG: Making a copy of the sstables\ndtest: DEBUG: Wiping out the data and restarting cluster\ndtest: DEBUG: re-creating the keyspace and column families.\ndtest: DEBUG: Calling sstableloader\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 69.408, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "abortedcompaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 61.558, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 53, in abortedcompaction_test\n    finalfiles, tmpfiles = self._check_files(node, KeyspaceName, TableName)\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 104, in _check_files\n    allfiles = self._invoke_sstableutil(ks, table, type='all')\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 152, in _invoke_sstableutil\n    assert False, \"Error invoking sstableutil\"\n'Error invoking sstableutil\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-do1glo\\ndtest: DEBUG: Comparing all files...\\ndtest: DEBUG: About to invoke sstableutil...\\ndtest: DEBUG: WARN  19:23:42 Only 37463 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\\n\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "Error invoking sstableutil\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-do1glo\ndtest: DEBUG: Comparing all files...\ndtest: DEBUG: About to invoke sstableutil...\ndtest: DEBUG: WARN  19:23:42 Only 37463 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_quorum", "className": "write_failures_test.TestWriteFailures", "duration": 42.267, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_mutation_v2", "className": "write_failures_test.TestWriteFailures", "duration": 0.059, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_compression_error", "className": "commitlog_test.TestCommitLog", "duration": 7.367, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/commitlog_test.py\", line 442, in test_compression_error\n    self.assertEqual(len(results), 10)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-TomaWT\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-TomaWT\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "short_read_delete_test", "className": "consistency_test.TestConsistency", "duration": 30.811, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 674, in short_read_delete_test\n    assert len(res) == 0, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BojufX\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BojufX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 29.303, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 6237", "name": "test_multiple_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 25.692, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "paging_test.TestPagingWithModifiers", "duration": 25.285, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_super_remove", "className": "thrift_tests.TestMutations", "duration": 6.607, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QUsjrb\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QUsjrb\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_time_uuid", "className": "thrift_tests.TestMutations", "duration": 6.737, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QUsjrb\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QUsjrb] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sOhx3e\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QUsjrb\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QUsjrb] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sOhx3e\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_count", "className": "thrift_tests.TestMutations", "duration": 7.052, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-sOhx3e\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-sOhx3e] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VpqlGv\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-sOhx3e\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-sOhx3e] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VpqlGv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_super_subcolumn_limit", "className": "thrift_tests.TestMutations", "duration": 6.799, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-VpqlGv\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-VpqlGv] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6EYkTF\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-VpqlGv\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-VpqlGv] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6EYkTF\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_index_scan", "className": "thrift_tests.TestMutations", "duration": 6.901, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6EYkTF\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6EYkTF] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jpu27F\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6EYkTF\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6EYkTF] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jpu27F\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_empty_slice", "className": "thrift_tests.TestMutations", "duration": 6.879, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-jpu27F\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-jpu27F] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Tjz0p4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-jpu27F\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-jpu27F] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Tjz0p4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_range_partial", "className": "thrift_tests.TestMutations", "duration": 6.922, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Tjz0p4\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Tjz0p4] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K8uPgT\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Tjz0p4\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Tjz0p4] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K8uPgT\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.714, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 16.581, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 268, in large_compaction_warning_test\n    assert len(ret) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4zdepb\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4zdepb\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "grant_revoke_cleanup_test", "className": "auth_test.TestAuth", "duration": 18.111, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 435, in grant_revoke_cleanup_test\n    self.assertEquals(1, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YUeKAT\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YUeKAT\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_auth_test", "className": "auth_test.TestAuth", "duration": 17.504, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superusers_can_drop_users_test", "className": "auth_test.TestAuth", "duration": 0.059, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "password_authenticator_create_user_requires_password_test", "className": "auth_test.TestAuth", "duration": 0.057, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "use_custom_ssl_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 11.832, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/native_transport_ssl_test.py\", line 69, in use_custom_ssl_port_test\n    self._putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/native_transport_ssl_test.py\", line 104, in _putget\n    putget(cluster, session, cl=ConsistencyLevel.ONE)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4Gx15U\\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-4Gx15U]\\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-4Gx15U]\\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-4Gx15U]\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4Gx15U\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-4Gx15U]\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-4Gx15U]\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-4Gx15U]\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 11.732, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compaction_test", "className": "schema_test.TestSchema", "duration": 9.725, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tuple_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.882, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_read_invalid_text", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.222, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 662, in test_read_invalid_text\n    self.data_validation_on_read_template('test', expect_invalid=True)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 628, in data_validation_on_read_template\n    self.assertRegexpMatches('Bad [Rr]equest', err)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 1002, in assertRegexpMatches\n    raise self.failureException(msg)\n'Regexp didn\\'t match: \\'Process ImportProcess-2:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\nProcess ImportProcess-1:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\nProcess ImportProcess-3:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\n\\' not found in \\'Bad [Rr]equest\\'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zNPYI2\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Regexp didn't match: 'Process ImportProcess-2:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\nProcess ImportProcess-1:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\nProcess ImportProcess-3:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\n' not found in 'Bad [Rr]equest'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zNPYI2\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  Process ImportProcess-2:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-1:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-3:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.248, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_select", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.351, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.194, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "creating_and_dropping_uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.442, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 657, in creating_and_dropping_uda_test\n    self.assertEqual(['int', 'int'], udf_meta.type_signature)\n\"'Function' object has no attribute 'type_signature'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n8vPEd\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'Function' object has no attribute 'type_signature'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n8vPEd\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.264, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 724, in udf_test\n    verify_udf(self.cluster.version(), self.cluster.version(), 'ks', self.session)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 319, in verify_udf\n    assert_equal(cqltypes.DoubleType, meta.return_type)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"<class 'cassandra.cqltypes.DoubleType'> != u'double'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_I0Ewv\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "<class 'cassandra.cqltypes.DoubleType'> != u'double'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_I0Ewv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_keyspace_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.22, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_preparation_test", "className": "cql_prepared_test.TestCQL", "duration": 6.899, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_rejects_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.388, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "json_tools_test", "className": "json_tools_test.TestJson", "duration": 0.061, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_ranges_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.058, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test3", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test7", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test6", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test8", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test9", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test4", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test2", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test5", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_collapse_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.057, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "network_topology_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_counters_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.057, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0", "name": "metadata_reset_while_compact_test", "className": "metadata_tests.TestMetadata", "duration": 0.057, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommissioned_node_cant_rejoin_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "movement_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommission_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "local_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "materialized_view_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "remote_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "index_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "initial_empty_repair_tables_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_repair_order_preserving_test", "className": "repair_test.TestRepair", "duration": 0.001, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "wide_slice_test", "className": "putget_test.TestPutGet", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require Fixes to ccm around upgrades", "name": "test_upgrade_index_summary", "className": "index_summary_upgrade_test.TestUpgradeIndexSummary", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 9961", "name": "schema_changes_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "hintedhandoff_decom_test", "className": "hintedhandoff_test.TestHintedHandoff", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "consistent_reads_after_move_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "multiple_subsequent_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "test hangs: see CASSANDRA-9831", "name": "resumable_replace_test", "className": "replace_address_test.TestReplaceAddress", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7423", "name": "udt_subfield_test", "className": "user_types_test.TestUserTypes", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "cluster_availability_test", "className": "paxos_tests.TestPaxos", "duration": 0.0, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_compactionstats", "className": "jmx_test.TestJMX", "duration": 289.614, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "replace_with_reset_resume_state_test", "className": "replace_address_test.TestReplaceAddress", "duration": 242.55, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 327, in replace_with_reset_resume_state_test\n    assert len(rows) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fD4Wh0\\ndtest: DEBUG: Starting node 4 to replace node 3\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fD4Wh0\ndtest: DEBUG: Starting node 4 to replace node 3\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_nonexistent_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 29.958, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableofflinerelevel_test", "className": "offline_tools_test.TestOfflineTools", "duration": 180.658, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "create_lots_of_mv_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 134.292, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 270, in create_lots_of_mv_concurrently_test\n    self.assertEqual(10, len(result), \"missing some mv from source_data table\")\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5B6wt7\\ndtest: DEBUG: waiting for indexes to fill in\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5B6wt7\ndtest: DEBUG: waiting for indexes to fill in\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 150.258, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1315, in delete_row_test\n    assert len(res) == 3, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-inBmrA\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-inBmrA\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_flush_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 52.582, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "collection_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 43.525, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3625, in collection_indexing_test\n    assert_all(cursor, \"SELECT k, v FROM test WHERE l CONTAINS 1\", [[1, 0], [0, 0], [0, 2]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zkqB5h\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zkqB5h\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.816, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.779, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4621, in expanded_map_item_conditional_test\n    check_applies(\"m['foo'] > 'aaa'\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4616, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V_4RcI\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V_4RcI\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "blobAs_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.838, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.6, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QjwNNE\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QjwNNE\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.108, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-plaCCW\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-plaCCW\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.985, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conversion_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.602, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.289, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "basic_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 96.357, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 671, in basic_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-g33ZtR\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-g33ZtR\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_ranges_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.218, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.578, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4574, in map_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b03kFZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 16, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b03kFZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.597, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zQ3j3D\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zQ3j3D\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.019, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.897, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "static_with_empty_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.605, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4732, in static_with_empty_clustering_test\n    assert_one(cursor, \"SELECT * FROM test\", ['partition1', '', 'static value', 'value'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DKwTfQ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DKwTfQ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.235, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 258, in dense_cf_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zOz59y\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zOz59y\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.067, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.47, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.368, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CBHYvh\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CBHYvh\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 722, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 63.332, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 221, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-67BT9F\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-67BT9F\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 38.192, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "add_node_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 90.528, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 377, in add_node_after_mv_test\n    session2 = self.patient_exclusive_cql_connection(node4)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 457, in patient_exclusive_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 379, in exclusive_cql_connection\n    protocol_version, wlrr, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.4': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WoFOmP\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.4': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WoFOmP\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "drop_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 85.445, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 226, in drop_mv_test\n    session = self.prepare(user_table=True)\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4ZCdXb\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4ZCdXb\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "clustering_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 86.835, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 296, in clustering_column_test\n    session = self.prepare()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jI8Gv0\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jI8Gv0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "insert_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 93.918, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 118, in insert_test\n    session = self.prepare(user_table=True)\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 37, in prepare\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-526eYS\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-526eYS\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_archive_commitlog_point_in_time", "className": "snapshot_test.TestArchiveCommitlog", "duration": 26.674, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 149, in test_archive_commitlog_point_in_time\n    self.run_archive_commitlog(restore_point_in_time=True)\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 174, in run_archive_commitlog\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sB0wmJ\\ndtest: DEBUG: tmp_commitlog: /mnt/tmp/tmpZrlpVc\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sB0wmJ\ndtest: DEBUG: tmp_commitlog: /mnt/tmp/tmpZrlpVc\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_6924_dropping_ks", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 66.917, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 125, in test_6924_dropping_ks\n    conn = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yCXMaT\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yCXMaT\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 97.385, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_mutation_v4", "className": "write_failures_test.TestWriteFailures", "duration": 86.846, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/write_failures_test.py\", line 111, in test_mutation_v4\n    self._perform_cql_statement(\"INSERT INTO mytable (key, value) VALUES ('key1', 'Value 1')\")\n  File \"/home/automaton/cassandra-dtest/write_failures_test.py\", line 75, in _perform_cql_statement\n    session = self._prepare_cluster()\n  File \"/home/automaton/cassandra-dtest/write_failures_test.py\", line 52, in _prepare_cluster\n    session = self.patient_exclusive_cql_connection(self.nodes[0], protocol_version=self.protocol_version)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 457, in patient_exclusive_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 379, in exclusive_cql_connection\n    protocol_version, wlrr, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V4HGRo\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V4HGRo\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "change_durable_writes_test", "className": "configuration_test.TestConfiguration", "duration": 40.649, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/configuration_test.py\", line 64, in change_durable_writes_test\n    durable_session = self.patient_exclusive_cql_connection(durable_node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 457, in patient_exclusive_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 379, in exclusive_cql_connection\n    protocol_version, wlrr, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-agYWz6\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-agYWz6\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_node_unavailabe_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 77.323, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/paging_test.py\", line 1119, in test_node_unavailabe_during_paging\n    session = self.cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZBSKfE\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZBSKfE\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "putget_snappy_test", "className": "putget_test.TestPutGet", "duration": 81.389, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/putget_test.py\", line 24, in putget_snappy_test\n    self._putget(compression=\"Snappy\")\n  File \"/home/automaton/cassandra-dtest/putget_test.py\", line 38, in _putget\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i9_r9x\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i9_r9x\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_type_as_clustering_col", "className": "user_types_test.TestUserTypes", "duration": 67.418, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 639, in test_type_as_clustering_col\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ysE5Kv\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ysE5Kv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_user_type_isolation", "className": "user_types_test.TestUserTypes", "duration": 34.035, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 760, in test_user_type_isolation\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ncx_Kl\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ncx_Kl\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "connect_to_ssl_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 31.16, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/native_transport_ssl_test.py\", line 32, in connect_to_ssl_test\n    \"Missing SSL handshake exception while connecting with non-SSL enabled client\"\n'Missing SSL handshake exception while connecting with non-SSL enabled client\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MLoT02\\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-MLoT02]\\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-MLoT02]\\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-MLoT02]\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Missing SSL handshake exception while connecting with non-SSL enabled client\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MLoT02\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-MLoT02]\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-MLoT02]\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-MLoT02]\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "nodetool_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 41.612, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 80, in nodetool_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ycCa_Y\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ycCa_Y\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_disabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 45.105, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 131, in hintedhandoff_dc_disabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gEvexM\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gEvexM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "dropping_nonexistent_user_throws_exception_test", "className": "auth_test.TestAuth", "duration": 40.804, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 142, in dropping_nonexistent_user_throws_exception_test\n    session = self.get_session(user='cassandra', password='cassandra')\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 621, in get_session\n    conn = self.patient_cql_connection(node, user=user, password=password)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-N0cJ49\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-N0cJ49\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "users_cant_alter_their_superuser_status_test", "className": "auth_test.TestAuth", "duration": 43.259, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 161, in users_cant_alter_their_superuser_status_test\n    session = self.get_session(user='cassandra', password='cassandra')\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 621, in get_session\n    conn = self.patient_cql_connection(node, user=user, password=password)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vfjH9W\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vfjH9W\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 37.575, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 444, in complex_data_types_test\n    run_func_docstring(tester=self, test_func=self.complex_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 163, in run_func_docstring\n    globs = build_doc_context(tester, name)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 33, in build_doc_context\n    connection = tester.patient_cql_connection(nodes[0])\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QnhryU\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QnhryU\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_mv", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 27.858, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_read_invalid_uuid", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 29.481, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 655, in test_read_invalid_uuid\n    self.data_validation_on_read_template(uuid4(), expect_invalid=True)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 611, in data_validation_on_read_template\n    self.prepare()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 73, in prepare\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rDO9wY\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rDO9wY\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_wrong_number_of_columns", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 29.611, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 763, in test_wrong_number_of_columns\n    self.prepare()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 73, in prepare\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rnz9VM\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rnz9VM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_quoted_column_names_reading_dont_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 32.651, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 548, in test_quoted_column_names_reading_dont_specify_names\n    self.quoted_column_names_reading_template(specify_column_names=False)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 512, in quoted_column_names_reading_template\n    self.prepare()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 73, in prepare\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lnj2_I\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lnj2_I\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_read_invalid_float", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 32.227, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 648, in test_read_invalid_float\n    self.data_validation_on_read_template(2.14, expect_invalid=True)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 611, in data_validation_on_read_template\n    self.prepare()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 73, in prepare\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-y1JwCM\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-y1JwCM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_delete", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 28.631, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1478, in setUp\n    self.session = self.patient_cql_connection(self.node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WHwBl4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WHwBl4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrubIndexes", "duration": 39.19, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 236, in test_standalone_scrub\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0sMIxg\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0sMIxg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrub", "duration": 30.968, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 370, in test_standalone_scrub\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HWdCX7\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HWdCX7\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "disable_compression_cql_test", "className": "compression_test.TestCompression", "duration": 29.473, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 30, in disable_compression_cql_test\n    session = self.patient_cql_connection(node)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rtMJFm\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rtMJFm\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_column_not_found_quorum", "className": "thrift_tests.TestMutations", "duration": 34.202, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uZ5XUL\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uZ5XUL\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_insert_ttl", "className": "thrift_tests.TestMutations", "duration": 36.751, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-uZ5XUL\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-uZ5XUL] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3EBIJj\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-uZ5XUL\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-uZ5XUL] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3EBIJj\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_invalid_cf_names", "className": "thrift_tests.TestMutations", "duration": 31.018, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3EBIJj\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3EBIJj] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1IxH13\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3EBIJj\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3EBIJj] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1IxH13\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_describe", "className": "thrift_tests.TestMutations", "duration": 33.572, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-1IxH13\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-1IxH13] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SL41O0\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-1IxH13\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-1IxH13] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SL41O0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_wrapped_range_slices", "className": "thrift_tests.TestMutations", "duration": 32.614, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 73, in setUp\n    session = self.patient_cql_connection(node1)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-SL41O0\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-SL41O0] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6GskYl\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-SL41O0\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-SL41O0] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6GskYl\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "durable_writes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 35.149, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 534, in setUp\n    self.session = self.patient_cql_connection(cluster.nodelist()[0])\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Thsym2\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Thsym2\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "static_column_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 34.322, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 534, in setUp\n    self.session = self.patient_cql_connection(cluster.nodelist()[0])\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 432, in patient_cql_connection\n    bypassed_exception=NoHostAvailable\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 100, in retry_till_success\n    return fun(*args, **kwargs)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 370, in cql_connection\n    protocol_version, port=port, ssl_opts=ssl_opts)\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 398, in _create_session\n    session = cluster.connect()\n  File \"cassandra/cluster.py\", line 820, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11339)\n    with self._lock:\n  File \"cassandra/cluster.py\", line 846, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11161)\n    raise\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\n\"('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Thsym2\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Thsym2] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Az56yb\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "('Unable to connect to any servers', {'127.0.0.1': OperationTimedOut('errors=Timed out creating connection (5 seconds), last_host=None',)})\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Thsym2\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Thsym2] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Az56yb\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_schema_churn_with_node_down_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 289.848, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_while_node_toggle_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 64.948, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "load_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 31.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "logged_batch_compatibility_5_test", "className": "batch_test.TestBatch", "duration": 251.751, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 328, in logged_batch_compatibility_5_test\n    self._logged_batch_compatibility_test(2, 2, 'git:cassandra-2.1', 1)\n  File \"/home/automaton/cassandra-dtest/batch_test.py\", line 339, in _logged_batch_compatibility_test\n    rows = session.execute(\"SELECT id, firstname, lastname FROM users\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.3\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-z9Q1El\\ndtest: DEBUG: Testing with 1 node(s) at version 'git:cassandra-2.1', 2 node(s) at current version\\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\\ndtest: DEBUG: Creating schema...\\ndtest: DEBUG: Upgrading node1\\ndtest: DEBUG: Shutting down node: node1\\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\\ndtest: DEBUG: Starting node1 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\ndtest: DEBUG: Upgrading node2\\ndtest: DEBUG: Shutting down node: node2\\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\\ndtest: DEBUG: Starting node2 on new version (3.0.0)\\ndtest: DEBUG: Upgrading sstables\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "errors={}, last_host=127.0.0.3\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-z9Q1El\ndtest: DEBUG: Testing with 1 node(s) at version 'git:cassandra-2.1', 2 node(s) at current version\ndtest: DEBUG: Set cassandra dir for node1 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Set cassandra dir for node2 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Set cassandra dir for node3 to /home/automaton/.ccm/repository/gitCOLONcassandra-2.1\ndtest: DEBUG: Creating schema...\ndtest: DEBUG: Upgrading node1\ndtest: DEBUG: Shutting down node: node1\ndtest: DEBUG: Set new cassandra dir for node1: /home/automaton/cassandra\ndtest: DEBUG: Starting node1 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\ndtest: DEBUG: Upgrading node2\ndtest: DEBUG: Shutting down node: node2\ndtest: DEBUG: Set new cassandra dir for node2: /home/automaton/cassandra\ndtest: DEBUG: Starting node2 on new version (3.0.0)\ndtest: DEBUG: Upgrading sstables\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "acknowledged_by_batchlog_not_set_when_batchlog_write_fails_test", "className": "batch_test.TestBatch", "duration": 47.419, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_doesnt_throw_uae_test", "className": "batch_test.TestBatch", "duration": 29.947, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "local_dc_repair_test", "className": "repair_test.TestRepair", "duration": 72.779, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 230, in local_dc_repair_test\n    cluster = self._setup_multi_dc()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 310, in _setup_multi_dc\n    self.check_rows_on_node(node2, 2000, missings=[1000])\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 27, in check_rows_on_node\n    result = session.execute(\"SELECT * FROM cf LIMIT %d\" % (rows * 2))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 2, \\'alive_replicas\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4RIzje\\ndtest: DEBUG: Starting cluster..\\ndtest: DEBUG: Inserting data...\\ndtest: DEBUG: Checking data...\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 2, 'alive_replicas': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4RIzje\ndtest: DEBUG: Starting cluster..\ndtest: DEBUG: Inserting data...\ndtest: DEBUG: Checking data...\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "really_complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 82.057, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 914, in really_complex_repair_test\n    session2.execute(\"INSERT INTO ks.t (id, v, v2, v3) VALUES (1, 1, 'c', 3.0)\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 3, \\'alive_replicas\\': 2, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-a3Oea6\\ndtest: DEBUG: Shutdown node2 and node3\\ndtest: DEBUG: Replaying batchlog on all nodes\\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\\ndtest: DEBUG: Replaying batchlog on all nodes\\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\\ndtest: DEBUG: Shutdown node1, node4 and node5\\ndtest: DEBUG: Start nodes 2 and 3\\ndtest: DEBUG: Verify the data in the MV on node2 with CL=ONE. No rows should be found.\\ndtest: DEBUG: Write new data in node2 that overlap those in node1\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 3, 'alive_replicas': 2, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-a3Oea6\ndtest: DEBUG: Shutdown node2 and node3\ndtest: DEBUG: Replaying batchlog on all nodes\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\ndtest: DEBUG: Replaying batchlog on all nodes\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\ndtest: DEBUG: Shutdown node1, node4 and node5\ndtest: DEBUG: Start nodes 2 and 3\ndtest: DEBUG: Verify the data in the MV on node2 with CL=ONE. No rows should be found.\ndtest: DEBUG: Write new data in node2 that overlap those in node1\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "lwt_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 61.136, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 563, in lwt_test\n    self.assertEqual(len(results), 1000)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bbRFyd\\ndtest: DEBUG: Inserting initial data using IF NOT EXISTS\\ndtest: DEBUG: Replaying batchlog on all nodes\\ndtest: DEBUG: All rows should have been inserted\\ndtest: DEBUG: Tyring to UpInsert data with a different value using IF NOT EXISTS\\ndtest: DEBUG: Replaying batchlog on all nodes\\ndtest: DEBUG: No rows should have changed\\ndtest: DEBUG: Update the 10 first rows with a different value\\ndtest: DEBUG: Replaying batchlog on all nodes\\ndtest: DEBUG: Verify that only the 10 first rows changed.\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bbRFyd\ndtest: DEBUG: Inserting initial data using IF NOT EXISTS\ndtest: DEBUG: Replaying batchlog on all nodes\ndtest: DEBUG: All rows should have been inserted\ndtest: DEBUG: Tyring to UpInsert data with a different value using IF NOT EXISTS\ndtest: DEBUG: Replaying batchlog on all nodes\ndtest: DEBUG: No rows should have changed\ndtest: DEBUG: Update the 10 first rows with a different value\ndtest: DEBUG: Replaying batchlog on all nodes\ndtest: DEBUG: Verify that only the 10 first rows changed.\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_mv_select_statements_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 60.666, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "query_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 28.648, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 505, in query_new_column_test\n    self.assertEqual(len(results), 1)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dgwAfi\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dgwAfi\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "secondary_index_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.343, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crc_check_chance_upgrade_test", "className": "upgrade_crc_check_chance_test.TestCrcCheckChanceUpgrade", "duration": 170.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-3.0)\nCompiling Cassandra cassandra-3.0 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "shutdown_wiped_node_cannot_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 101.541, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes3RF3", "duration": 146.997, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes2RF1", "duration": 85.805, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 35.161, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.598, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4896, in bug_6612_test\n    assert_one(cursor, \"select count(*) from session_data where app_name='foo' and account='bar' and last_access > 4 allow filtering\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iUDojJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iUDojJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_range_ghost_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.967, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1154, in no_range_ghost_test\n    unsorted_res = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-I9rBRF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-I9rBRF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.049, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3385, in bug_6069_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, {1, 2, 3}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, set([1, 2, 3])]] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6T5P82\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Expected [[0, set([1, 2, 3])]] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6T5P82\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.357, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.848, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "dynamic_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.843, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 201, in dynamic_cf_test\n    res = cursor.execute(\"SELECT time FROM clicks\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RsMCl8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RsMCl8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_function_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.043, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4682, in cas_and_list_index_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, ['foo', 'bar'], 'foobar'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, ['foo', 'bar'], 'foobar']] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Pisdd0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 11, "errorDetails": "Expected [[0, ['foo', 'bar'], 'foobar']] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Pisdd0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tuple_notation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.908, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.062, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.568, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nhMI1x\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nhMI1x\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "static_columns_with_2i_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.662, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3918, in static_columns_with_2i_test\n    assert_all(cursor, \"SELECT * FROM test WHERE v = 1\", [[0, 0, 42, 1], [0, 1, 42, 1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Svu7GH\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Svu7GH\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.725, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.852, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.287, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1315, in delete_row_test\n    assert len(res) == 3, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-T0Tdgb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-T0Tdgb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.062, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_repairedset_test", "className": "incremental_repair_test.TestIncRepair", "duration": 90.271, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "sstableloader_compression_none_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 60.918, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 97, in sstableloader_compression_none_to_snappy_test\n    self.load_sstable_with_configuration(None, 'Snappy')\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 194, in load_sstable_with_configuration\n    \"sstableloader exited with a non-zero status: %d\" % exit_status)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'sstableloader exited with a non-zero status: 1\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4FDN4G\\ndtest: DEBUG: Testing sstableloader with pre_compression=None and post_compression=Snappy\\ndtest: DEBUG: creating keyspace and inserting\\ndtest: DEBUG: Making a copy of the sstables\\ndtest: DEBUG: Wiping out the data and restarting cluster\\ndtest: DEBUG: re-creating the keyspace and column families.\\ndtest: DEBUG: Calling sstableloader\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "sstableloader exited with a non-zero status: 1\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4FDN4G\ndtest: DEBUG: Testing sstableloader with pre_compression=None and post_compression=Snappy\ndtest: DEBUG: creating keyspace and inserting\ndtest: DEBUG: Making a copy of the sstables\ndtest: DEBUG: Wiping out the data and restarting cluster\ndtest: DEBUG: re-creating the keyspace and column families.\ndtest: DEBUG: Calling sstableloader\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "small_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 51.433, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_compressed_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 50.664, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "putget_2dc_rf2_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 45.355, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/multidc_putget_test.py\", line 27, in putget_2dc_rf2_test\n    putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8rJ6WX\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8rJ6WX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "putget_2dc_rf1_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 26.475, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/multidc_putget_test.py\", line 16, in putget_2dc_rf1_test\n    putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ky61YM\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ky61YM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 39.916, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.063, "errorStackTrace": null, "age": 222, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.062, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 23.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 0.063, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 0.06, "errorStackTrace": null, "age": 222, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_only_coordinator_chooses_index_for_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 29.878, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 395, in test_only_coordinator_chooses_index_for_query\n    self.assertEqual(3, len(result))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ziZ0Km\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ziZ0Km\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_read_old_sstables_after_upgrade", "className": "secondary_indexes_test.TestUpgradeSecondaryIndexes", "duration": 0.063, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "quorum_available_during_failure_test", "className": "consistency_test.TestConsistency", "duration": 29.971, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 816, in quorum_available_during_failure_test\n    query_c1c2(session, n, CL)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 48, in query_c1c2\n    assert len(rows) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_AaZeL\\ndtest: DEBUG: Creating a ring\\ndtest: DEBUG: Set to talk to node 2\\ndtest: DEBUG: Generating some data\\ndtest: DEBUG: Taking down node1\\ndtest: DEBUG: Reading back data.\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_AaZeL\ndtest: DEBUG: Creating a ring\ndtest: DEBUG: Set to talk to node 2\ndtest: DEBUG: Generating some data\ndtest: DEBUG: Taking down node1\ndtest: DEBUG: Reading back data.\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_super_remove", "className": "thrift_tests.TestMutations", "duration": 6.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2Ch1B3\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2Ch1B3\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_dynamic_indexes_creation_deletion", "className": "thrift_tests.TestMutations", "duration": 7.107, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-2Ch1B3\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-2Ch1B3] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xQc0y_\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-2Ch1B3\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-2Ch1B3] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xQc0y_\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_update_expiring", "className": "thrift_tests.TestMutations", "duration": 7.239, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xQc0y_\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xQc0y_] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vxL2AM\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xQc0y_\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xQc0y_] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vxL2AM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_standard_add", "className": "thrift_tests.TestMutations", "duration": 7.061, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-vxL2AM\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-vxL2AM] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lsx5MS\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-vxL2AM\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-vxL2AM] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lsx5MS\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_system_keyspace_operations", "className": "thrift_tests.TestMutations", "duration": 7.03, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-lsx5MS\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-lsx5MS] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K9dznv\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-lsx5MS\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-lsx5MS] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K9dznv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_of_entire_supercolumns", "className": "thrift_tests.TestMutations", "duration": 7.103, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-K9dznv\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-K9dznv] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nezNKM\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-K9dznv\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-K9dznv] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nezNKM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_super_get", "className": "thrift_tests.TestMutations", "duration": 7.101, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-nezNKM\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-nezNKM] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MvIuiS\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-nezNKM\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-nezNKM] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MvIuiS\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_insert_super_blocking", "className": "thrift_tests.TestMutations", "duration": 6.969, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-MvIuiS\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-MvIuiS] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dfV0fv\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-MvIuiS\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-MvIuiS] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dfV0fv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_get_range_slice", "className": "thrift_tests.TestMutations", "duration": 7.131, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-dfV0fv\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-dfV0fv] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4O9HIQ\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-dfV0fv\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-dfV0fv] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4O9HIQ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_truncate", "className": "thrift_tests.TestTruncate", "duration": 6.951, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OBNQds\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OBNQds\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "permissions_caching_test", "className": "auth_test.TestAuth", "duration": 21.1, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 506, in permissions_caching_test\n    self.assertEqual(0, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5Reg8d\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5Reg8d\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superuser_can_create_users_test", "className": "auth_test.TestAuth", "duration": 0.064, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_reenabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.683, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 144, in hintedhandoff_dc_reenabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-62TOOJ\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-62TOOJ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_rejects_bad_pass", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.414, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commented_lines", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.254, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:6:SyntaxException: <ErrorMessage code=2000 [Syntax error in CQL query] message=\"line 1:0 no viable alternative at input ';' ([;])\">(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 9.262, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_read_valid_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.734, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 641, in test_read_valid_data\n    self.data_validation_on_read_template(2, expect_invalid=False)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 631, in data_validation_on_read_template\n    self.assertFalse(err)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 416, in assertFalse\n    raise self.failureException(msg)\n'\\'Process ImportProcess-2:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\nProcess ImportProcess-3:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\nProcess ImportProcess-1:\\\\nTraceback (most recent call last):\\\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\\\n    self.run()\\\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\\\nAttributeError: \\\\\\'ColumnMetadata\\\\\\' object has no attribute \\\\\\'typestring\\\\\\'\\\\n\\' is not false\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xClH2q\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "'Process ImportProcess-2:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\nProcess ImportProcess-3:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\nProcess ImportProcess-1:\\nTraceback (most recent call last):\\n  File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\\n    self.run()\\n  File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run\\n    cqltypes = [table_meta.columns[name].typestring for name in self.columns]\\nAttributeError: \\'ColumnMetadata\\' object has no attribute \\'typestring\\'\\n' is not false\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xClH2q\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  Process ImportProcess-2:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)  Process ImportProcess-3:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-1:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_describes_non_default_compaction_parameters", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.494, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "get_test_table_output", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 0.065, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_with_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 16.934, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_single_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.929, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 10.912, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "table_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 8.045, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "dropped_index_test", "className": "prepared_statements_test.TestPreparedStatements", "duration": 7.168, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/prepared_statements_test.py\", line 37, in dropped_index_test\n    print \"Number of matching rows:\", len(session.execute(query_statement, (0,)))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gguDmT\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gguDmT\n--------------------- >> end captured logging << ---------------------", "stdout": "Number of matching rows:", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.591, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 730, in uda_test\n    verify_uda(self.cluster.version(), self.cluster.version(), 'ks', self.session)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 299, in verify_uda\n    assert_equal(cqltypes.Int32Type, aggr_meta.state_type)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"<class 'cassandra.cqltypes.Int32Type'> != u'int'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5WBGA6\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "<class 'cassandra.cqltypes.Int32Type'> != u'int'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5WBGA6\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_and_regular_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.064, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "set_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.119, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.119, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "function_and_reverse_type_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.118, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_with_deletions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 78, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "table_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_partition_key_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_simple_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "in_with_desc_order_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_2ndary_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "3.0.0 > 2.0.x", "name": "compression_option_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 43, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "reserved_keyword_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_8558_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.118, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_function_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_with_collections_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 724, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6069_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "nameless_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "count_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "remove_range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 718, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_flush_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 10, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.12, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "dynamic_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 77, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_compact_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "token_range_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 78, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "boolean_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "conversion_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "nan_infinity_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 77, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "truncate_clean_cache_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4532_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "double_with_npe_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 134, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_and_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "compact_metadata_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "downgrade_to_compact_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.118, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "negative_timestamp_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_with_limit_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "column_name_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_expand_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.06, "errorStackTrace": null, "age": 127, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 695, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_index_creation_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.06, "errorStackTrace": null, "age": 33, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "create_lots_of_schema_churn_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 281.405, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 334, in create_lots_of_schema_churn_test\n    self._verify_lots_of_schema_actions(session)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 318, in _verify_lots_of_schema_actions\n    self.assertTrue(0 == len(errors), \"\\n\".join(errors))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 422, in assertTrue\n    raise self.failureException(msg)\n'alter_me_7 expected c1 -> c7, id, got: [u\\'c2\\', u\\'c3\\', u\\'c4\\', u\\'c5\\', u\\'c6\\', u\\'c7\\', u\\'id\\']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LlwOxn\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\\ncassandra.cluster: WARNING: Node 127.0.0.3 is reporting a schema disagreement: {UUID(\\'7bb7f711-89ec-33e2-9493-85493b160925\\'): [\\'127.0.0.1\\'], UUID(\\'75afe93f-50a7-39f1-ba84-4f93d9937c58\\'): [\\'127.0.0.2\\'], UUID(\\'459ceda5-165d-389b-aae0-960e35da8613\\'): [\\'127.0.0.3\\']}\\ncassandra.cluster: WARNING: Node 127.0.0.1 is reporting a schema disagreement: {UUID(\\'a695f657-421c-3c26-9cfb-c6e7001386ed\\'): [\\'127.0.0.3\\'], UUID(\\'8f099a08-0578-35e4-b223-5fa88fb706b1\\'): [\\'127.0.0.1\\'], UUID(\\'d56e6096-56d4-311b-a6c7-3598a35a9d13\\'): [\\'127.0.0.2\\']}\\ndtest: DEBUG: waiting for things to settle and sync\\ndtest: DEBUG: validate_schema_consistent() node1\\ndtest: DEBUG: validate_schema_consistent() node2\\ndtest: DEBUG: validate_schema_consistent() node3\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "alter_me_7 expected c1 -> c7, id, got: [u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LlwOxn\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\ncassandra.cluster: WARNING: Node 127.0.0.3 is reporting a schema disagreement: {UUID('7bb7f711-89ec-33e2-9493-85493b160925'): ['127.0.0.1'], UUID('75afe93f-50a7-39f1-ba84-4f93d9937c58'): ['127.0.0.2'], UUID('459ceda5-165d-389b-aae0-960e35da8613'): ['127.0.0.3']}\ncassandra.cluster: WARNING: Node 127.0.0.1 is reporting a schema disagreement: {UUID('a695f657-421c-3c26-9cfb-c6e7001386ed'): ['127.0.0.3'], UUID('8f099a08-0578-35e4-b223-5fa88fb706b1'): ['127.0.0.1'], UUID('d56e6096-56d4-311b-a6c7-3598a35a9d13'): ['127.0.0.2']}\ndtest: DEBUG: waiting for things to settle and sync\ndtest: DEBUG: validate_schema_consistent() node1\ndtest: DEBUG: validate_schema_consistent() node2\ndtest: DEBUG: validate_schema_consistent() node3\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_tables_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 120.984, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 31.848, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "functional_test", "className": "global_row_key_cache_test.TestGlobalRowKeyCache", "duration": 256.076, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy", "className": "consistency_test.TestAvailability", "duration": 191.92, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multiple_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 147.027, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_decommission_test", "className": "topology_test.TestTopology", "duration": 149.555, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "do_not_join_ring_test", "className": "topology_test.TestTopology", "duration": 45.767, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_active_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 93.338, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_column_index_stress", "className": "wide_rows_test.TestWideRows", "duration": 81.751, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/wide_rows_test.py\", line 104, in test_column_index_stress\n    assert len(rows) == expected_rows\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pfBqvg\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pfBqvg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 80.747, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 80.588, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 68.599, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 50.058, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 28.578, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 72.061, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.64, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 248, in test_with_less_results_than_page_size\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n3gnMS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n3gnMS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.919, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "static_columns_with_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.072, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3979, in static_columns_with_distinct_test\n    rows = list(cursor.execute(\"SELECT DISTINCT k, s FROM test\"))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ABW1to\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ABW1to\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.734, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "invalid_custom_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.955, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.367, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.02, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 484, in indexed_with_eq_test\n    res = cursor.execute(\"SELECT firstname FROM users WHERE userid = 550e8400-e29b-41d4-a716-446655440000 AND age = 33\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YNJdxC\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YNJdxC\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.383, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_and_list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.641, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.999, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2iEksv\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2iEksv\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.238, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.196, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "refuse_in_with_indexes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.906, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.027, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4232, in whole_list_conditional_test\n    check_applies(\"l = ['foo', 'bar', 'foobar']\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4230, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AtpecD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AtpecD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.11, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.381, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.654, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxwFeB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LxwFeB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.492, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_partition_key_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.626, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2430, in composite_partition_key_validation_test\n    assert len(res) == 3, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UHdfRk\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UHdfRk\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.023, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "empty_blob_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.646, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2883, in empty_blob_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B3Xx9v\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-B3Xx9v\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6924_dropping_cf", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 58.358, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 35.661, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 26.665, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "paging_test.TestPagingSize", "duration": 25.445, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_standard_remove", "className": "thrift_tests.TestMutations", "duration": 6.959, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wTJgQg\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wTJgQg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_count_paging", "className": "thrift_tests.TestMutations", "duration": 7.165, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-wTJgQg\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-wTJgQg] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IoeauW\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-wTJgQg\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-wTJgQg] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IoeauW\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_insert", "className": "thrift_tests.TestMutations", "duration": 7.229, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-IoeauW\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-IoeauW] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-89_6lR\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-IoeauW\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-IoeauW] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-89_6lR\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_range_collation", "className": "thrift_tests.TestMutations", "duration": 7.345, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-89_6lR\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-89_6lR] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W8sMxH\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-89_6lR\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-89_6lR] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W8sMxH\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 7.297, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-W8sMxH\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-W8sMxH] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nMOQrF\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-W8sMxH\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-W8sMxH] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nMOQrF\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_long_order", "className": "thrift_tests.TestMutations", "duration": 7.041, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-nMOQrF\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-nMOQrF] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XhksEf\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-nMOQrF\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-nMOQrF] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XhksEf\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_mutate_insertions_and_deletions", "className": "thrift_tests.TestMutations", "duration": 7.178, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-XhksEf\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-XhksEf] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iofFF9\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-XhksEf\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-XhksEf] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iofFF9\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_get_slice_super_range", "className": "thrift_tests.TestMutations", "duration": 7.708, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-iofFF9\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-iofFF9] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-t_MCTq\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-iofFF9\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-iofFF9] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-t_MCTq\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_letter_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 25.1, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.049, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.544, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_past_and_future_dates", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.001, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "use_custom_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 20.543, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/native_transport_ssl_test.py\", line 54, in use_custom_port_test\n    self._putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/native_transport_ssl_test.py\", line 104, in _putget\n    putget(cluster, session, cl=ConsistencyLevel.ONE)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vRpbxJ\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vRpbxJ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_set_ttl_test", "className": "ttl_test.TestTTL", "duration": 19.533, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_with_ttl_expired_test", "className": "ttl_test.TestTTL", "duration": 9.022, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.898, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cant_create_existing_user_test", "className": "auth_test.TestAuth", "duration": 16.948, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_basic_snapshot_and_restore", "className": "snapshot_test.TestSnapshot", "duration": 11.713, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 92, in test_basic_snapshot_and_restore\n    self.restore_snapshot(snapshot_dir, node1, 'ks', 'cf')\n  File \"/home/automaton/cassandra-dtest/snapshot_test.py\", line 59, in restore_snapshot\n    (\" \".join(args), exit_status, stdout, stderr))\n\"sstableloader command '/home/automaton/cassandra/bin/sstableloader -d 127.0.0.1 /mnt/tmp/tmp1bT6ZC/ks/cf' failed; exit status: 1'; stdout: ; stderr: Unable to find abstract-type class 'org.apache.cassandra.db.marshal.int'\\njava.lang.ClassNotFoundException: org.apache.cassandra.db.marshal.int\\norg.apache.cassandra.exceptions.ConfigurationException: Unable to find abstract-type class 'org.apache.cassandra.db.marshal.int'\\n\\tat org.apache.cassandra.utils.FBUtilities.classForName(FBUtilities.java:424)\\n\\tat org.apache.cassandra.db.marshal.TypeParser.getAbstractType(TypeParser.java:334)\\n\\tat org.apache.cassandra.db.marshal.TypeParser.parse(TypeParser.java:84)\\n\\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.createDefinitionFromRow(NativeSSTableLoaderClient.java:174)\\n\\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.createTableMetadata(NativeSSTableLoaderClient.java:157)\\n\\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.fetchTablesMetadata(NativeSSTableLoaderClient.java:116)\\n\\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.init(NativeSSTableLoaderClient.java:82)\\n\\tat org.apache.cassandra.io.sstable.SSTableLoader.stream(SSTableLoader.java:159)\\n\\tat org.apache.cassandra.tools.BulkLoader.main(BulkLoader.java:97)\\nCaused by: java.lang.ClassNotFoundException: org.apache.cassandra.db.marshal.int\\n\\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\\n\\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\\n\\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\\n\\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\\n\\tat java.lang.Class.forName0(Native Method)\\n\\tat java.lang.Class.forName(Class.java:264)\\n\\tat org.apache.cassandra.utils.FBUtilities.classForName(FBUtilities.java:420)\\n\\t... 8 more\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XIKMPn\\ndtest: DEBUG: Making snapshot....\\ndtest: DEBUG: Running snapshot cmd: snapshot ks -cf cf -t basic\\ndtest: DEBUG: snapshot_dir is : /mnt/tmp/dtest-XIKMPn/test/node1/data/ks/cf-8fd7fc70832a11e5ae1fc1ffe5b4f4e9/snapshots/basic\\ndtest: DEBUG: snapshot copy is : /mnt/tmp/tmp1bT6ZC\\ndtest: DEBUG: Restoring snapshot....\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "sstableloader command '/home/automaton/cassandra/bin/sstableloader -d 127.0.0.1 /mnt/tmp/tmp1bT6ZC/ks/cf' failed; exit status: 1'; stdout: ; stderr: Unable to find abstract-type class 'org.apache.cassandra.db.marshal.int'\njava.lang.ClassNotFoundException: org.apache.cassandra.db.marshal.int\norg.apache.cassandra.exceptions.ConfigurationException: Unable to find abstract-type class 'org.apache.cassandra.db.marshal.int'\n\tat org.apache.cassandra.utils.FBUtilities.classForName(FBUtilities.java:424)\n\tat org.apache.cassandra.db.marshal.TypeParser.getAbstractType(TypeParser.java:334)\n\tat org.apache.cassandra.db.marshal.TypeParser.parse(TypeParser.java:84)\n\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.createDefinitionFromRow(NativeSSTableLoaderClient.java:174)\n\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.createTableMetadata(NativeSSTableLoaderClient.java:157)\n\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.fetchTablesMetadata(NativeSSTableLoaderClient.java:116)\n\tat org.apache.cassandra.utils.NativeSSTableLoaderClient.init(NativeSSTableLoaderClient.java:82)\n\tat org.apache.cassandra.io.sstable.SSTableLoader.stream(SSTableLoader.java:159)\n\tat org.apache.cassandra.tools.BulkLoader.main(BulkLoader.java:97)\nCaused by: java.lang.ClassNotFoundException: org.apache.cassandra.db.marshal.int\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:264)\n\tat org.apache.cassandra.utils.FBUtilities.classForName(FBUtilities.java:420)\n\t... 8 more\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XIKMPn\ndtest: DEBUG: Making snapshot....\ndtest: DEBUG: Running snapshot cmd: snapshot ks -cf cf -t basic\ndtest: DEBUG: snapshot_dir is : /mnt/tmp/dtest-XIKMPn/test/node1/data/ks/cf-8fd7fc70832a11e5ae1fc1ffe5b4f4e9/snapshots/basic\ndtest: DEBUG: snapshot copy is : /mnt/tmp/tmp1bT6ZC\ndtest: DEBUG: Restoring snapshot....\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "simple_schema_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 11.012, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 8.867, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "each_statement_in_batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 7.831, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.275, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "statements_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_chunk_length_test", "className": "configuration_test.TestConfiguration", "duration": 7.388, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_udf_test", "className": "user_functions_test.TestUserFunctions", "duration": 8.631, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.219, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_aggregate_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_migration", "className": "user_functions_test.TestUserFunctions", "duration": 35.63, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_overload_test", "className": "user_functions_test.TestUserFunctions", "duration": 34.226, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_scripting_test", "className": "user_functions_test.TestUserFunctions", "duration": 8.329, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.149, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_test", "className": "user_functions_test.TestUserFunctions", "duration": 8.009, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "row_existence_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.065, "errorStackTrace": null, "age": 77, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_index_with_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 61, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_and_list_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "counters_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 723, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 5, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_with_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "multi_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "create_alter_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 137, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4882_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "only_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_with_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 77, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_blob_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 77, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 134, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 724, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_delete_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 136, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "unescaped_string_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.121, "errorStackTrace": null, "age": 134, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "float_with_exponent_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "indexed_with_eq_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6050_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.124, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 649, "skippedMessage": "3.0.0 > 2.0.x", "name": "timestamp_and_ttl_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 79, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 725, "skippedMessage": "3.0.0 > 2.0.x", "name": "sparse_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 727, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 726, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_with_alias_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.122, "errorStackTrace": null, "age": 76, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "resumable_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 720.356, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/bootstrap_test.py\", line 142, in resumable_bootstrap_test\n    node3.watch_log_for(\"Starting listening for CQL clients\")\n  File \"/home/automaton/ccm/ccmlib/node.py\", line 403, in watch_log_for\n    raise TimeoutError(time.strftime(\"%d %b %Y %H:%M:%S\", time.gmtime()) + \" [\" + self.name + \"] Missing: \" + str([e.pattern for e in tofind]) + \":\\n\" + reads[:50] + \".....\\nSee {} for remainder\".format(filename))\n\"04 Nov 2015 18:54:52 [node3] Missing: ['Starting listening for CQL clients']:\\nINFO  [main] 2015-11-04 18:44:11,287 YamlConfigura.....\\nSee system.log for remainder\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-c6vAUR\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "04 Nov 2015 18:54:52 [node3] Missing: ['Starting listening for CQL clients']:\nINFO  [main] 2015-11-04 18:44:11,287 YamlConfigura.....\nSee system.log for remainder\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-c6vAUR\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_users", "className": "consistency_test.TestAccuracy", "duration": 147.069, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "replace_shutdown_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 123.683, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 47, in replace_shutdown_node_test\n    self._replace_node_test(gently=True)\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 103, in _replace_node_test\n    self.assertListEqual(initialData, finalData)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 742, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 641, in assertSequenceEqual\n    % (seq_type_name, safe_repr(seq1)))\n'First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fbb8e9aa610>\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NJgPse\\ndtest: DEBUG: Starting cluster with 3 nodes.\\ndtest: DEBUG: 32\\ndtest: DEBUG: Inserting Data...\\ndtest: DEBUG: Stopping node 3.\\ndtest: DEBUG: Testing node stoppage (query should fail).\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\ndtest: DEBUG: Starting node 4 to replace node 3\\ndtest: DEBUG: Verifying querying works again.\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fbb8e9aa610>\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NJgPse\ndtest: DEBUG: Starting cluster with 3 nodes.\ndtest: DEBUG: 32\ndtest: DEBUG: Inserting Data...\ndtest: DEBUG: Stopping node 3.\ndtest: DEBUG: Testing node stoppage (query should fail).\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\ndtest: DEBUG: Starting node 4 to replace node 3\ndtest: DEBUG: Verifying querying works again.\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "edge_2i_on_complex_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 217.865, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2744, in edge_2i_on_complex_pk_test\n    res = cursor.execute(\"SELECT value FROM indexed WHERE pk0 = 2\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vagtzz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 77, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vagtzz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "in_order_by_without_selecting_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 42.861, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4174, in in_order_by_without_selecting_test\n    self.assertEqual(results, list(sorted(results)))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 503, in _baseAssertEqual\n    if not first == second:\n  File \"cassandra/cluster.py\", line 3342, in cassandra.cluster.ResultSet.__eq__ (cassandra/cluster.c:63452)\n    self._enter_list_mode(\"equality operator\")\n  File \"cassandra/cluster.py\", line 3335, in cassandra.cluster.ResultSet._enter_list_mode (cassandra/cluster.c:63224)\n    raise RuntimeError(\"Cannot use %s when results have been iterated.\" % operator)\n\"Cannot use equality operator when results have been iterated.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Rm6la\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Cannot use equality operator when results have been iterated.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6Rm6la\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.65, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "limit_sparse_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.032, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 424, in limit_sparse_test\n    assert len(res) == 4, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LXnAIf\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LXnAIf\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "truncate_clean_cache_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.355, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.966, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2488, in __multi_in\n    assert len(res) == 16, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NqcZTs\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NqcZTs\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 69.088, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 818, in test_paging_using_secondary_indexes\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NlI4ws\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NlI4ws\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 61.268, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 41.972, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.998, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1731, in range_slice_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RhdtVA\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-RhdtVA\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-RhdtVA] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ci1KXe\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RhdtVA\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-RhdtVA\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-RhdtVA] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ci1KXe\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.469, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3790, in static_columns_cas_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, 'foo', 1, 'foo'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xPiWXB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 15, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xPiWXB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.149, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oA8QFm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 80, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oA8QFm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.223, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.407, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_4882_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 717, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.251, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4682, in cas_and_list_index_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, ['foo', 'bar'], 'foobar'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KgK_3c\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 11, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KgK_3c\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 36.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 31.315, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_consistency_test", "className": "counter_tests.TestCounters", "duration": 87.521, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "consistent_reads_after_bootstrap_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 81.555, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistent_bootstrap_test.py\", line 87, in consistent_reads_after_bootstrap_test\n    query_c1c2(n3session, n, ConsistencyLevel.ALL)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 48, in query_c1c2\n    assert len(rows) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S1Ip9l\\ndtest: DEBUG: Creating a ring\\ndtest: DEBUG: Set to talk to node 2\\ndtest: DEBUG: Generating some data for all nodes\\ndtest: DEBUG: Taking down node1\\ndtest: DEBUG: Writing data to only node2\\ndtest: DEBUG: Restart node1\\ndtest: DEBUG: Bootstraping node3\\ndtest: DEBUG: Checking that no data was lost\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S1Ip9l\ndtest: DEBUG: Creating a ring\ndtest: DEBUG: Set to talk to node 2\ndtest: DEBUG: Generating some data for all nodes\ndtest: DEBUG: Taking down node1\ndtest: DEBUG: Writing data to only node2\ndtest: DEBUG: Restart node1\ndtest: DEBUG: Bootstraping node3\ndtest: DEBUG: Checking that no data was lost\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "sstableloader_compression_none_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 60.3, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 94, in sstableloader_compression_none_to_none_test\n    self.load_sstable_with_configuration(None, None)\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 194, in load_sstable_with_configuration\n    \"sstableloader exited with a non-zero status: %d\" % exit_status)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'sstableloader exited with a non-zero status: 1\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M3SWtX\\ndtest: DEBUG: Testing sstableloader with pre_compression=None and post_compression=None\\ndtest: DEBUG: creating keyspace and inserting\\ndtest: DEBUG: Making a copy of the sstables\\ndtest: DEBUG: Wiping out the data and restarting cluster\\ndtest: DEBUG: re-creating the keyspace and column families.\\ndtest: DEBUG: Calling sstableloader\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "sstableloader exited with a non-zero status: 1\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M3SWtX\ndtest: DEBUG: Testing sstableloader with pre_compression=None and post_compression=None\ndtest: DEBUG: creating keyspace and inserting\ndtest: DEBUG: Making a copy of the sstables\ndtest: DEBUG: Wiping out the data and restarting cluster\ndtest: DEBUG: re-creating the keyspace and column families.\ndtest: DEBUG: Calling sstableloader\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "contention_test_many_threads", "className": "paxos_tests.TestPaxos", "duration": 87.928, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test", "className": "incremental_repair_test.TestIncRepair", "duration": 70.965, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "ttl_is_respected_on_delayed_replication_test", "className": "ttl_test.TestDistributedTTL", "duration": 22.02, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/ttl_test.py\", line 391, in ttl_is_respected_on_delayed_replication_test\n    \"\"\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 2, \\'alive_replicas\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ehfcJB\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 2, 'alive_replicas': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ehfcJB\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_ttl_can_be_removed_test", "className": "ttl_test.TestTTL", "duration": 8.403, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "compaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 53.57, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 32, in compaction_test\n    finalfiles, tmpfiles = self._check_files(node, KeyspaceName, TableName)\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 104, in _check_files\n    allfiles = self._invoke_sstableutil(ks, table, type='all')\n  File \"/home/automaton/cassandra-dtest/sstableutil_test.py\", line 152, in _invoke_sstableutil\n    assert False, \"Error invoking sstableutil\"\n'Error invoking sstableutil\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qfXFTI\\ndtest: DEBUG: Comparing all files...\\ndtest: DEBUG: About to invoke sstableutil...\\ndtest: DEBUG: WARN  19:21:19 Only 37512 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\\n\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "Error invoking sstableutil\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qfXFTI\ndtest: DEBUG: Comparing all files...\ndtest: DEBUG: About to invoke sstableutil...\ndtest: DEBUG: WARN  19:21:19 Only 37512 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "acknowledged_by_batchlog_set_when_batchlog_write_succeeds_test", "className": "batch_test.TestBatch", "duration": 46.417, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_throws_uae_test", "className": "batch_test.TestBatch", "duration": 34.677, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_accepts_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.698, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_insert_search_test", "className": "delete_insert_test.DeleteInsertTest", "duration": 44.015, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": "Exception in thread Thread-470:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/home/automaton/cassandra-dtest/delete_insert_test.py\", line 71, in run\n    assert len(rows) == len(deleted)\nTypeError: object of type 'ResultSet' has no len()\n\nException in thread Thread-461:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/home/automat\n...[truncated 5480 chars]...\n.run()\n  File \"/home/automaton/cassandra-dtest/delete_insert_test.py\", line 71, in run\n    assert len(rows) == len(deleted)\nTypeError: object of type 'ResultSet' has no len()\n\nException in thread Thread-458:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/home/automaton/cassandra-dtest/delete_insert_test.py\", line 71, in run\n    assert len(rows) == len(deleted)\nTypeError: object of type 'ResultSet' has no len()\n\n"}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "login_test", "className": "auth_test.TestAuth", "duration": 38.98, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_test", "className": "auth_test.TestAuth", "duration": 18.861, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_cant_drop_themselves_test", "className": "auth_test.TestAuth", "duration": 17.752, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_bad_crc", "className": "commitlog_test.TestCommitLog", "duration": 7.225, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/commitlog_test.py\", line 370, in test_bad_crc\n    self.assertEqual(len(results), 10)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QHv7ST\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QHv7ST\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commitlog_replay_on_startup", "className": "commitlog_test.TestCommitLog", "duration": 13.852, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_low_cardinality_indexes", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 30.0, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 96, in test_low_cardinality_indexes\n    self.assertEqual(3, len(result))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wd1ubQ\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wd1ubQ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tombstone_failure_threshold_message_test", "className": "pushed_notifications_test.TestVariousNotifications", "duration": 30.812, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_type_secondary_indexing", "className": "user_types_test.TestUserTypes", "duration": 28.063, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 424, in test_type_secondary_indexing\n    self.assertEqual(0, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aX0OP7\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aX0OP7\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_as_part_of_pkey", "className": "user_types_test.TestUserTypes", "duration": 29.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 28.993, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "paging_test.TestPagingWithModifiers", "duration": 25.893, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "query_all_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.409, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 475, in query_all_new_column_test\n    self.assertEqual(len(results), 1)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i799FE\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i799FE\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 22.926, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_datetime_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.449, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_client_warnings", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.846, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_writing_use_header", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.73, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_3_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.402, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_enabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.932, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 118, in hintedhandoff_enabled_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U_0uy4\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U_0uy4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_index_scan_expiring", "className": "thrift_tests.TestMutations", "duration": 7.015, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Vr8sNr\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Vr8sNr\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_count_around_page_size", "className": "thrift_tests.TestMutations", "duration": 7.208, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Vr8sNr\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Vr8sNr] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m8av9p\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Vr8sNr\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Vr8sNr] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m8av9p\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_column_validators", "className": "thrift_tests.TestMutations", "duration": 7.087, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-m8av9p\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-m8av9p] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KHEpUb\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-m8av9p\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-m8av9p] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KHEpUb\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_super_add", "className": "thrift_tests.TestMutations", "duration": 7.16, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-KHEpUb\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-KHEpUb] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L7rIOX\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-KHEpUb\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-KHEpUb] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L7rIOX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_describe_ring", "className": "thrift_tests.TestMutations", "duration": 7.155, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-L7rIOX\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-L7rIOX] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tKkC9p\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-L7rIOX\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-L7rIOX] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tKkC9p\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_invalid_ks_names", "className": "thrift_tests.TestMutations", "duration": 7.211, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-tKkC9p\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-tKkC9p] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-91hPlP\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-tKkC9p\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-tKkC9p] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-91hPlP\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_standard_batch_add", "className": "thrift_tests.TestMutations", "duration": 7.018, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-91hPlP\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-91hPlP] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cv0vyR\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-91hPlP\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-91hPlP] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cv0vyR\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_remove_expiring", "className": "thrift_tests.TestMutations", "duration": 7.118, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cv0vyR\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cv0vyR] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-X_mVTa\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cv0vyR\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cv0vyR] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-X_mVTa\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 594, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_part_of_supercolumns", "className": "thrift_tests.TestMutations", "duration": 7.207, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-X_mVTa\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-X_mVTa] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WzF8qX\\n--------------------- >> end captured logging << ---------------------'", "age": 134, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-X_mVTa\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-X_mVTa] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WzF8qX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_table_with_2ary_indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.82, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "creating_and_dropping_udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.504, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 625, in creating_and_dropping_udf_test\n    self.assertEqual(['double'], udf_meta.type_signature)\n\"'Function' object has no attribute 'type_signature'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ygjl07\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'Function' object has no attribute 'type_signature'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ygjl07\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "udt_table_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.876, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 718, in udt_table_test\n    verify_udt_table(self.cluster.version(), self.cluster.version(), 'ks', self.session)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 345, in verify_udt_table\n    assert_equal(cqltypes.UTF8Type, meta.field_types[0])\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"<class 'cassandra.cqltypes.UTF8Type'> != u'text'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jkpmuv\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "<class 'cassandra.cqltypes.UTF8Type'> != u'text'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jkpmuv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sc_with_row_cache_test", "className": "super_column_cache_test.TestSCCache", "duration": 7.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "short_read_test", "className": "consistency_test.TestConsistency", "duration": 61.311, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 634, in short_read_test\n    assert len(res) == 3, 'Expecting 3 values, got %d (%s)' % (len(res), str(res))\n'object of type \\'ResultSet\\' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IpNArt\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.1:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.1\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.1 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.1, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.1\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.1, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.1\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\ncassandra.cluster: WARNING: Host 127.0.0.1 has been marked down\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\\n    return self._try_connect(host)\\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\\n    self.control_connection.connect()\\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\\n    self._set_new_connection(self._reconnect_internal())\\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\\nNoHostAvailable: (\\'Unable to connect to any servers\\', {\\'127.0.0.2\\': error(111, \"Tried connecting to [(\\'127.0.0.2\\', 9042)]. Last error: Connection refused\")})\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\\nTraceback (most recent call last):\\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\\n    new_pool = HostConnection(host, distance, self)\\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\\n    self._connection = session.cluster.connection_factory(host.address)\\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\\n    conn = cls(host, *args, **kwargs)\\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\\n    self._connect_socket()\\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\\nerror: [Errno 111] Tried connecting to [(\\'127.0.0.3\\', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IpNArt\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.1:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.1 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.1, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.1, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.1', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\ncassandra.cluster: WARNING: Host 127.0.0.1 has been marked down\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: [control connection] Error connecting to 127.0.0.2:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 2050, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36570)\n    return self._try_connect(host)\n  File \"cassandra/cluster.py\", line 2070, in cassandra.cluster.ControlConnection._try_connect (cassandra/cluster.c:37047)\n    connection = self._cluster.connection_factory(host.address, is_control_connection=True)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: ERROR: Control connection failed to connect, shutting down Cluster:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 840, in cassandra.cluster.Cluster.connect (cassandra/cluster.c:11041)\n    self.control_connection.connect()\n  File \"cassandra/cluster.py\", line 2024, in cassandra.cluster.ControlConnection.connect (cassandra/cluster.c:35974)\n    self._set_new_connection(self._reconnect_internal())\n  File \"cassandra/cluster.py\", line 2059, in cassandra.cluster.ControlConnection._reconnect_internal (cassandra/cluster.c:36830)\n    raise NoHostAvailable(\"Unable to connect to any servers\", errors)\nNoHostAvailable: ('Unable to connect to any servers', {'127.0.0.2': error(111, \"Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\")})\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.3, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\ncassandra.cluster: WARNING: Failed to create connection pool for new host 127.0.0.3:\nTraceback (most recent call last):\n  File \"cassandra/cluster.py\", line 1776, in cassandra.cluster.Session.add_or_renew_pool.run_add_or_renew_pool (cassandra/cluster.c:30343)\n    new_pool = HostConnection(host, distance, self)\n  File \"cassandra/pool.py\", line 295, in cassandra.pool.HostConnection.__init__ (cassandra/pool.c:6160)\n    self._connection = session.cluster.connection_factory(host.address)\n  File \"cassandra/cluster.py\", line 785, in cassandra.cluster.Cluster.connection_factory (cassandra/cluster.c:9230)\n    return self.connection_class.factory(address, self.connect_timeout, *args, **kwargs)\n  File \"cassandra/connection.py\", line 306, in cassandra.connection.Connection.factory (cassandra/connection.c:5139)\n    conn = cls(host, *args, **kwargs)\n  File \"/home/automaton/python-driver/cassandra/io/libevreactor.py\", line 264, in __init__\n    self._connect_socket()\n  File \"cassandra/connection.py\", line 340, in cassandra.connection.Connection._connect_socket (cassandra/connection.c:6271)\n    raise socket.error(sockerr.errno, \"Tried connecting to %s. Last error: %s\" % ([a[4] for a in addresses], sockerr.strerror or sockerr))\nerror: [Errno 111] Tried connecting to [('127.0.0.3', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Host 127.0.0.3 has been marked down\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 217.015, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WLQ3af\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WLQ3af\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 100.285, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1590, in cql3_insert_thrift_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V_swe7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V_swe7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.708, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xNQQZb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xNQQZb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 54.661, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 46.026, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.039, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.355, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.768, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4314, in list_item_conditional_test\n    assert_none(cursor, \"SELECT * FROM %s\" % (table,))\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 44, in assert_none\n    assert list_res == [], \"Expected nothing from %s, but got %s\" % (query, list_res)\n\"Expected nothing from SELECT * FROM tlist, but got [[0, [u'foo', u'bar', u'foobar']]]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-05NSKj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Expected nothing from SELECT * FROM tlist, but got [[0, [u'foo', u'bar', u'foobar']]]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-05NSKj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "token_range_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.408, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1067, in token_range_test\n    assert len(res) == c, \"%s [all: %s]\" % (str(res), str(inOrder))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YIhvBV\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 78, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YIhvBV\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.589, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1687, in no_clustering_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e09c7C\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e09c7C\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "select_distinct_with_deletions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.699, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3304, in select_distinct_with_deletions_test\n    self.assertEqual(10, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sHMYfY\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 78, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sHMYfY\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.299, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K2yLjX\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K2yLjX\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 63.562, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1083, in test_paging_using_secondary_indexes_with_static_cols\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AHRrjc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AHRrjc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 30.362, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 863, in static_columns_paging_test\n    self.assertEqual([0] * 4 + [1] * 4 + [2] * 4 + [3] * 4, sorted([r.a for r in results]))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 742, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 724, in assertSequenceEqual\n    self.fail(msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 410, in fail\n    raise self.failureException(msg)\n\"Lists differ: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2,... != [0, 1, 1, 1, 1, 3, 3, 3, 3]\\n\\nFirst differing element 1:\\n0\\n1\\n\\nFirst list contains 7 additional elements.\\nFirst extra element 9:\\n2\\n\\n- [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\\n+ [0, 1, 1, 1, 1, 3, 3, 3, 3]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-D5rFgo\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Lists differ: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2,... != [0, 1, 1, 1, 1, 3, 3, 3, 3]\n\nFirst differing element 1:\n0\n1\n\nFirst list contains 7 additional elements.\nFirst extra element 9:\n2\n\n- [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\n+ [0, 1, 1, 1, 1, 3, 3, 3, 3]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-D5rFgo\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 38.67, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.953, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 722, "skippedMessage": null, "name": "rename_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.398, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2916, in rename_test\n    assert_one(cursor, \"SELECT foo1, foo2, foo3 FROM test\", [4, 3, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2LX9vm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2LX9vm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.662, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4896, in bug_6612_test\n    assert_one(cursor, \"select count(*) from session_data where app_name='foo' and account='bar' and last_access > 4 allow filtering\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MGmX1x\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MGmX1x\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.484, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 484, in indexed_with_eq_test\n    res = cursor.execute(\"SELECT firstname FROM users WHERE userid = 550e8400-e29b-41d4-a716-446655440000 AND age = 33\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f2Ynso\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f2Ynso\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "date_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.741, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.803, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "nameless_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.446, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 922, in nameless_index_test\n    res = cursor.execute(\"SELECT id FROM users WHERE birth_year = 42\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PMsjm9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PMsjm9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.829, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KqZMS9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KqZMS9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.1, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 358, in run\n    self.tearDown()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/upgrade_base.py\", line 267, in tearDown\n    super(UpgradeTester, self).tearDown()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 550, in tearDown\n    raise AssertionError('Unexpected error in %s node log: %s' % (node.name, errors))\n\"Unexpected error in node2 node log: ['ERROR [GossipStage:1] 2015-11-04 19:03:10,554 CassandraDaemon.java:185 - Exception in thread Thread[GossipStage:1,5,main]\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.service.StorageService.getApplicationStateValue(StorageService.java:1766) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.getTokensFor(StorageService.java:1839) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.handleStateNormal(StorageService.java:1892) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.onChange(StorageService.java:1649) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.Gossiper.doOnChangeNotifications(Gossiper.java:1179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.Gossiper.applyNewStates(Gossiper.java:1161) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.Gossiper.applyStateLocally(Gossiper.java:1119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb(GossipDigestAckVerbHandler.java:58) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.net.MessageDeliveryTask.run(MessageDeliveryTask.java:66) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_45]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_45]']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KqZMS9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-KqZMS9\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-KqZMS9] directory\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "Unexpected error in node2 node log: ['ERROR [GossipStage:1] 2015-11-04 19:03:10,554 CassandraDaemon.java:185 - Exception in thread Thread[GossipStage:1,5,main]\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.service.StorageService.getApplicationStateValue(StorageService.java:1766) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.getTokensFor(StorageService.java:1839) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.handleStateNormal(StorageService.java:1892) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.onChange(StorageService.java:1649) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.Gossiper.doOnChangeNotifications(Gossiper.java:1179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.Gossiper.applyNewStates(Gossiper.java:1161) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.Gossiper.applyStateLocally(Gossiper.java:1119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb(GossipDigestAckVerbHandler.java:58) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.net.MessageDeliveryTask.run(MessageDeliveryTask.java:66) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_45]\\n\\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_45]']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KqZMS9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-KqZMS9\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-KqZMS9] directory\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.962, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 33.659, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 84.782, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 820, in complex_repair_test\n    session2.execute(\"INSERT INTO ks.t (id, v, v2, v3) VALUES ({v}, {v}, 'a', 3.0)\".format(v=i * 2))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 3, \\'alive_replicas\\': 2, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4xhhX_\\ndtest: DEBUG: Shutdown node2 and node3\\ndtest: DEBUG: Write initial data to node1 (will be replicated to node4 and node5)\\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\\ndtest: DEBUG: Shutdown node1, node4 and node5\\ndtest: DEBUG: Start nodes 2 and 3\\ndtest: DEBUG: Verify the data in the MV on node2 with CL=ONE. No rows should be found.\\ndtest: DEBUG: Write new data in node2 and node3 that overlap those in node1, node4 and node5\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 3, 'alive_replicas': 2, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4xhhX_\ndtest: DEBUG: Shutdown node2 and node3\ndtest: DEBUG: Write initial data to node1 (will be replicated to node4 and node5)\ndtest: DEBUG: Verify the data in the MV on node1 with CL=ONE\ndtest: DEBUG: Shutdown node1, node4 and node5\ndtest: DEBUG: Start nodes 2 and 3\ndtest: DEBUG: Verify the data in the MV on node2 with CL=ONE. No rows should be found.\ndtest: DEBUG: Write new data in node2 and node3 that overlap those in node1, node4 and node5\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "empty_vs_gcable_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 135.1, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 92.345, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_commit_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 83.442, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "restart_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 78.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "node1: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9160)\n       binary=('localhost', 9161)\n       storage=('127.0.0.1', 7000)\n       jmx_port=7100\n       remote_debug_port=0\n       initial_token=-9223372036854775808\nnode2: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9162)\n       binary=('localhost', 9163)\n       storage=('127.0.0.2', 7000)\n       jmx_port=7200\n       remote_debug_port=0\n       initial_token=0\n", "skipped": false, "stderr": "/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9161 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9163 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n"}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_set_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 7.253, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 638, in test_set_indexes\n    self.assertEqual(0, len(row))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mASB3s\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-mASB3s\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos_any", "className": "write_failures_test.TestWriteFailures", "duration": 59.216, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 53.391, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 34.181, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "rangeputget_test", "className": "putget_test.TestPutGet", "duration": 47.476, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_1_test", "className": "batch_test.TestBatch", "duration": 89.925, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 29.662, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_with_in_orderby_and_two_partition_keys", "className": "paging_test.TestPagingData", "duration": 25.598, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_incr_decr_standard_batch_remove", "className": "thrift_tests.TestMutations", "duration": 7.718, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mo70PD\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mo70PD\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_multiget_slice_with_compact_table", "className": "thrift_tests.TestMutations", "duration": 7.122, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Mo70PD\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Mo70PD] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m_nWO0\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Mo70PD\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Mo70PD] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-m_nWO0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_cf_remove_column", "className": "thrift_tests.TestMutations", "duration": 7.208, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-m_nWO0\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-m_nWO0] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xT7m_p\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-m_nWO0\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-m_nWO0] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xT7m_p\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 7.284, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xT7m_p\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xT7m_p] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xNOBUN\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xT7m_p\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xT7m_p] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xNOBUN\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_create_then_drop_ks", "className": "thrift_tests.TestMutations", "duration": 7.106, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xNOBUN\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xNOBUN] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-scy1zr\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xNOBUN\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xNOBUN] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-scy1zr\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_bad_batch_calls", "className": "thrift_tests.TestMutations", "duration": 7.292, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-scy1zr\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-scy1zr] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-T3M5Fs\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-scy1zr\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-scy1zr] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-T3M5Fs\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_column_name_lengths", "className": "thrift_tests.TestMutations", "duration": 7.422, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-T3M5Fs\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-T3M5Fs] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Td5BxW\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-T3M5Fs\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-T3M5Fs] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Td5BxW\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_invalid_strategy_class", "className": "thrift_tests.TestMutations", "duration": 7.35, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Td5BxW\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Td5BxW] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lTGf30\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Td5BxW\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Td5BxW] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lTGf30\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nulls_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 27.459, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_no_counters_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 6.978, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udt_test", "className": "udtencoding_test.TestUDTEncoding", "duration": 26.264, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_1_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.023, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_list_ttl_test", "className": "ttl_test.TestTTL", "duration": 19.274, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_allows_bad_pass_and_continued_use", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.091, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_round_trip", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.537, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "tracing_from_system_traces_test", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.819, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_clear", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.279, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_all_datatypes_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.346, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 749, in test_all_datatypes_round_trip\n    assert len(imported_results) == 1\n'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CxHY6c\\ndtest: DEBUG: Exporting to csv file: /mnt/tmp/tmp4ozRjz\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CxHY6c\ndtest: DEBUG: Exporting to csv file: /mnt/tmp/tmp4ozRjz\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  (EE)  Process ImportProcess-2:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-3:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-1:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_null_as_null_indicator", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.767, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "modify_and_select_auth_test", "className": "auth_test.TestAuth", "duration": 18.428, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 358, in modify_and_select_auth_test\n    self.assertEquals(0, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dxoTzq\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dxoTzq\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "ghosts_test", "className": "range_ghost_test.TestRangeGhosts", "duration": 9.16, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/range_ghost_test.py\", line 25, in ghosts_test\n    assert len(res) == rows, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9lzlPV\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9lzlPV\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "gc_test", "className": "deletion_test.TestDeletion", "duration": 8.715, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/deletion_test.py\", line 26, in gc_test\n    assert len(result) == 2 and len(result[0]) == 2 and len(result[1]) == 2, result\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UbjDV_\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UbjDV_\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "delete_using_pkey_json_test", "className": "json_test.FromJsonDeleteTests", "duration": 9.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "pkey_requirement_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 8.031, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "rename_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 8.133, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compact_test", "className": "schema_test.TestSchema", "duration": 7.495, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_to_30_test", "className": "upgrade_internal_auth_test.TestAuthUpgrade", "duration": 330.334, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-3.0)\nCompiling Cassandra cassandra-3.0 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "wide_row_test", "className": "putget_test.TestPutGet", "duration": 231.497, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/putget_test.py\", line 92, in wide_row_test\n    tools.query_columns(self, session, key, size, offset=x * size - 1)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 81, in query_columns\n    assert len(res) == columns_count, \"%s != %s (%s-%s)\" % (len(res), columns_count, offset, columns_count + offset - 1)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qrNU6J\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qrNU6J\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "decommissioned_wiped_node_can_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 189.539, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "replace_stopped_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 135.908, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 40, in replace_stopped_node_test\n    self._replace_node_test(gently=False)\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 103, in _replace_node_test\n    self.assertListEqual(initialData, finalData)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 742, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 641, in assertSequenceEqual\n    % (seq_type_name, safe_repr(seq1)))\n'First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fe33d3643d0>\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rf_FXg\\ndtest: DEBUG: Starting cluster with 3 nodes.\\ndtest: DEBUG: 32\\ndtest: DEBUG: Inserting Data...\\ndtest: DEBUG: Stopping node 3.\\ndtest: DEBUG: Testing node stoppage (query should fail).\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\ndtest: DEBUG: Starting node 4 to replace node 3\\ndtest: DEBUG: Verifying querying works again.\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fe33d3643d0>\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rf_FXg\ndtest: DEBUG: Starting cluster with 3 nodes.\ndtest: DEBUG: 32\ndtest: DEBUG: Inserting Data...\ndtest: DEBUG: Stopping node 3.\ndtest: DEBUG: Testing node stoppage (query should fail).\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\ndtest: DEBUG: Starting node 4 to replace node 3\ndtest: DEBUG: Verifying querying works again.\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "restart_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 113.592, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 158.223, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VMZuGP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VMZuGP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "indexes_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 43.051, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1972, in indexes_composite_test\n    res = cursor.execute(\"SELECT blog_id, timestamp FROM test WHERE author = 'bob'\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vsydAW\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vsydAW\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.541, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4235, in whole_list_conditional_test\n    check_applies(\"l >= ['a']\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4230, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, ['foo', 'bar', 'foobar']]] from SELECT * FROM tlist, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uqrdWB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Expected [[0, ['foo', 'bar', 'foobar']]] from SELECT * FROM tlist, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uqrdWB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 43.839, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "exclusive_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.781, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.493, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.397, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.422, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3802, in static_columns_cas_test\n    assert_all(cursor, \"SELECT * FROM test\", [[0, 'k1', 2, 'foo'], [0, 'k2', 2, 'bar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SZVsZo\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 15, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SZVsZo\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.131, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 258, in dense_cf_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Xkjvwf\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Xkjvwf\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 63.605, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 281, in test_with_more_results_than_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wYs87x\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wYs87x\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 43.238, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.333, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_index_with_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.617, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1760, in composite_index_with_pk_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pKvvmK\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-pKvvmK\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-pKvvmK] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LsNiXp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pKvvmK\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-pKvvmK\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-pKvvmK] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LsNiXp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.686, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AGWfaQ\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-AGWfaQ\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-AGWfaQ] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jHnd1W\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AGWfaQ\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-AGWfaQ\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-AGWfaQ] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jHnd1W\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "select_key_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.41, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 524, in select_key_in_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wwm_70\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wwm_70\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_with_deletes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.475, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2398, in range_with_deletes_test\n    assert len(res) == nb_keys / 2, \"Expected %d but got %d\" % (nb_keys / 2, len(res))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M9mjBb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M9mjBb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 38.149, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1094, in timestamp_and_ttl_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6G3T8f\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 79, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6G3T8f\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.258, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.533, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JTo0o1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JTo0o1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 39.172, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 34.029, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 32.41, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 89.78, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ignore_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 87.215, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 22.98, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 61.972, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 112, in sstableloader_compression_deflate_to_none_test\n    self.load_sstable_with_configuration('Deflate', None)\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 194, in load_sstable_with_configuration\n    \"sstableloader exited with a non-zero status: %d\" % exit_status)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'sstableloader exited with a non-zero status: 1\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SH9bv2\\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=None\\ndtest: DEBUG: creating keyspace and inserting\\ndtest: DEBUG: Making a copy of the sstables\\ndtest: DEBUG: Wiping out the data and restarting cluster\\ndtest: DEBUG: re-creating the keyspace and column families.\\ndtest: DEBUG: Calling sstableloader\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "sstableloader exited with a non-zero status: 1\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SH9bv2\ndtest: DEBUG: Testing sstableloader with pre_compression=Deflate and post_compression=None\ndtest: DEBUG: creating keyspace and inserting\ndtest: DEBUG: Making a copy of the sstables\ndtest: DEBUG: Wiping out the data and restarting cluster\ndtest: DEBUG: re-creating the keyspace and column families.\ndtest: DEBUG: Calling sstableloader\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_index_file_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 37.577, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "snapshot_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 75.218, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_any", "className": "write_failures_test.TestWriteFailures", "duration": 71.602, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_list_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 7.1, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 541, in test_list_indexes\n    self.assertEqual(0, len(row))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kYPAgU\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kYPAgU\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "bug3367_test", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 9.634, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 43, in bug3367_test\n    assert len(result) == 4, \"Expecting 4 users, got\" + str(result)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LzRbik\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LzRbik\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "paging_test.TestPagingData", "duration": 51.637, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 33.807, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 43.276, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "paging_test.TestPagingSize", "duration": 25.965, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_no_results", "className": "paging_test.TestPagingSize", "duration": 25.408, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "ttl_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 47.62, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 454, in ttl_test\n    self.assertEqual(len(rows), 0, \"Expected 0 rows but got {}\".format(len(rows)))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wZOk6n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wZOk6n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "simple_increment_test", "className": "counter_tests.TestCounters", "duration": 25.694, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/counter_tests.py\", line 40, in simple_increment_test\n    assert len(res) == nb_counter\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NhdwBU\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NhdwBU\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 28.812, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 18.541, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 268, in large_compaction_warning_test\n    assert len(ret) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gvgf7E\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gvgf7E\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_table_batch_for_10554_test", "className": "batch_test.TestBatch", "duration": 22.775, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_ks_auth_test", "className": "auth_test.TestAuth", "duration": 18.163, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_ttl_has_priority_on_defaut_ttl_test", "className": "ttl_test.TestTTL", "duration": 14.485, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 15.969, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "counters_test", "className": "json_test.ToJsonSelectTests", "duration": 8.633, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "null_value_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 8.527, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 13.379, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_quoted_column_names_reading_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.977, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 540, in test_quoted_column_names_reading_specify_names\n    self.quoted_column_names_reading_template(specify_column_names=True)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 532, in quoted_column_names_reading_template\n    self.assertCsvResultEqual(self.tempfile.name, results)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 167, in assertCsvResultEqual\n    raise e\n\"Element counts were not equal:\\nFirst has 1, Second has 0:  ['1', 'no']\\nFirst has 1, Second has 0:  ['2', 'Yes']\\nFirst has 1, Second has 0:  ['3', 'True']\\nFirst has 1, Second has 0:  ['4', 'false']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QMDOMM\\ndtest: WARNING: Different # of entries. CSV: 4 vs results: 0\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Element counts were not equal:\nFirst has 1, Second has 0:  ['1', 'no']\nFirst has 1, Second has 0:  ['2', 'Yes']\nFirst has 1, Second has 0:  ['3', 'True']\nFirst has 1, Second has 0:  ['4', 'false']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QMDOMM\ndtest: WARNING: Different # of entries. CSV: 4 vs results: 0\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  Process ImportProcess-3:(EE)  Process ImportProcess-1:(EE)  Traceback (most recent call last):(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-2:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_use_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.488, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.725, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_eat_glass", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.92, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_empty_range", "className": "thrift_tests.TestMutations", "duration": 6.848, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AssENv\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AssENv\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_mutate_standard_columns", "className": "thrift_tests.TestMutations", "duration": 7.818, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-AssENv\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-AssENv] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-htUziE\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-AssENv\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-AssENv] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-htUziE\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_mutate_super_deletion", "className": "thrift_tests.TestMutations", "duration": 8.06, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-htUziE\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-htUziE] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eyT0zP\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-htUziE\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-htUziE] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eyT0zP\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_range_with_remove_cf", "className": "thrift_tests.TestMutations", "duration": 7.601, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eyT0zP\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eyT0zP] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eWqGer\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eyT0zP\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eyT0zP] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eWqGer\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_long_remove", "className": "thrift_tests.TestMutations", "duration": 7.388, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eWqGer\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eWqGer] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oJA90g\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eWqGer\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eWqGer] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oJA90g\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_insert_super", "className": "thrift_tests.TestMutations", "duration": 7.752, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-oJA90g\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-oJA90g] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l4HQJP\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-oJA90g\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-oJA90g] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l4HQJP\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_bad_system_calls", "className": "thrift_tests.TestMutations", "duration": 7.237, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-l4HQJP\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-l4HQJP] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qJTtfM\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-l4HQJP\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-l4HQJP] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qJTtfM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "index_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 8.057, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 7.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableverify_test", "className": "offline_tools_test.TestOfflineTools", "duration": 500.672, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableexpiredblockers_test", "className": "offline_tools_test.TestOfflineTools", "duration": 12.558, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "dc_repair_test", "className": "repair_test.TestRepair", "duration": 70.583, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 252, in dc_repair_test\n    cluster = self._setup_multi_dc()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 310, in _setup_multi_dc\n    self.check_rows_on_node(node2, 2000, missings=[1000])\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 27, in check_rows_on_node\n    result = session.execute(\"SELECT * FROM cf LIMIT %d\" % (rows * 2))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 2, \\'alive_replicas\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-y_jo5o\\ndtest: DEBUG: Starting cluster..\\ndtest: DEBUG: Inserting data...\\ndtest: DEBUG: Checking data...\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 2, 'alive_replicas': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-y_jo5o\ndtest: DEBUG: Starting cluster..\ndtest: DEBUG: Inserting data...\ndtest: DEBUG: Checking data...\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "interrupt_build_process_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 137.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "add_dc_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 87.576, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 353, in add_dc_after_mv_test\n    session.execute(\"INSERT INTO t (id, v) VALUES ({v}, {v})\".format(v=i))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 1, \\'alive_replicas\\': 0, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uVu6Kc\\ndtest: DEBUG: Creating schema\\ndtest: DEBUG: Writing 1k to base\\ndtest: DEBUG: Reading 1k from view\\ndtest: DEBUG: Reading 1k from base\\ndtest: DEBUG: Bootstrapping new node in another dc\\ndtest: DEBUG: Bootstrapping new node in another dc\\ndtest: DEBUG: Verifying data from new node in view\\ndtest: DEBUG: Inserting 100 into base\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 1, 'alive_replicas': 0, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uVu6Kc\ndtest: DEBUG: Creating schema\ndtest: DEBUG: Writing 1k to base\ndtest: DEBUG: Reading 1k from view\ndtest: DEBUG: Reading 1k from base\ndtest: DEBUG: Bootstrapping new node in another dc\ndtest: DEBUG: Bootstrapping new node in another dc\ndtest: DEBUG: Verifying data from new node in view\ndtest: DEBUG: Inserting 100 into base\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "allow_filtering_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 33.407, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/materialized_views_test.py\", line 406, in allow_filtering_test\n    self.assertEqual(len(rows), 1000, \"Expected 1000 rows but got {}\".format(len(rows)))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wXkMYY\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wXkMYY\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "immutable_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.689, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_2_test", "className": "batch_test.TestBatch", "duration": 174.787, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_rejects_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.316, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 159.199, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YEYURT\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YEYURT\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 103.087, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8VNh1y\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 80, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8VNh1y\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.795, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i_AMir\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-i_AMir\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-i_AMir] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2Jnkvz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i_AMir\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-i_AMir\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-i_AMir] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2Jnkvz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.693, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.471, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-85pUJG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-85pUJG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "float_with_exponent_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.025, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_and_reverse_type_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.6, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.929, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3399, in bug_6115_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, 2]] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wSHyZ_\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Expected [[0, 2]] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wSHyZ_\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 46.517, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 718, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 45.142, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3582, in large_count_test\n    assert_one(cursor, \"SELECT COUNT(*) FROM test\", [9999])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BH3bIG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 10, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BH3bIG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.497, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 89.229, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-19S59i\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 77, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-19S59i\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.243, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "nonpure_function_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.305, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.107, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3rlsKE\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3rlsKE\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "row_existence_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.223, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1613, in row_existence_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W8EdWp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-W8EdWp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.663, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.41, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4311, in list_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tXXDrl\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tXXDrl\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 723, "skippedMessage": null, "name": "static_columns_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.391, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3720, in static_columns_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, None, 42, None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-E5WGtq\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-E5WGtq\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "nan_infinity_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.236, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3690, in nan_infinity_test\n    selected = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pcxIh_\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 77, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pcxIh_\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.445, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 30.132, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 59.79, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 103, in sstableloader_compression_snappy_to_none_test\n    self.load_sstable_with_configuration('Snappy', None)\n  File \"/home/automaton/cassandra-dtest/sstable_generation_loading_test.py\", line 194, in load_sstable_with_configuration\n    \"sstableloader exited with a non-zero status: %d\" % exit_status)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'sstableloader exited with a non-zero status: 1\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-76C9qG\\ndtest: DEBUG: Testing sstableloader with pre_compression=Snappy and post_compression=None\\ndtest: DEBUG: creating keyspace and inserting\\ndtest: DEBUG: Making a copy of the sstables\\ndtest: DEBUG: Wiping out the data and restarting cluster\\ndtest: DEBUG: re-creating the keyspace and column families.\\ndtest: DEBUG: Calling sstableloader\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "sstableloader exited with a non-zero status: 1\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-76C9qG\ndtest: DEBUG: Testing sstableloader with pre_compression=Snappy and post_compression=None\ndtest: DEBUG: creating keyspace and inserting\ndtest: DEBUG: Making a copy of the sstables\ndtest: DEBUG: Wiping out the data and restarting cluster\ndtest: DEBUG: re-creating the keyspace and column families.\ndtest: DEBUG: Calling sstableloader\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_refresh_schema_on_timeout_error", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 78.418, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.54, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_colons_in_string_literals", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.684, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_explicit_column_order_reading", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.064, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 496, in test_explicit_column_order_reading\n    self.assertCsvResultEqual(reference_file.name, results)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_copy_tests.py\", line 167, in assertCsvResultEqual\n    raise e\n\"Element counts were not equal:\\nFirst has 1, Second has 0:  ['1', 'ham', '20']\\nFirst has 1, Second has 0:  ['2', 'eggs', '40']\\nFirst has 1, Second has 0:  ['3', 'beans', '60']\\nFirst has 1, Second has 0:  ['4', 'toast', '80']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XuuhSC\\ndtest: WARNING: Different # of entries. CSV: 4 vs results: 0\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Element counts were not equal:\nFirst has 1, Second has 0:  ['1', 'ham', '20']\nFirst has 1, Second has 0:  ['2', 'eggs', '40']\nFirst has 1, Second has 0:  ['3', 'beans', '60']\nFirst has 1, Second has 0:  ['4', 'toast', '80']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XuuhSC\ndtest: WARNING: Different # of entries. CSV: 4 vs results: 0\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  Process ImportProcess-2:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-1:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  Process ImportProcess-3:(EE)  Traceback (most recent call last):(EE)    File \"/usr/lib/python2.7/multiprocessing/process.py\", line 258, in _bootstrap(EE)      self.run()(EE)    File \"/home/automaton/cassandra/bin/cqlsh.py\", line 2397, in run(EE)      cqltypes = [table_meta.columns[name].typestring for name in self.columns](EE)  AttributeError: 'ColumnMetadata' object has no attribute 'typestring'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 67.602, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 22.26, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 10.669, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "paging_test.TestPagingQueryIsolation", "duration": 68.803, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 32.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 27.587, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos", "className": "write_failures_test.TestWriteFailures", "duration": 59.699, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "system_auth_ks_is_alterable_test", "className": "auth_test.TestAuth", "duration": 55.69, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_cf_auth_test", "className": "auth_test.TestAuth", "duration": 18.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "conditional_create_drop_user_test", "className": "auth_test.TestAuth", "duration": 16.522, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 189, in conditional_create_drop_user_test\n    self.assertEqual(1, len(users))  # cassandra\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Rz144V\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Rz144V\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "ttl_is_respected_on_repair_test", "className": "ttl_test.TestDistributedTTL", "duration": 42.098, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/ttl_test.py\", line 461, in ttl_is_respected_on_repair_test\n    assert_row_count(session2, 'ttl_table', 1)\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 72, in assert_row_count\n    res = session.execute(query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 2, \\'alive_replicas\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G9XTWE\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 2, 'alive_replicas': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G9XTWE\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "putget_with_internode_ssl_without_compression_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 36.55, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/internode_ssl_test.py\", line 24, in putget_with_internode_ssl_without_compression_test\n    self.__putget_with_internode_ssl_test('none')\n  File \"/home/automaton/cassandra-dtest/internode_ssl_test.py\", line 39, in __putget_with_internode_ssl_test\n    putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-62ycts\\ndtest: DEBUG: ***using internode ssl***\\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-62ycts]\\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-62ycts]\\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-62ycts]\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-62ycts\ndtest: DEBUG: ***using internode ssl***\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-62ycts]\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-62ycts]\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-62ycts]\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "putget_with_internode_ssl_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 36.581, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/internode_ssl_test.py\", line 16, in putget_with_internode_ssl_test\n    self.__putget_with_internode_ssl_test('all')\n  File \"/home/automaton/cassandra-dtest/internode_ssl_test.py\", line 39, in __putget_with_internode_ssl_test\n    putget(cluster, session)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 120, in putget\n    _validate_row(cluster, rows)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 145, in _validate_row\n    assert len(res) == 100, len(res)\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-14lEzI\\ndtest: DEBUG: ***using internode ssl***\\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-14lEzI]\\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-14lEzI]\\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-14lEzI]\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-14lEzI\ndtest: DEBUG: ***using internode ssl***\ndtest: DEBUG: generating keystore.jks in [/mnt/tmp/dtest-14lEzI]\ndtest: DEBUG: exporting cert from keystore.jks in [/mnt/tmp/dtest-14lEzI]\ndtest: DEBUG: importing cert into truststore.jks in [/mnt/tmp/dtest-14lEzI]\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_nested_type_dropping", "className": "user_types_test.TestUserTypes", "duration": 25.771, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 142, in test_nested_type_dropping\n    assert_invalid(session, stmt, 'Cannot drop user type nested_user_type_dropping.simple_type as it is still used by user type another_type')\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 30, in assert_invalid\n    assert re.search(matching, msg), \"Error message does not contain \" + matching + \" (error = \" + msg + \")\"\n'Error message does not contain Cannot drop user type nested_user_type_dropping.simple_type as it is still used by user type another_type (error = code=2200 [Invalid query] message=\"Cannot drop user type nested_user_type_dropping.simple_type as it is still used by user type frozen<another_type>\")\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EAJr1m\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Error message does not contain Cannot drop user type nested_user_type_dropping.simple_type as it is still used by user type another_type (error = code=2200 [Invalid query] message=\"Cannot drop user type nested_user_type_dropping.simple_type as it is still used by user type frozen<another_type>\")\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EAJr1m\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "range_slice_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 20.388, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cql_tests.py\", line 399, in range_slice_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Os7__X\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Os7__X\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Os7__X] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f_SWbL\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Os7__X\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Os7__X\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Os7__X] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f_SWbL\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 17.031, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.738, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "keyspace_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 6.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 8.653, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 8.504, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "compression_cql_options_test", "className": "compression_test.TestCompression", "duration": 8.481, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 96, in compression_cql_options_test\n    sstables = self.flush('compression_opts_table')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9TGYMe\\n--------------------- >> end captured logging << ---------------------'", "age": 16, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9TGYMe\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_cf_remove", "className": "thrift_tests.TestMutations", "duration": 7.068, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OSh1Lp\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OSh1Lp\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_super_reinsert", "className": "thrift_tests.TestMutations", "duration": 7.084, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-OSh1Lp\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-OSh1Lp] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aeiUiq\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-OSh1Lp\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-OSh1Lp] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aeiUiq\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_super_cf_resurrect_subcolumn", "className": "thrift_tests.TestMutations", "duration": 6.923, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-aeiUiq\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-aeiUiq] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6s4Flz\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-aeiUiq\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-aeiUiq] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6s4Flz\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_with_standard_under", "className": "thrift_tests.TestMutations", "duration": 6.907, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6s4Flz\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6s4Flz] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eUFdub\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6s4Flz\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6s4Flz] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eUFdub\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_describe_partitioner", "className": "thrift_tests.TestMutations", "duration": 6.901, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eUFdub\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eUFdub] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cMYoZG\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eUFdub\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eUFdub] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cMYoZG\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_range_tombstone_and_static", "className": "thrift_tests.TestCQLAccesses", "duration": 6.693, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ElJ3Wg\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ElJ3Wg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "compact_storage_composite_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.631, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 696, in compact_storage_composite_test\n    verify_compact_storage_composite_table(self.cluster.version(), self.cluster.version(), 'ks', self.session)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 169, in verify_compact_storage_composite_table\n    assert_equal(cqltypes.UTF8Type, meta.primary_key[0].data_type)\n\"'ColumnMetadata' object has no attribute 'data_type'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0kyDWh\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'ColumnMetadata' object has no attribute 'data_type'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0kyDWh\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "compact_storage_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.908, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 692, in compact_storage_test\n    verify_compact_storage_table(self.cluster.version(), self.cluster.version(), 'ks', self.session)\n  File \"/home/automaton/cassandra-dtest/schema_metadata_test.py\", line 141, in verify_compact_storage_table\n    assert_equal(cqltypes.UUIDType, meta.primary_key[0].data_type)\n\"'ColumnMetadata' object has no attribute 'data_type'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jmNVwT\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'ColumnMetadata' object has no attribute 'data_type'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jmNVwT\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "local_quorum_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 445.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "simple_tuple_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 98.325, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 394, in simple_tuple_query_test\n    res = cursor.execute(\"SELECT * FROM bard WHERE b=0 AND (c, d, e) > (1, 1, 1) ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rGZKNa\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 79, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rGZKNa\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.968, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dfiijv\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dfiijv\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.614, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "range_key_ordered_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.778, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3120, in range_key_ordered_test\n    assert_all(cursor, \"SELECT * FROM test\", [[0], [1], [-1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xJLEvQ\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xJLEvQ\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xJLEvQ] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Q7jLqX\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 15, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xJLEvQ\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-xJLEvQ\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-xJLEvQ] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Q7jLqX\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.086, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.914, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1094, in timestamp_and_ttl_test\n    assert len(res) == 2, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sjzJSR\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 79, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sjzJSR\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.875, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 57, in static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K0Fnrl\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K0Fnrl\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.744, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "noncomposite_static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.033, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 145, in noncomposite_static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ewJ19c\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ewJ19c\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 725, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 101.304, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 859, in static_columns_paging_test\n    results = list(cursor.execute(\"SELECT %s FROM test\" % selector))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-d9meJG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-d9meJG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 68.699, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 37.008, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 722, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 58.179, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 221, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YGynWM\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YGynWM\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "bug_5732_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 52.174, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 5186, in bug_5732_test\n    assert_all(cursor, \"SELECT k FROM ks.test WHERE v = 0\", [[0]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-c7Cc6d\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 27, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-c7Cc6d\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 38.846, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.171, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2694, in clustering_indexing_test\n    res = cursor.execute(\"SELECT v1 FROM posts WHERE time = 1\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8dMfZm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8dMfZm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 726, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.517, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4424, in whole_set_conditional_test\n    check_applies(\"s = {'bar', 'foo'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4422, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, set(['bar', 'foo'])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GBq7uX\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GBq7uX\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 716, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.515, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4040, in select_count_paging_test\n    assert_one(cursor, \"select count(*) from test where field3 = false limit 1;\", [2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_XlSFi\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 12, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_XlSFi\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "undefined_column_handling_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.629, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1200, in undefined_column_handling_test\n    res = cursor.execute(\"SELECT v2 FROM test\")\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-H_Z6bM\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-H_Z6bM\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-H_Z6bM] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kAazxr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 76, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-H_Z6bM\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-H_Z6bM\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-H_Z6bM] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kAazxr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "column_name_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.288, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.574, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.175, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2436, in multi_in_test\n    self.__multi_in(False)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2488, in __multi_in\n    assert len(res) == 16, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3WiUI0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3WiUI0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.038, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2488, in __multi_in\n    assert len(res) == 16, res\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GWsfYK\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 76, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GWsfYK\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.253, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3385, in bug_6069_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, {1, 2, 3}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M2YWEq\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-M2YWEq\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 38.143, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 35.201, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 30.665, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 718, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eDDEFD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\n--------------------- >> end captured logging << ---------------------'", "age": 43, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eDDEFD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "replace_first_boot_test", "className": "replace_address_test.TestReplaceAddress", "duration": 139.659, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/replace_address_test.py\", line 203, in replace_first_boot_test\n    self.assertListEqual(initialData, finalData)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 742, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 641, in assertSequenceEqual\n    % (seq_type_name, safe_repr(seq1)))\n'First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fa43d584110>\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1a54On\\ndtest: DEBUG: Starting cluster with 3 nodes.\\ndtest: DEBUG: 32\\ndtest: DEBUG: Inserting Data...\\ndtest: DEBUG: Stopping node 3.\\ndtest: DEBUG: Testing node stoppage (query should fail).\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\ndtest: DEBUG: Starting node 4 to replace node 3\\ndtest: DEBUG: Verifying querying works again.\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "First sequence is not a list: <cassandra.cluster.ResultSet object at 0x7fa43d584110>\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1a54On\ndtest: DEBUG: Starting cluster with 3 nodes.\ndtest: DEBUG: 32\ndtest: DEBUG: Inserting Data...\ndtest: DEBUG: Stopping node 3.\ndtest: DEBUG: Testing node stoppage (query should fail).\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\ndtest: DEBUG: Starting node 4 to replace node 3\ndtest: DEBUG: Verifying querying works again.\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "simple_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 59.004, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 46, in simple_parallel_repair_test\n    self._simple_repair(sequential=False)\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 110, in _simple_repair\n    self.check_rows_on_node(node3, 2000, missings=[1000])\n  File \"/home/automaton/cassandra-dtest/repair_test.py\", line 27, in check_rows_on_node\n    result = session.execute(\"SELECT * FROM cf LIMIT %d\" % (rows * 2))\n  File \"cassandra/cluster.py\", line 1556, in cassandra.cluster.Session.execute (cassandra/cluster.c:26730)\n    return self.execute_async(query, parameters, trace, custom_payload, timeout).result()\n  File \"cassandra/cluster.py\", line 3103, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:59731)\n    raise self._final_exception\n'code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={\\'required_replicas\\': 2, \\'alive_replicas\\': 1, \\'consistency\\': \\'LOCAL_QUORUM\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-27sUp7\\ndtest: DEBUG: Starting cluster..\\ndtest: DEBUG: Inserting data...\\ndtest: DEBUG: Checking data on node3...\\ndtest: DEBUG: Retrying request after UE. Attempt #0\\ndtest: DEBUG: Retrying request after UE. Attempt #1\\ndtest: DEBUG: Retrying request after UE. Attempt #2\\ndtest: DEBUG: Retrying request after UE. Attempt #3\\ndtest: DEBUG: Retrying request after UE. Attempt #4\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1000 [Unavailable exception] message=\"Cannot achieve consistency level LOCAL_QUORUM\" info={'required_replicas': 2, 'alive_replicas': 1, 'consistency': 'LOCAL_QUORUM'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-27sUp7\ndtest: DEBUG: Starting cluster..\ndtest: DEBUG: Inserting data...\ndtest: DEBUG: Checking data on node3...\ndtest: DEBUG: Retrying request after UE. Attempt #0\ndtest: DEBUG: Retrying request after UE. Attempt #1\ndtest: DEBUG: Retrying request after UE. Attempt #2\ndtest: DEBUG: Retrying request after UE. Attempt #3\ndtest: DEBUG: Retrying request after UE. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "repair_table_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 92.764, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "readrepair_test", "className": "consistency_test.TestConsistency", "duration": 34.941, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/consistency_test.py\", line 740, in readrepair_test\n    query_c1c2(session, n, ConsistencyLevel.QUORUM)\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 48, in query_c1c2\n    assert len(rows) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uQLKz1\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uQLKz1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_counters", "className": "consistency_test.TestAccuracy", "duration": 44.201, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dont_test_archive_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 82.936, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test_not_intersecting_all_ranges", "className": "incremental_repair_test.TestIncRepair", "duration": 72.724, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter", "className": "write_failures_test.TestWriteFailures", "duration": 59.723, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_manual_rebuild_index", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 32.244, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 289, in test_manual_rebuild_index\n    while not index_is_built():\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 287, in index_is_built\n    WHERE table_name ='keyspace1' AND index_name='ix_c0'\"\"\")) == 1\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8pFGNI\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8pFGNI\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_multi_index_filtering_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 7.255, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/secondary_indexes_test.py\", line 332, in test_multi_index_filtering_query\n    self.assertEqual(4, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LjhNhi\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LjhNhi\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wide_rows", "className": "wide_rows_test.TestWideRows", "duration": 32.882, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_type_enforcement", "className": "user_types_test.TestUserTypes", "duration": 26.902, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 206, in test_type_enforcement\n    self.assertEqual(0, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7Gdi8Z\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7Gdi8Z\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_decommission_after_drain_is_invalid", "className": "nodetool_test.TestNodetool", "duration": 26.333, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 724, "skippedMessage": null, "name": "sstablelevelreset_test", "className": "offline_tools_test.TestOfflineTools", "duration": 24.878, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/offline_tools_test.py\", line 42, in sstablelevelreset_test\n    self.assertEqual(len(error), 0, error)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'WARN  19:22:02 Only 37583 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Lhi_uY\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "WARN  19:22:02 Only 37583 MB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Lhi_uY\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_with_empty_non_static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 26.047, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.593, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "alter_cf_auth_test", "className": "auth_test.TestAuth", "duration": 18.005, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "list_users_test", "className": "auth_test.TestAuth", "duration": 16.965, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/auth_test.py\", line 100, in list_users_test\n    self.assertEqual(5, len(rows))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YJ7kKI\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YJ7kKI\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_auth_test", "className": "auth_test.TestAuth", "duration": 17.264, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_column_ttl_with_default_ttl_test2", "className": "ttl_test.TestTTL", "duration": 14.92, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_multiple_columns_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.011, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_update_test", "className": "json_test.FromJsonUpdateTests", "duration": 9.809, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_scrub_collections_table", "className": "scrub_test.TestScrubIndexes", "duration": 7.382, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 277, in test_scrub_collections_table\n    self.assertEqual(num_users, len(initial_users))\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b2yGKw\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b2yGKw\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub_essential_files_only", "className": "scrub_test.TestScrub", "duration": 7.038, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 403, in test_standalone_scrub_essential_files_only\n    initial_users = self.query_users(session)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 323, in query_users\n    assert len(ret) == 5\n\"object of type 'ResultSet' has no len()\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dXUOKR\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "object of type 'ResultSet' has no len()\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dXUOKR\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_index", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.674, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_alter_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 6.815, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1659, in test_alter_table\n    self.assertIn(old_column_spec, get_ks_columns())\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1655, in get_ks_columns\n    return [[table.name, column.name, column.data_type.cassname] for column in table.columns.values()]\n\"'ColumnMetadata' object has no attribute 'data_type'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_KAejg\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'ColumnMetadata' object has no attribute 'data_type'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_KAejg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_tracing", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.814, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_multiget_slice", "className": "thrift_tests.TestMutations", "duration": 6.828, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-I6tN1g\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-I6tN1g\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_get_slice_by_names", "className": "thrift_tests.TestMutations", "duration": 6.821, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-I6tN1g\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-I6tN1g] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L54pYM\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-I6tN1g\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-I6tN1g] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L54pYM\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_range_with_remove", "className": "thrift_tests.TestMutations", "duration": 6.897, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-L54pYM\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-L54pYM] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3QauvD\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-L54pYM\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-L54pYM] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3QauvD\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_multi_slice", "className": "thrift_tests.TestMutations", "duration": 7.067, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3QauvD\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3QauvD] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kvTqFN\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3QauvD\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3QauvD] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kvTqFN\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 727, "skippedMessage": null, "name": "test_describe_ring_on_invalid_keyspace", "className": "thrift_tests.TestMutations", "duration": 7.097, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 320, in run\n    self.setUp()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 75, in setUp\n    self.define_schema()\n  File \"/home/automaton/cassandra-dtest/thrift_tests.py\", line 117, in define_schema\n    self.client.system_add_keyspace(ks)\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1830, in system_add_keyspace\n    return self.recv_system_add_keyspace()\n  File \"/home/automaton/cassandra-dtest/thrift_bindings/v22/Cassandra.py\", line 1841, in recv_system_add_keyspace\n    (fname, mtype, rseqid) = self._iprot.readMessageBegin()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 126, in readMessageBegin\n    sz = self.readI32()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/protocol/TBinaryProtocol.py\", line 206, in readI32\n    buff = self.trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 276, in read\n    self.readFrame()\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 280, in readFrame\n    buff = self.__trans.readAll(4)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TTransport.py\", line 58, in readAll\n    chunk = self.read(sz - have)\n  File \"/usr/local/lib/python2.7/dist-packages/thrift/transport/TSocket.py\", line 120, in read\n    message='TSocket read 0 bytes')\n'TSocket read 0 bytes\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-kvTqFN\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-kvTqFN] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k6cK5B\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "TSocket read 0 bytes\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-kvTqFN\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-kvTqFN] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k6cK5B\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_gcgs_below_threshold_multi_table_test", "className": "batch_test.TestBatch", "duration": 7.868, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "only_one_timestamp_is_valid_test", "className": "batch_test.TestBatch", "duration": 7.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 7.499, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_queries_test", "className": "schema_test.TestSchema", "duration": 7.761, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "validate_empty_column_name_test", "className": "counter_tests.TestCounters", "duration": 6.869, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cfhistograms_test", "className": "jmx_test.TestJMX", "duration": 2966.712, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}], "stdout": null, "id": null, "name": "nosetests", "stderr": null}]}}
