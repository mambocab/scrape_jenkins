{"baseurl": "http://cassci.datastax.com/job/trunk_dtest/716/testReport/api/python", "_data": {"failCount": 193, "passCount": 763, "skipCount": 209, "testActions": [], "empty": false, "duration": 49357.715, "suites": [{"duration": 49357.715, "timestamp": null, "cases": [{"testActions": [], "status": "FAILED", "failedSince": 714, "skippedMessage": null, "name": "limit_ranges_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 107.489, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 337, in limit_ranges_test\n    res = cursor.execute(\"SELECT * FROM clicks WHERE token(userid) >= token(2) LIMIT 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cZx8rK\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cZx8rK\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cZx8rK] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Uj3d_L\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cZx8rK\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-cZx8rK\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-cZx8rK] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Uj3d_L\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "edge_2i_on_complex_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 100.115, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2744, in edge_2i_on_complex_pk_test\n    res = cursor.execute(\"SELECT value FROM indexed WHERE pk0 = 2\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wOfzJd\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 66, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wOfzJd\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.974, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.995, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.149, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4896, in bug_6612_test\n    assert_one(cursor, \"select count(*) from session_data where app_name='foo' and account='bar' and last_access > 4 allow filtering\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oKqjOG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oKqjOG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.681, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_in_compact_non_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.917, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.677, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.088, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2304, in multi_list_set_test\n    cursor.execute(\"UPDATE test SET l2[1] = 42, l1[1] = 24  WHERE k = 0\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'<ErrorMessage code=0000 [Server error] message=\"java.lang.NullPointerException\">\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6tgqBr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "<ErrorMessage code=0000 [Server error] message=\"java.lang.NullPointerException\">\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6tgqBr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.47, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 358, in run\n    self.tearDown()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/upgrade_base.py\", line 267, in tearDown\n    super(UpgradeTester, self).tearDown()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 550, in tearDown\n    raise AssertionError('Unexpected error in %s node log: %s' % (node.name, errors))\n\"Unexpected error in node1 node log: ['ERROR [SharedPool-Worker-2] 2015-10-30 09:50:15,442 QueryMessage.java:128 - Unexpected error during query\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyBoundComparator.compare(LegacyLayout.java:1697) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.insertFrom(LegacyLayout.java:1962) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.addAll(LegacyLayout.java:1836) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:659) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:637) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.utils.AbstractIterator.hasNext(AbstractIterator.java:47) ~[main/:na]\\\\n\\\\tat com.google.common.collect.Iterators.addAll(Iterators.java:361) ~[guava-18.0.jar:na]\\\\n\\\\tat com.google.common.collect.Lists.newArrayList(Lists.java:160) ~[guava-18.0.jar:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout.fromUnfilteredRowIterator(LegacyLayout.java:331) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.rows.UnfilteredRowIterators.digest(UnfilteredRowIterators.java:113) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.digest(UnfilteredPartitionIterators.java:253) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.ReadResponse.makeDigest(ReadResponse.java:87) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.ReadResponse$LegacyRemoteDataResponse.digest(ReadResponse.java:303) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.DigestResolver.resolve(DigestResolver.java:80) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.ReadCallback.get(ReadCallback.java:139) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.AbstractReadExecutor.get(AbstractReadExecutor.java:147) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy$SinglePartitionReadLifecycle.awaitResultsAndRetryOnDigestMismatch(StorageProxy.java:1612) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.fetchRows(StorageProxy.java:1561) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.readRegular(StorageProxy.java:1502) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.read(StorageProxy.java:1421) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.SinglePartitionReadCommand$Group.execute(SinglePartitionReadCommand.java:477) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists(ModificationStatement.java:370) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:712) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:696) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates(ModificationStatement.java:652) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.getMutations(ModificationStatement.java:608) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.executeWithoutCondition(ModificationStatement.java:414) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.execute(ModificationStatement.java:402) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:205) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:236) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:221) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:115) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [main/:na]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [main/:na]\\\\n\\\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [main/:na]\\\\n\\\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [main/:na]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\\\nERROR [SharedPool-Worker-2] 2015-10-30 09:50:15,444 ErrorMessage.java:336 - Unexpected exception during request\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyBoundComparator.compare(LegacyLayout.java:1697) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.insertFrom(LegacyLayout.java:1962) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.addAll(LegacyLayout.java:1836) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:659) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:637) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.utils.AbstractIterator.hasNext(AbstractIterator.java:47) ~[main/:na]\\\\n\\\\tat com.google.common.collect.Iterators.addAll(Iterators.java:361) ~[guava-18.0.jar:na]\\\\n\\\\tat com.google.common.collect.Lists.newArrayList(Lists.java:160) ~[guava-18.0.jar:na]\\\\n\\\\tat org.apache.cassandra.db.LegacyLayout.fromUnfilteredRowIterator(LegacyLayout.java:331) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.rows.UnfilteredRowIterators.digest(UnfilteredRowIterators.java:113) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.digest(UnfilteredPartitionIterators.java:253) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.ReadResponse.makeDigest(ReadResponse.java:87) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.ReadResponse$LegacyRemoteDataResponse.digest(ReadResponse.java:303) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.DigestResolver.resolve(DigestResolver.java:80) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.ReadCallback.get(ReadCallback.java:139) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.AbstractReadExecutor.get(AbstractReadExecutor.java:147) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy$SinglePartitionReadLifecycle.awaitResultsAndRetryOnDigestMismatch(StorageProxy.java:1612) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.fetchRows(StorageProxy.java:1561) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.readRegular(StorageProxy.java:1502) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.service.StorageProxy.read(StorageProxy.java:1421) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.db.SinglePartitionReadCommand$Group.execute(SinglePartitionReadCommand.java:477) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists(ModificationStatement.java:370) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:712) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:696) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates(ModificationStatement.java:652) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.getMutations(ModificationStatement.java:608) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.executeWithoutCondition(ModificationStatement.java:414) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.statements.ModificationStatement.execute(ModificationStatement.java:402) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:205) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:236) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:221) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:115) ~[main/:na]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [main/:na]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [main/:na]\\\\n\\\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [main/:na]\\\\n\\\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [main/:na]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6tgqBr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6tgqBr\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6tgqBr] directory\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Unexpected error in node1 node log: ['ERROR [SharedPool-Worker-2] 2015-10-30 09:50:15,442 QueryMessage.java:128 - Unexpected error during query\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyBoundComparator.compare(LegacyLayout.java:1697) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.insertFrom(LegacyLayout.java:1962) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.addAll(LegacyLayout.java:1836) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:659) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:637) ~[main/:na]\\n\\tat org.apache.cassandra.utils.AbstractIterator.hasNext(AbstractIterator.java:47) ~[main/:na]\\n\\tat com.google.common.collect.Iterators.addAll(Iterators.java:361) ~[guava-18.0.jar:na]\\n\\tat com.google.common.collect.Lists.newArrayList(Lists.java:160) ~[guava-18.0.jar:na]\\n\\tat org.apache.cassandra.db.LegacyLayout.fromUnfilteredRowIterator(LegacyLayout.java:331) ~[main/:na]\\n\\tat org.apache.cassandra.db.rows.UnfilteredRowIterators.digest(UnfilteredRowIterators.java:113) ~[main/:na]\\n\\tat org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.digest(UnfilteredPartitionIterators.java:253) ~[main/:na]\\n\\tat org.apache.cassandra.db.ReadResponse.makeDigest(ReadResponse.java:87) ~[main/:na]\\n\\tat org.apache.cassandra.db.ReadResponse$LegacyRemoteDataResponse.digest(ReadResponse.java:303) ~[main/:na]\\n\\tat org.apache.cassandra.service.DigestResolver.resolve(DigestResolver.java:80) ~[main/:na]\\n\\tat org.apache.cassandra.service.ReadCallback.get(ReadCallback.java:139) ~[main/:na]\\n\\tat org.apache.cassandra.service.AbstractReadExecutor.get(AbstractReadExecutor.java:147) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy$SinglePartitionReadLifecycle.awaitResultsAndRetryOnDigestMismatch(StorageProxy.java:1612) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.fetchRows(StorageProxy.java:1561) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.readRegular(StorageProxy.java:1502) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.read(StorageProxy.java:1421) ~[main/:na]\\n\\tat org.apache.cassandra.db.SinglePartitionReadCommand$Group.execute(SinglePartitionReadCommand.java:477) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists(ModificationStatement.java:370) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:712) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:696) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates(ModificationStatement.java:652) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.getMutations(ModificationStatement.java:608) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.executeWithoutCondition(ModificationStatement.java:414) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.execute(ModificationStatement.java:402) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:205) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:236) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:221) ~[main/:na]\\n\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:115) ~[main/:na]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [main/:na]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [main/:na]\\n\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\n\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [main/:na]\\n\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [main/:na]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\nERROR [SharedPool-Worker-2] 2015-10-30 09:50:15,444 ErrorMessage.java:336 - Unexpected exception during request\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyBoundComparator.compare(LegacyLayout.java:1697) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.insertFrom(LegacyLayout.java:1962) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList.addAll(LegacyLayout.java:1836) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:659) ~[main/:na]\\n\\tat org.apache.cassandra.db.LegacyLayout$3.computeNext(LegacyLayout.java:637) ~[main/:na]\\n\\tat org.apache.cassandra.utils.AbstractIterator.hasNext(AbstractIterator.java:47) ~[main/:na]\\n\\tat com.google.common.collect.Iterators.addAll(Iterators.java:361) ~[guava-18.0.jar:na]\\n\\tat com.google.common.collect.Lists.newArrayList(Lists.java:160) ~[guava-18.0.jar:na]\\n\\tat org.apache.cassandra.db.LegacyLayout.fromUnfilteredRowIterator(LegacyLayout.java:331) ~[main/:na]\\n\\tat org.apache.cassandra.db.rows.UnfilteredRowIterators.digest(UnfilteredRowIterators.java:113) ~[main/:na]\\n\\tat org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.digest(UnfilteredPartitionIterators.java:253) ~[main/:na]\\n\\tat org.apache.cassandra.db.ReadResponse.makeDigest(ReadResponse.java:87) ~[main/:na]\\n\\tat org.apache.cassandra.db.ReadResponse$LegacyRemoteDataResponse.digest(ReadResponse.java:303) ~[main/:na]\\n\\tat org.apache.cassandra.service.DigestResolver.resolve(DigestResolver.java:80) ~[main/:na]\\n\\tat org.apache.cassandra.service.ReadCallback.get(ReadCallback.java:139) ~[main/:na]\\n\\tat org.apache.cassandra.service.AbstractReadExecutor.get(AbstractReadExecutor.java:147) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy$SinglePartitionReadLifecycle.awaitResultsAndRetryOnDigestMismatch(StorageProxy.java:1612) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.fetchRows(StorageProxy.java:1561) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.readRegular(StorageProxy.java:1502) ~[main/:na]\\n\\tat org.apache.cassandra.service.StorageProxy.read(StorageProxy.java:1421) ~[main/:na]\\n\\tat org.apache.cassandra.db.SinglePartitionReadCommand$Group.execute(SinglePartitionReadCommand.java:477) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists(ModificationStatement.java:370) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:712) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.makeUpdateParameters(ModificationStatement.java:696) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates(ModificationStatement.java:652) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.getMutations(ModificationStatement.java:608) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.executeWithoutCondition(ModificationStatement.java:414) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.statements.ModificationStatement.execute(ModificationStatement.java:402) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:205) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:236) ~[main/:na]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:221) ~[main/:na]\\n\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:115) ~[main/:na]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [main/:na]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [main/:na]\\n\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\n\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [main/:na]\\n\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [main/:na]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6tgqBr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6tgqBr\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6tgqBr] directory\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.06, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 87.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 75.84, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "bug_5732_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 54.674, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 5186, in bug_5732_test\n    assert_all(cursor, \"SELECT k FROM ks.test WHERE v = 0\", [[0]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ySfEHZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 16, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ySfEHZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.522, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4574, in map_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sTK6lv\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sTK6lv\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.999, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 449, in counters_test\n    assert rows_to_list(res) == [[-3]], res\n\"[Row(total=1)]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dSD72G\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "[Row(total=1)]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dSD72G\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.291, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "nameless_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 41.264, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 922, in nameless_index_test\n    res = cursor.execute(\"SELECT id FROM users WHERE birth_year = 42\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S_V5DL\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-S_V5DL\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "row_existence_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 39.234, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1613, in row_existence_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EcJ7ZS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EcJ7ZS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.409, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.348, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "undefined_column_handling_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.367, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1200, in undefined_column_handling_test\n    res = cursor.execute(\"SELECT v2 FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QNfCrL\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QNfCrL\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QNfCrL] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-TgO8T3\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QNfCrL\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-QNfCrL\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-QNfCrL] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-TgO8T3\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_v2_protocol_IN_with_tuples", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.06, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_map_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_list_key_single_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7396", "name": "select_set_key_multi_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 29.574, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bootstrap_with_reset_bootstrap_state_test", "className": "bootstrap_test.TestBootstrap", "duration": 234.953, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "decommissioned_wiped_node_can_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 186.229, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "killed_wiped_node_cannot_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 97.597, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_tables_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 100.995, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_active_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 93.607, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "test hangs: see CASSANDRA-9831", "name": "resumable_replace_test", "className": "replace_address_test.TestReplaceAddress", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dont_test_archive_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 78.756, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 71.559, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 62.735, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_mv_select_statements_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 62.749, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "immutable_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 24.881, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_across_multi_wide_rows", "className": "paging_test.TestPagingData", "duration": 49.933, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 43.163, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_no_results", "className": "paging_test.TestPagingSize", "duration": 23.809, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 6237", "name": "test_multiple_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_order_preserving", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 42.793, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_murmur3", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 40.601, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_writing_use_header", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.225, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "tracing_from_system_traces_test", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.293, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 467, in tracing_from_system_traces_test\n    self.assertIn('Tracing session: ', out)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 803, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 410, in fail\n    raise self.failureException(msg)\n\"'Tracing session: ' not found in 'Now Tracing is enabled\\\\n\\\\n'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IMziag\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'Tracing session: ' not found in 'Now Tracing is enabled\\n\\n'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IMziag\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_client_warnings", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.428, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_index_file_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 36.748, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nested_user_types", "className": "user_types_test.TestUserTypes", "duration": 33.339, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_user_type_isolation", "className": "user_types_test.TestUserTypes", "duration": 6.85, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7423", "name": "udt_subfield_test", "className": "user_types_test.TestUserTypes", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_local_read_test", "className": "putget_test.TestPutGet", "duration": 30.337, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "wide_slice_test", "className": "putget_test.TestPutGet", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_super_remove", "className": "thrift_tests.TestMutations", "duration": 27.048, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_standard_remove", "className": "thrift_tests.TestMutations", "duration": 27.268, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_expiration", "className": "thrift_tests.TestMutations", "duration": 10.189, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_super_range", "className": "thrift_tests.TestMutations", "duration": 7.353, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_validators", "className": "thrift_tests.TestMutations", "duration": 7.719, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_subcolumn_limit", "className": "thrift_tests.TestMutations", "duration": 7.283, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_with_remove", "className": "thrift_tests.TestMutations", "duration": 7.176, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_deletion", "className": "thrift_tests.TestMutations", "duration": 7.152, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.2", "name": "test_batch_mutate_remove_slice_part_of_supercolumns", "className": "thrift_tests.TestMutations", "duration": 7.107, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_standard_columns_blocking", "className": "thrift_tests.TestMutations", "duration": 7.442, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get", "className": "thrift_tests.TestCompactStorageThriftAccesses", "duration": 7.643, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_cleanup_test", "className": "auth_test.TestAuth", "duration": 19.394, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "alter_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.915, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "altering_nonexistent_user_throws_exception_test", "className": "auth_test.TestAuth", "duration": 17.723, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "password_authenticator_create_user_requires_password_test", "className": "auth_test.TestAuth", "duration": 0.06, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "cleanup_test", "className": "largecolumn_test.TestLargeColumn", "duration": 18.353, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 40, in cleanup_test\n    debug(\"Before stress {0}\".format(self.directbytes(node1)))\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 20, in directbytes\n    assert output[0].strip().startswith(\"Interval\"), \"Expected output from nodetool gcstats starts with a header line with first column Interval\"\n'Expected output from nodetool gcstats starts with a header line with first column Interval\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f89aTa\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "Expected output from nodetool gcstats starts with a header line with first column Interval\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-f89aTa\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commitlog_replay_on_startup", "className": "commitlog_test.TestCommitLog", "duration": 12.965, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_scrub_collections_table", "className": "scrub_test.TestScrubIndexes", "duration": 8.567, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 279, in test_scrub_collections_table\n    initial_sstables = self.flush('users', 'user_uuids_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L5BK8m\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L5BK8m\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "only_one_timestamp_is_valid_test", "className": "batch_test.TestBatch", "duration": 7.25, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compact_storage_composite_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.605, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug7105_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.06, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "unescaped_string_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_index_with_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_key_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_with_deletes_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 706, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6327_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 11, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "rename_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test3", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test7", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test6", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test8", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test9", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test4", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test2", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7281", "name": "tuple_query_mixed_order_columns_test5", "className": "deprecated_cql_tests.TestCQL", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 695, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_index_creation_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.059, "errorStackTrace": null, "age": 22, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_expand_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.059, "errorStackTrace": null, "age": 116, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "network_topology_test", "className": "replication_test.ReplicationTest", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_read_old_sstables_after_upgrade", "className": "secondary_indexes_test.TestUpgradeSecondaryIndexes", "duration": 0.059, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0", "name": "metadata_reset_while_compact_test", "className": "metadata_tests.TestMetadata", "duration": 0.059, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommissioned_node_cant_rejoin_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "movement_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "decommission_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "topology_test.TestTopology", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "local_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "materialized_view_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "remote_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 7392", "name": "index_query_test", "className": "cql_tests.AbortedQueriesTester", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 9961", "name": "schema_changes_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "move_single_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require Fixes to ccm around upgrades", "name": "test_upgrade_index_summary", "className": "index_summary_upgrade_test.TestUpgradeIndexSummary", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "require 9704", "name": "upgrade_to_30_test", "className": "upgrade_internal_auth_test.TestAuthUpgrade", "duration": 0.001, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "consistent_reads_after_move_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "multiple_subsequent_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "simple_repair_order_preserving_test", "className": "repair_test.TestRepair", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "hangs CI", "name": "initial_empty_repair_tables_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "cluster_availability_test", "className": "paxos_tests.TestPaxos", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "Test disabled for vnodes", "name": "hintedhandoff_decom_test", "className": "hintedhandoff_test.TestHintedHandoff", "duration": 0.0, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 104.551, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_4mvbE\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 69, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_4mvbE\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_5732_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 65.593, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6327_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 48.347, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_range_ghost_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.399, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1154, in no_range_ghost_test\n    unsorted_res = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mwuhi7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Mwuhi7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "expanded_list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.748, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.178, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 484, in indexed_with_eq_test\n    res = cursor.execute(\"SELECT firstname FROM users WHERE userid = 550e8400-e29b-41d4-a716-446655440000 AND age = 33\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e9CeFm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 16, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e9CeFm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "boolean_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.612, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "blobAs_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.689, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_order_and_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.27, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2936, in clustering_order_and_functions_test\n    cursor.execute(\"SELECT dateOf(t) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PtODqa\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PtODqa\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_with_2i_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.853, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.636, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.586, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1093, in timestamp_and_ttl_test\n    res = cursor.execute(\"SELECT k, c, writetime(c), ttl(c) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QBjskp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 68, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QBjskp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "basic_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 96.273, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 668, in basic_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-etSqZ1\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-etSqZ1\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 80.033, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 342, in test_undefined_page_size_default\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DSBdmj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DSBdmj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 59.305, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 309, in test_with_equal_results_to_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NqE56U\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-NqE56U\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 63.195, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 218, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-By5C8s\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-By5C8s\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "collection_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 41.614, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3625, in collection_indexing_test\n    assert_all(cursor, \"SELECT k, v FROM test WHERE l CONTAINS 1\", [[1, 0], [0, 0], [0, 2]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fPpAEz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fPpAEz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "large_clustering_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 39.928, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.63, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yjEONq\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-yjEONq\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-yjEONq] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l2GYCe\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yjEONq\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-yjEONq\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-yjEONq] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-l2GYCe\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.65, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.717, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "exclusive_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.684, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "token_range_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 39.761, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1061, in token_range_test\n    rows = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-J0Srxz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-J0Srxz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_function_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.469, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 31.103, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_with_reset_resume_state_test", "className": "replace_address_test.TestReplaceAddress", "duration": 243.598, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "local_dc_repair_test", "className": "repair_test.TestRepair", "duration": 197.065, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multiple_repair_test", "className": "incremental_repair_test.TestIncRepair", "duration": 136.61, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_repairedset_test", "className": "incremental_repair_test.TestIncRepair", "duration": 90.196, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test_not_intersecting_all_ranges", "className": "incremental_repair_test.TestIncRepair", "duration": 76.787, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_test", "className": "incremental_repair_test.TestIncRepair", "duration": 52.243, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 79.66, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 70.655, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_2dc_rf2_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 43.081, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_insert_search_test", "className": "delete_insert_test.DeleteInsertTest", "duration": 43.125, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 33.28, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 29.89, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "paging_test.TestPagingWithModifiers", "duration": 25.053, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_with_in_orderby_and_two_partition_keys", "className": "paging_test.TestPagingData", "duration": 25.144, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "removing_default_ttl_does_not_affect_existing_rows_test", "className": "ttl_test.TestTTL", "duration": 26.812, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nulls_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 27.904, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_1_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.518, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "nodetool_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.626, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 80, in nodetool_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RZ9OIl\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RZ9OIl\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "regular_users_can_alter_their_passwords_only_test", "className": "auth_test.TestAuth", "duration": 17.759, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "fixed_ratio_test", "className": "stress_tool_test.TestStressSparsenessRatio", "duration": 15.664, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableexpiredblockers_test", "className": "offline_tools_test.TestOfflineTools", "duration": 12.597, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compaction_test", "className": "schema_test.TestSchema", "duration": 9.467, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.671, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_writing_dont_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.218, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_read", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.348, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_use_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.14, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.44, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.462, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_past_and_future_dates", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.16, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 113, in test_past_and_future_dates\n    self.assertIn(\"2143-04-19 11:21:01+0000\", output)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 803, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 410, in fail\n    raise self.failureException(msg)\n\"'2143-04-19 11:21:01+0000' not found in '\\\\n'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1umH2T\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'2143-04-19 11:21:01+0000' not found in '\\n'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1umH2T\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_gcgs_below_threshold_multi_table_test", "className": "batch_test.TestBatch", "duration": 7.519, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_super_column_family_operations", "className": "thrift_tests.TestMutations", "duration": 7.455, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_calls", "className": "thrift_tests.TestMutations", "duration": 7.132, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice", "className": "thrift_tests.TestMutations", "duration": 7.243, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_user_types_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.021, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_table_datatype_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.866, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_cql_disabled_with_alter_test", "className": "compression_test.TestCompression", "duration": 6.782, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "noncomposite_static_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.062, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 125, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableverify_test", "className": "offline_tools_test.TestOfflineTools", "duration": 475.342, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "single_file_split_test", "className": "sstablesplit_test.TestSSTableSplit", "duration": 478.721, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "-- ma-41-big-Data.db-----\n-- ma-16-big-Data.db-----\n-- ma-28-big-Data.db-----\n-- ma-15-big-Data.db-----\n-- ma-27-big-Data.db-----\n-- ma-62-big-Data.db-----\n-- ma-32-big-Data.db-----\n-- ma-50-big-Data.db-----\n-- ma-34-big-Data.db-----\n-- ma-13-big-Data.db-----\n-- ma-44-big-Data.db-----\n-- ma-37-big-Data.db-----\n-- ma-30-big-Data.db-----\n-- ma-56-big-Data.db-----\n-- ma-17-big-Data.db-----\n-- ma-52-big-Data.db-----\n-- ma-24-big-Data.db-----\n-- ma-35-big-Data.db-----\n-- ma-49-big-Data.db-----\n-- ma-\n...[truncated 66 chars]...\n-----\n-- ma-29-big-Data.db-----\n-- ma-19-big-Data.db-----\n-- ma-21-big-Data.db-----\n-- ma-18-big-Data.db-----\n-- ma-46-big-Data.db-----\n-- ma-43-big-Data.db-----\n-- ma-55-big-Data.db-----\n-- ma-20-big-Data.db-----\n-- ma-23-big-Data.db-----\n-- ma-59-big-Data.db-----\n-- ma-53-big-Data.db-----\n-- ma-14-big-Data.db-----\n-- ma-33-big-Data.db-----\n-- ma-38-big-Data.db-----\n-- ma-31-big-Data.db-----\n-- ma-47-big-Data.db-----\n-- ma-25-big-Data.db-----\n-- ma-12-big-Data.db-----\n-- ma-22-big-Data.db-----\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 160.16, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "query_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 27.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "abortedcompaction_test", "className": "sstableutil_test.SSTableUtilTest", "duration": 147.199, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_test", "className": "counter_tests.TestCounters", "duration": 110.309, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_counter_column_test", "className": "counter_tests.TestCounters", "duration": 6.881, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "validate_empty_column_name_test", "className": "counter_tests.TestCounters", "duration": 6.422, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_index_stress", "className": "wide_rows_test.TestWideRows", "duration": 92.116, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 735.852, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "edge_2i_on_complex_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.011, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2744, in edge_2i_on_complex_pk_test\n    res = cursor.execute(\"SELECT value FROM indexed WHERE pk0 = 2\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FEoIS0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FEoIS0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "limit_bugs_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.161, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1831, in limit_bugs_test\n    res = cursor.execute(\"SELECT * FROM testcf;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EbF0nu\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-EbF0nu\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-EbF0nu] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fVmtn7\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EbF0nu\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-EbF0nu\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-EbF0nu] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fVmtn7\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.837, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iTysT5\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iTysT5\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.788, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3385, in bug_6069_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, {1, 2, 3}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZZWuts\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZZWuts\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "blobAs_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.859, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "simple_tuple_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.867, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 394, in simple_tuple_query_test\n    res = cursor.execute(\"SELECT * FROM bard WHERE b=0 AND (c, d, e) > (1, 1, 1) ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vSJp0m\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 68, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vSJp0m\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "map_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.239, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1406, in map_test\n    res = cursor.execute(\"SELECT m FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gAQ6oB\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-gAQ6oB\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 63.046, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 815, in test_paging_using_secondary_indexes\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OO7BDF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OO7BDF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 29.978, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 715, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0scren\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\n--------------------- >> end captured logging << ---------------------'", "age": 32, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0scren\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 714, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 58.849, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 592, in test_with_allow_filtering\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rMsJmU\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rMsJmU\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_flush_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 46.648, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.989, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uFcB5s\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-uFcB5s\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "static_columns_with_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.355, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3957, in static_columns_with_distinct_test\n    assert_all(cursor, \"SELECT k, s FROM test\", [[1, None], [1, None]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 54, in assert_all\n    assert list_res == expected, \"Expected %s from %s, but got %s\" % (expected, query, list_res)\n\"Expected [[1, None], [1, None]] from SELECT k, s FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RtwFMs\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 66, "errorDetails": "Expected [[1, None], [1, None]] from SELECT k, s FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RtwFMs\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.186, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Sd8QWY\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Sd8QWY\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.001, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.069, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 29.975, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 82.145, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.151, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_refresh_schema_on_timeout_error", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 77.567, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_insert", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.19, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_byte_ordered", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 42.915, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_round_trip_random", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 39.955, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_slice_query_with_tombstones_test", "className": "read_repair_test.TestRepairDataSystemTable", "duration": 67.108, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_quorum_delete_test", "className": "consistency_test.TestConsistency", "duration": 53.918, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_delete_test", "className": "consistency_test.TestConsistency", "duration": 30.478, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 48.553, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 23.908, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 33.488, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_with_internode_ssl_without_compression_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 38.139, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_snappy_test", "className": "putget_test.TestPutGet", "duration": 34.792, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_throws_uae_test", "className": "batch_test.TestBatch", "duration": 33.318, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_secondary_indexing", "className": "user_types_test.TestUserTypes", "duration": 29.254, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udt_test", "className": "udtencoding_test.TestUDTEncoding", "duration": 25.746, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "paging_test.TestPagingSize", "duration": 24.346, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "connect_to_ssl_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 22.97, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "use_custom_ssl_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 16.203, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_enabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.454, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 118, in hintedhandoff_enabled_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Y4Wb4F\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Y4Wb4F\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "users_cant_alter_their_superuser_status_test", "className": "auth_test.TestAuth", "duration": 16.766, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 12.104, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 1050, in complex_data_types_test\n    run_func_docstring(tester=self, test_func=self.complex_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 70, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mylist from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[6]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mylist from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 80, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, myset from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, myset from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 90, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mymap from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mymap from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 100, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mytuple from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mytuple from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 110, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, myudt from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, myudt from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 120, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mytodolists from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mytodolists from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 130, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, many_sinks from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, many_sinks from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 140, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, named_sinks from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, named_sinks from complex_types where key1 in (\\'row1\\', \\'row2\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UsfGEn\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 70, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mylist from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[6]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mylist from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 80, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, myset from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, myset from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 90, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mymap from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mymap from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 100, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mytuple from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mytuple from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 110, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, myudt from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, myudt from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 120, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mytodolists from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mytodolists from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 130, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, many_sinks from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, many_sinks from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 140, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT key1, named_sinks from complex_types where key1 in ('row1', 'row2')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, named_sinks from complex_types where key1 in ('row1', 'row2')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UsfGEn\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   8 of  14 in complex_data_types_test\n***Test Failed*** 8 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "collection_update_test", "className": "json_test.FromJsonUpdateTests", "duration": 9.373, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 745, in collection_update_test\n    run_func_docstring(tester=self, test_func=self.collection_update_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 33, in collection_update_test\\nFailed example:\\n    cqlsh_print(\"SELECT * from basic_collections where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest collection_update_test[4]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT * from basic_collections where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 62, in collection_update_test\\nFailed example:\\n    cqlsh_print(\"SELECT * from basic_collections where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest collection_update_test[7]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT * from basic_collections where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aEodnG\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 33, in collection_update_test\nFailed example:\n    cqlsh_print(\"SELECT * from basic_collections where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest collection_update_test[4]>\", line 1, in <module>\n        cqlsh_print(\"SELECT * from basic_collections where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 62, in collection_update_test\nFailed example:\n    cqlsh_print(\"SELECT * from basic_collections where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest collection_update_test[7]>\", line 1, in <module>\n        cqlsh_print(\"SELECT * from basic_collections where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aEodnG\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   2 of   8 in collection_update_test\n***Test Failed*** 2 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrubIndexes", "duration": 8.728, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 243, in test_standalone_scrub\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7J4a17\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7J4a17\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub", "className": "scrub_test.TestScrub", "duration": 7.893, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 377, in test_standalone_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4niScX\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-4niScX\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "disable_compression_cql_test", "className": "compression_test.TestCompression", "duration": 8.194, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 40, in disable_compression_cql_test\n    sstables = self.flush('disabled_compression_table')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-58R5EZ\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-58R5EZ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_cql_enabled_with_alter_test", "className": "compression_test.TestCompression", "duration": 7.002, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_add", "className": "thrift_tests.TestMutations", "duration": 7.441, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_time_uuid", "className": "thrift_tests.TestMutations", "duration": 8.038, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_super_deletion", "className": "thrift_tests.TestMutations", "duration": 7.29, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_keyspace", "className": "thrift_tests.TestMutations", "duration": 7.385, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert", "className": "thrift_tests.TestMutations", "duration": 7.225, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_of_entire_supercolumns", "className": "thrift_tests.TestMutations", "duration": 7.289, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_keyspace_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.283, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.902, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "remove_range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.061, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_update_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.117, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crc_check_chance_upgrade_test", "className": "upgrade_crc_check_chance_test.TestCrcCheckChanceUpgrade", "duration": 865.953, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-3.0)\nCompiling Cassandra cassandra-3.0 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "functional_test", "className": "global_row_key_cache_test.TestGlobalRowKeyCache", "duration": 252.038, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy", "className": "consistency_test.TestAvailability", "duration": 181.584, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_users", "className": "consistency_test.TestAccuracy", "duration": 149.914, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "quorum_available_during_failure_test", "className": "consistency_test.TestConsistency", "duration": 28.517, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 145.049, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1314, in delete_row_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XlMieG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XlMieG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 100.694, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ITPt4i\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ITPt4i\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "whole_map_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.005, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4503, in whole_map_conditional_test\n    check_applies(\"m = {'foo': 'bar'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4501, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kEpBuM\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Expected [[0, {'foo': 'bar'}]] from SELECT * FROM tmap, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-kEpBuM\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "nameless_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.608, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 922, in nameless_index_test\n    res = cursor.execute(\"SELECT id FROM users WHERE birth_year = 42\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Cw36a0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Cw36a0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_index_with_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.797, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1760, in composite_index_with_pk_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Din0db\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Din0db\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Din0db] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jw38_B\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Din0db\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-Din0db\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-Din0db] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jw38_B\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "more_order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.033, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "select_distinct_with_deletions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.732, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3303, in select_distinct_with_deletions_test\n    rows = cursor.execute('SELECT DISTINCT k FROM t1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-p8516i\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-p8516i\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "nan_infinity_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.681, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3690, in nan_infinity_test\n    selected = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VKOBZ2\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-VKOBZ2\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "nonpure_function_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.304, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.441, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 92.986, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 706, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 65.607, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 245, in test_with_less_results_than_page_size\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jiWbey\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 11, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jiWbey\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 45.994, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "empty_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.888, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3206, in empty_in_test\n    assert_nothing_changed(\"test\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3194, in assert_nothing_changed\n    res = cursor.execute(\"SELECT * FROM %s\" % table)  # make sure nothing got removed\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UZvlhf\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UZvlhf\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.29, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.221, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.647, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4424, in whole_set_conditional_test\n    check_applies(\"s = {'bar', 'foo'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4422, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, set(['bar', 'foo'])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-18OYYY\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-18OYYY\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "range_key_ordered_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.94, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3120, in range_key_ordered_test\n    assert_all(cursor, \"SELECT * FROM test\", [[0], [1], [-1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fwz3QM\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-fwz3QM\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-fwz3QM] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qsnI_B\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-fwz3QM\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-fwz3QM\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-fwz3QM] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qsnI_B\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.145, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "dynamic_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.024, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 201, in dynamic_cf_test\n    res = cursor.execute(\"SELECT time FROM clicks\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RqsfIj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RqsfIj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "timestamp_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.947, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1093, in timestamp_and_ttl_test\n    res = cursor.execute(\"SELECT k, c, writetime(c), ttl(c) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BTxCT8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 68, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BTxCT8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 36.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "basic_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 30.574, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 668, in basic_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u6XpQO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u6XpQO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\n--------------------- >> end captured logging << ---------------------", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "base_replica_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 94.007, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_gcgs_validation", "className": "materialized_views_test.TestMaterializedViews", "duration": 28.579, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 28.166, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "secondary_index_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.405, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog_point_in_time", "className": "snapshot_test.TestArchiveCommitlog", "duration": 81.272, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 72.793, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_any", "className": "write_failures_test.TestWriteFailures", "duration": 67.085, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos_any", "className": "write_failures_test.TestWriteFailures", "duration": 58.318, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6924_dropping_cf", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 59.026, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_low_cardinality_indexes", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 31.921, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "acknowledged_by_batchlog_set_when_batchlog_write_succeeds_test", "className": "batch_test.TestBatch", "duration": 46.022, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_rejects_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.228, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 39.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "paging_test.TestPagingWithModifiers", "duration": 27.539, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_counter_update_test", "className": "counter_tests.TestCounters", "duration": 23.464, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "use_custom_port_test", "className": "native_transport_ssl_test.NativeTransportSSL", "duration": 20.167, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "alter_ks_auth_test", "className": "auth_test.TestAuth", "duration": 17.261, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_test", "className": "auth_test.TestAuth", "duration": 17.652, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_cant_drop_themselves_test", "className": "auth_test.TestAuth", "duration": 16.614, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 12.088, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 444, in complex_data_types_test\n    run_func_docstring(tester=self, test_func=self.complex_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 44, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT toJson(mylist), toJson(myset), toJson(mymap), toJson(mytuple), toJson(myudt), toJson(mytodolists), toJson(many_sinks), toJson(named_sinks)\\n      FROM complex_types where key1 = \\'foo\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[5]>\", line 4, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 75, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(mylist) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(mylist) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 84, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(myset) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(myset) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 93, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(mymap) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(mymap) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 102, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(mytuple) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(mytuple) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 111, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(myudt) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(myudt) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 120, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(mytodolists) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(mytodolists) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 129, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(many_sinks) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(many_sinks) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 138, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT toJson(named_sinks) from complex_types where key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[14]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT toJson(named_sinks) from complex_types where key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jLHcQI\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 44, in complex_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT toJson(mylist), toJson(myset), toJson(mymap), toJson(mytuple), toJson(myudt), toJson(mytodolists), toJson(many_sinks), toJson(named_sinks)\n      FROM complex_types where key1 = 'foo'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[5]>\", line 4, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 75, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(mylist) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(mylist) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 84, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(myset) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(myset) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 93, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(mymap) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(mymap) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 102, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(mytuple) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(mytuple) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 111, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(myudt) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(myudt) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 120, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(mytodolists) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(mytodolists) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 129, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(many_sinks) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(many_sinks) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 138, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT toJson(named_sinks) from complex_types where key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[14]>\", line 1, in <module>\n        cqlsh_print(\"SELECT toJson(named_sinks) from complex_types where key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jLHcQI\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   9 of  15 in complex_data_types_test\n***Test Failed*** 9 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "select_using_secondary_index_test", "className": "json_test.FromJsonSelectTests", "duration": 8.791, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 827, in select_using_secondary_index_test\n    run_func_docstring(tester=self, test_func=self.select_using_secondary_index_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 25, in select_using_secondary_index_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT * from person_likes where name = fromJson(\\'{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}\\')\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest select_using_secondary_index_test[4]>\", line 3, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n1_upb\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 25, in select_using_secondary_index_test\nFailed example:\n    cqlsh_print('''\n    SELECT * from person_likes where name = fromJson('{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}')\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest select_using_secondary_index_test[4]>\", line 3, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-n1_upb\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   1 of   5 in select_using_secondary_index_test\n***Test Failed*** 1 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 8.008, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 517, in basic_data_types_test\n    run_func_docstring(tester=self, test_func=self.basic_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 51, in basic_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15\\n      FROM primitive_type_test WHERE key1 = \\'test\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest basic_data_types_test[3]>\", line 4, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tKieb_\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 51, in basic_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15\n      FROM primitive_type_test WHERE key1 = 'test'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest basic_data_types_test[3]>\", line 4, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tKieb_\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   1 of   4 in basic_data_types_test\n***Test Failed*** 1 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_expiration_batch_mutate", "className": "thrift_tests.TestMutations", "duration": 10.314, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count", "className": "thrift_tests.TestMutations", "duration": 7.041, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_standard_columns", "className": "thrift_tests.TestMutations", "duration": 7.188, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multi_slice", "className": "thrift_tests.TestMutations", "duration": 7.228, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.8, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_colons_in_string_literals", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.311, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_index", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.628, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_int_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.459, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1136, in test_int_values\n    \"\"\")\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 516, in verify_output\n    assert False, \"Failed to execute cqlsh\"\n\"Failed to execute cqlsh\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UdVMJL\\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\\n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Failed to execute cqlsh\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UdVMJL\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.872, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_connect_timeout", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.73, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_compact_test", "className": "schema_test.TestSchema", "duration": 7.088, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 6.718, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.108, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "more_order_by_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.062, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 649, "skippedMessage": "3.0.0 > 2.0.x", "name": "simple_tuple_query_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 68, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "date_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 705, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_with_2i_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 12, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "netstats_test", "className": "jmx_test.TestJMX", "duration": 1159.172, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "consistent_reads_after_write_test", "className": "materialized_views_test.TestMaterializedViewsConsistency", "duration": 275.217, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "\n0\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\n1100\n1200\n1300\n1400\n1500\n1600\n1700\n1800\n1900\n2000\n2100\n2200\n2300\n2400\n2500\n2600\n2700\n2800\n2900\n3000\n3100\n3200\n3300\n3400\n3500\n3600\n3700\n3800\n3900\n4000\n4100\n4200\n4300\n4400\n4500\n4600\n4700\n4800\n4900\n5000\n5100\n5200\n5300\n5400\n5500\n5600\n5700\n5800\n5900\n6000\n6100\n6200\n6300\n6400\n6500\n6600\n6700\n6800\n6900\n7000\n7100\n7200\n7300\n7400\n7500\n7600\n7700\n7800\n7900\n8000\n8100\n8200\n8300\n8400\n8500\n8600\n8700\n8800\n8900\n9000\n9100\n9200\n9300\n9400\n9500\n9600\n9700\n9800\n9900\n10000\n10100\n...[truncated 61789 chars]...\n125; extra: 0; missing: 0\nOn 99000; match: 150; extra: 0; missing: 0\nOn 99100; match: 175; extra: 0; missing: 0\nOn 99200; match: 200; extra: 0; missing: 0\nOn 99300; match: 225; extra: 0; missing: 0\nOn 99400; match: 250; extra: 0; missing: 0\nOn 99500; match: 275; extra: 0; missing: 0\nOn 99600; match: 300; extra: 0; missing: 0\nOn 99700; match: 325; extra: 0; missing: 0\nOn 99800; match: 350; extra: 0; missing: 0\nOn 99900; match: 375; extra: 0; missing: 0\nOn 100000; match: 400; extra: 0; missing: 0\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "add_dc_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 96.458, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crc_check_chance_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 27.568, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "prepared_statement_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.298, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_stopped_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 139.853, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "timeuuid_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 109.11, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2605, in timeuuid_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nu5q2Y\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nu5q2Y\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 95.434, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rRz5W5\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-rRz5W5\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 46.611, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "large_clustering_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.913, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.209, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "exclusive_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.733, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 714, "skippedMessage": null, "name": "limit_sparse_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 39.832, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 423, in limit_sparse_test\n    res = cursor.execute(\"SELECT * FROM clicks LIMIT 4\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-H1OXh9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 3, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-H1OXh9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.284, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1687, in no_clustering_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nNw7C6\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nNw7C6\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.034, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "multiordering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.522, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.624, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "range_key_ordered_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.577, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 358, in run\n    self.tearDown()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/upgrade_base.py\", line 267, in tearDown\n    super(UpgradeTester, self).tearDown()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 550, in tearDown\n    raise AssertionError('Unexpected error in %s node log: %s' % (node.name, errors))\n\"Unexpected error in node2 node log: ['ERROR [GossipStage:1] 2015-10-30 10:20:39,606 CassandraDaemon.java:185 - Exception in thread Thread[GossipStage:1,5,main]\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.service.StorageService.getApplicationStateValue(StorageService.java:1766) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.getTokensFor(StorageService.java:1839) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.handleStateNormal(StorageService.java:1892) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.onChange(StorageService.java:1649) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.StorageService.onJoin(StorageService.java:2347) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.Gossiper.handleMajorStateChange(Gossiper.java:1028) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.Gossiper.applyStateLocally(Gossiper.java:1109) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb(GossipDigestAckVerbHandler.java:58) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.net.MessageDeliveryTask.run(MessageDeliveryTask.java:66) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\\\n\\\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_45]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_45]']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SW0YDw\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-SW0YDw\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-SW0YDw] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6MvlPo\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6MvlPo\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6MvlPo] directory\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Unexpected error in node2 node log: ['ERROR [GossipStage:1] 2015-10-30 10:20:39,606 CassandraDaemon.java:185 - Exception in thread Thread[GossipStage:1,5,main]\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.service.StorageService.getApplicationStateValue(StorageService.java:1766) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.getTokensFor(StorageService.java:1839) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.handleStateNormal(StorageService.java:1892) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.onChange(StorageService.java:1649) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.StorageService.onJoin(StorageService.java:2347) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.Gossiper.handleMajorStateChange(Gossiper.java:1028) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.Gossiper.applyStateLocally(Gossiper.java:1109) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb(GossipDigestAckVerbHandler.java:58) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.net.MessageDeliveryTask.run(MessageDeliveryTask.java:66) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_45]\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_45]\\n\\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_45]']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SW0YDw\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-SW0YDw\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-SW0YDw] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-6MvlPo\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-6MvlPo\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-6MvlPo] directory\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 60.901, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 278, in test_with_more_results_than_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Dl0NPV\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Dl0NPV\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_index_with_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.23, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1760, in composite_index_with_pk_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ntLhuE\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-ntLhuE\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-ntLhuE] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BA7c7n\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ntLhuE\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-ntLhuE\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-ntLhuE] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BA7c7n\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.433, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "clustering_order_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.601, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "column_name_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 34.022, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 703, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.445, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4682, in cas_and_list_index_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, ['foo', 'bar'], 'foobar'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FwTYUP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 14, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FwTYUP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.922, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UZa4YZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UZa4YZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug7105_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.388, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 648, "skippedMessage": null, "name": "null_support_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.268, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 888, in null_support_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ExPA5w\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 69, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ExPA5w\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.144, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k4xGaz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-k4xGaz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 35.181, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "read_from_bootstrapped_node_test", "className": "bootstrap_test.TestBootstrap", "duration": 96.017, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "empty_vs_gcable_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 88.804, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 85.183, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "paging_test.TestPagingQueryIsolation", "duration": 73.518, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_while_node_toggle_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 66.71, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "system_auth_ks_is_alterable_test", "className": "auth_test.TestAuth", "duration": 57.839, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_compressed_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 58.275, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_keyspace_permission_isolation", "className": "user_types_test.TestUserTypes", "duration": 43.383, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_deflate_test", "className": "putget_test.TestPutGet", "duration": 37.79, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_correct_dc_rack_in_nodetool_info", "className": "nodetool_test.TestNodetool", "duration": 38.386, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_replicated_test", "className": "ttl_test.TestDistributedTTL", "duration": 26.913, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_ttl_test", "className": "ttl_test.TestTTL", "duration": 10.608, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_colon_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 26.101, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tuple_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 9.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_reading_use_header", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.141, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_select", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.954, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1549, in test_select\n    self.assertIn(\"(1 rows)\", out_lines)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 803, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 410, in fail\n    raise self.failureException(msg)\n\"'(1 rows)' not found in ['', '']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tcCjPb\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "'(1 rows)' not found in ['', '']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-tcCjPb\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  <stdin>:2:'list' object has no attribute 'has_more_pages'(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 8.154, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_empty_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.176, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 451, in test_with_empty_values\n    self.assertTrue(expected in output, \"Output \\n {%s} \\n doesn't contain expected\\n {%s}\" % (output, expected))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 422, in assertTrue\n    raise self.failureException(msg)\n\"Output \\n {\\n} \\n doesn't contain expected\\n {\\n intcol      | bigintcol            | varintcol\\n-------------+----------------------+-----------------------------\\n         -12 |  1234567890123456789 |  10000000000000000000000000\\n  2147483647 |  9223372036854775807 |                           9\\n           0 |                    0 |                           0\\n -2147483648 | -9223372036854775808 | -10000000000000000000000000\\n             |                      |                            \\n\\n(5 rows)}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bCxj1w\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Output \n {\n} \n doesn't contain expected\n {\n intcol      | bigintcol            | varintcol\n-------------+----------------------+-----------------------------\n         -12 |  1234567890123456789 |  10000000000000000000000000\n  2147483647 |  9223372036854775807 |                           9\n           0 |                    0 |                           0\n -2147483648 | -9223372036854775808 | -10000000000000000000000000\n             |                      |                            \n\n(5 rows)}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bCxj1w\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_describes_non_default_compaction_parameters", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.868, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 25.55, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 19.814, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_table_batch_for_10554_test", "className": "batch_test.TestBatch", "duration": 18.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "uniform_ratio_test", "className": "stress_tool_test.TestStressSparsenessRatio", "duration": 16.727, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "complex_schema_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 14.587, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 1503, in complex_schema_test\n    run_func_docstring(tester=self, test_func=self.complex_schema_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 59, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT JSON * FROM complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[6]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT JSON * FROM complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 71, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT * FROM complex_types\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[7]>\", line 3, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 118, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mylist from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[10]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mylist from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 128, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, myset from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[11]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, myset from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 138, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mymap from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[12]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mymap from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 148, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mytuple from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[13]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mytuple from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 158, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, myudt from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[14]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, myudt from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 168, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, mytodolists from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[15]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, mytodolists from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 178, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, many_sinks from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[16]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, many_sinks from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 188, in complex_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT key1, named_sinks from complex_types\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_schema_test[17]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT key1, named_sinks from complex_types\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HZPFqz\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 59, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT JSON * FROM complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[6]>\", line 1, in <module>\n        cqlsh_print(\"SELECT JSON * FROM complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 71, in complex_schema_test\nFailed example:\n    cqlsh_print('''\n    SELECT * FROM complex_types\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[7]>\", line 3, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 118, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mylist from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[10]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mylist from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 128, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, myset from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[11]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, myset from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 138, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mymap from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[12]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mymap from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 148, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mytuple from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[13]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mytuple from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 158, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, myudt from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[14]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, myudt from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 168, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, mytodolists from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[15]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, mytodolists from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 178, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, many_sinks from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[16]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, many_sinks from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 188, in complex_schema_test\nFailed example:\n    cqlsh_print(\"SELECT key1, named_sinks from complex_types\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_schema_test[17]>\", line 1, in <module>\n        cqlsh_print(\"SELECT key1, named_sinks from complex_types\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HZPFqz\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n  10 of  18 in complex_schema_test\n***Test Failed*** 10 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "selecting_pkey_as_json_test", "className": "json_test.FromJsonSelectTests", "duration": 9.249, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 788, in selecting_pkey_as_json_test\n    run_func_docstring(tester=self, test_func=self.selecting_pkey_as_json_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 22, in selecting_pkey_as_json_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT * FROM person_info WHERE name = fromJson(\\'{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}\\')\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest selecting_pkey_as_json_test[3]>\", line 3, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iqMnyQ\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 22, in selecting_pkey_as_json_test\nFailed example:\n    cqlsh_print('''\n    SELECT * FROM person_info WHERE name = fromJson('{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}')\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest selecting_pkey_as_json_test[3]>\", line 3, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iqMnyQ\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   1 of   4 in selecting_pkey_as_json_test\n***Test Failed*** 1 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "counters_test", "className": "json_test.ToJsonSelectTests", "duration": 8.468, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 294, in counters_test\n    run_func_docstring(tester=self, test_func=self.counters_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 17, in counters_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT toJson(col1), toJson(col2), toJson(col3) from my_counters\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest counters_test[2]>\", line 3, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hgyHg0\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 17, in counters_test\nFailed example:\n    cqlsh_print('''\n    SELECT toJson(col1), toJson(col2), toJson(col3) from my_counters\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest counters_test[2]>\", line 3, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hgyHg0\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   1 of   3 in counters_test\n***Test Failed*** 1 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "test_nodetool_scrub", "className": "scrub_test.TestScrub", "duration": 8.719, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 338, in test_nodetool_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CszZEQ\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-CszZEQ\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_reinsert", "className": "thrift_tests.TestMutations", "duration": 7.811, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_super", "className": "thrift_tests.TestMutations", "duration": 8.092, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_integer_order", "className": "thrift_tests.TestMutations", "duration": 8.239, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_not_found_quorum", "className": "thrift_tests.TestMutations", "duration": 7.637, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "index_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.69, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sc_with_row_cache_test", "className": "super_column_cache_test.TestSCCache", "duration": 7.34, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 701, "skippedMessage": "3.0.0 > 2.0.x", "name": "indexed_with_eq_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.065, "errorStackTrace": null, "age": 16, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "tuple_notation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.123, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_2_test", "className": "batch_test.TestBatch", "duration": 781.415, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_doesnt_throw_uae_test", "className": "batch_test.TestBatch", "duration": 28.503, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_accepts_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 6.838, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_schema_churn_with_node_down_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 264.342, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "snapshot_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 72.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableofflinerelevel_test", "className": "offline_tools_test.TestOfflineTools", "duration": 183.641, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "interrupt_build_process_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 133.677, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 64.674, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bulk_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 124.659, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_source_copy_round_trip", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 8.991, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_reading_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.208, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_all_datatypes_write", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 6.956, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_null_as_null_indicator", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 6.837, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_writing_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 6.954, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_datetime_values", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.817, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1183, in test_datetime_values\n    \"\"\")\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 516, in verify_output\n    assert False, \"Failed to execute cqlsh\"\n\"Failed to execute cqlsh\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eg1e81\\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\\n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Failed to execute cqlsh\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eg1e81\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 6.935, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 87.888, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 125.367, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UQQNXW\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UQQNXW\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_delete_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 42.18, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_limit_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.968, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "refuse_in_with_indexes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.795, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_5240_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.8, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.78, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3399, in bug_6115_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aO0yZx\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aO0yZx\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.671, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 706, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.087, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4311, in list_item_conditional_test\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vOqo4P\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 11, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-vOqo4P\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_and_reverse_type_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.859, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 40.277, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.196, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "refuse_in_with_indexes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.938, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_list_index_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.853, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.899, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.866, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "composite_row_key_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.439, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1541, in composite_row_key_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5mZt60\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5mZt60\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "dynamic_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.492, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 201, in dynamic_cf_test\n    res = cursor.execute(\"SELECT time FROM clicks\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i3AesN\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-i3AesN\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_partition_key_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.527, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2429, in composite_partition_key_validation_test\n    res = cursor.execute(\"SELECT * FROM foo\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oJsvUA\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oJsvUA\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.938, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 35.906, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "readrepair_test", "className": "consistency_test.TestConsistency", "duration": 84.818, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "empty_vs_gcable_sequential_repair_test", "className": "repair_test.TestRepair", "duration": 81.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_list_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 65.211, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter", "className": "write_failures_test.TestWriteFailures", "duration": 58.281, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "change_durable_writes_test", "className": "configuration_test.TestConfiguration", "duration": 50.739, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 47.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "table_metric_mbeans_test", "className": "jmx_test.TestJMX", "duration": 42.37, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_nested_type_dropping", "className": "user_types_test.TestUserTypes", "duration": 26.421, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_increment_test", "className": "counter_tests.TestCounters", "duration": 27.408, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 26.027, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 26.112, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_2dc_rf1_test", "className": "multidc_putget_test.TestMultiDCPutGet", "duration": 25.176, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "paging_test.TestPagingSize", "duration": 23.71, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "permissions_caching_test", "className": "auth_test.TestAuth", "duration": 20.318, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.545, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dropping_nonexistent_user_throws_exception_test", "className": "auth_test.TestAuth", "duration": 16.571, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_reenabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 17.682, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 144, in hintedhandoff_dc_reenabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L9bDgg\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L9bDgg\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "complex_data_types_test", "className": "json_test.FromJsonUpdateTests", "duration": 11.226, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 671, in complex_data_types_test\n    run_func_docstring(tester=self, test_func=self.complex_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 80, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT mylist from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[6]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT mylist from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 89, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT myset from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT myset from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 98, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT mymap from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT mymap from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 107, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT mytuple from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT mytuple from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 116, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT myudt from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT myudt from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 125, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT mytodolists from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT mytodolists from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 134, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT many_sinks from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT many_sinks from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 143, in complex_data_types_test\\nFailed example:\\n    cqlsh_print(\"SELECT named_sinks from complex_types where key1 = \\'row1\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT named_sinks from complex_types where key1 = \\'row1\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dhKdmd\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 80, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT mylist from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[6]>\", line 1, in <module>\n        cqlsh_print(\"SELECT mylist from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 89, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT myset from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[7]>\", line 1, in <module>\n        cqlsh_print(\"SELECT myset from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 98, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT mymap from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[8]>\", line 1, in <module>\n        cqlsh_print(\"SELECT mymap from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 107, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT mytuple from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[9]>\", line 1, in <module>\n        cqlsh_print(\"SELECT mytuple from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 116, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT myudt from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[10]>\", line 1, in <module>\n        cqlsh_print(\"SELECT myudt from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 125, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT mytodolists from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[11]>\", line 1, in <module>\n        cqlsh_print(\"SELECT mytodolists from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 134, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT many_sinks from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[12]>\", line 1, in <module>\n        cqlsh_print(\"SELECT many_sinks from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 143, in complex_data_types_test\nFailed example:\n    cqlsh_print(\"SELECT named_sinks from complex_types where key1 = 'row1'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest complex_data_types_test[13]>\", line 1, in <module>\n        cqlsh_print(\"SELECT named_sinks from complex_types where key1 = 'row1'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dhKdmd\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   8 of  14 in complex_data_types_test\n***Test Failed*** 8 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.ToJsonSelectTests", "duration": 8.162, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 262, in basic_data_types_test\n    run_func_docstring(tester=self, test_func=self.basic_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 31, in basic_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\\n     FROM primitive_type_test WHERE key1 = \\'foo\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest basic_data_types_test[2]>\", line 6, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 54, in basic_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\\n     FROM primitive_type_test WHERE key1 = \\'foo\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest basic_data_types_test[4]>\", line 6, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9WNpft\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 31, in basic_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\n     FROM primitive_type_test WHERE key1 = 'foo'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest basic_data_types_test[2]>\", line 6, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 54, in basic_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\n     FROM primitive_type_test WHERE key1 = 'foo'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest basic_data_types_test[4]>\", line 6, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9WNpft\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   2 of   5 in basic_data_types_test\n***Test Failed*** 2 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_dynamic_indexes_with_system_update_cf", "className": "thrift_tests.TestMutations", "duration": 7.661, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_slice", "className": "thrift_tests.TestMutations", "duration": 6.891, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_ring", "className": "thrift_tests.TestMutations", "duration": 6.64, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_standard_row", "className": "thrift_tests.TestMutations", "duration": 7.007, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_missing_super", "className": "thrift_tests.TestMutations", "duration": 7.075, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dropped_index_test", "className": "prepared_statements_test.TestPreparedStatements", "duration": 6.613, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "Number of matching rows: 10\nExecuting prepared statement with dropped index...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compact_storage_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.326, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_bugs_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.059, "errorStackTrace": null, "age": 67, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 583, "skippedMessage": "3.0.0 > 2.0.x", "name": "update_type_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 134, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "upgrade_to_22_test", "className": "upgrade_internal_auth_test.TestAuthUpgrade", "duration": 989.172, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-2.2)\nCompiling Cassandra cassandra-2.2 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "wide_row_test", "className": "putget_test.TestPutGet", "duration": 248.265, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "rangeputget_test", "className": "putget_test.TestPutGet", "duration": 47.126, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "row_existence_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 146.892, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1613, in row_existence_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bUGvKJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 66, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bUGvKJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "compact_metadata_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 101.499, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2662, in compact_metadata_test\n    res = cursor.execute(\"SELECT * FROM bar\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9ZVbsY\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9ZVbsY\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 95.127, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JVrbaM\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JVrbaM\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_8558_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 40.941, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 38.133, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2694, in clustering_indexing_test\n    res = cursor.execute(\"SELECT v1 FROM posts WHERE time = 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-216OfX\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-216OfX\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 709, "skippedMessage": null, "name": "range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.407, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1730, in range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HYifZn\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-HYifZn\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-HYifZn] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ECZS0z\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 8, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HYifZn\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-HYifZn\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-HYifZn] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ECZS0z\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_key_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.671, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.487, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2440, in multi_in_compact_test\n    self.__multi_in(True)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L3l8p0\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L3l8p0\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "float_with_exponent_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.294, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 709, "skippedMessage": null, "name": "range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 89.319, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1730, in range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3pbN0x\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3pbN0x\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3pbN0x] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0EoLCD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 8, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-3pbN0x\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-3pbN0x\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-3pbN0x] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0EoLCD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 43.225, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_comparator_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.381, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "tuple_notation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.679, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.826, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.516, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "date_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.433, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.942, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 71.629, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 815, in test_paging_using_secondary_indexes\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MKvvQS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MKvvQS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 37.198, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 35.424, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 36.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.999, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 34.591, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 563, in test_with_limit\n    run_scenarios(scenarios, handle_scenario, deferred_exceptions=(AssertionError,))\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 720, in run_scenarios\n    raise MultiError(errors, tracebacks)\n'\\n****************************** BEGIN MultiError ******************************\\nencountered RuntimeError Requested pages were not delivered before timeout. running scenario:\\n  {\\'expect_pgcount\\': 2, \\'data_size\\': 30, \\'whereclause\\': \\'WHERE id in (4,5)\\', \\'limit\\': 20, \\'fetch\\': 10, \\'expect_pgsizes\\': [10, 10]}\\nTraceback (most recent call last):\\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 710, in run_scenarios\\n    handler(scenario)\\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 556, in handle_scenario\\n    pf = PageFetcher(future).request_all()\\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 114, in request_all\\n    self.wait()\\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\\nRuntimeError: Requested pages were not delivered before timeout.\\n\\n****************************** END MultiError ******************************\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e0LuKt\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: running scenario 1/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 30, \\'whereclause\\': \\'WHERE id = 6\\', \\'limit\\': 10, \\'fetch\\': 20, \\'expect_pgsizes\\': [10]}\\ndtest: DEBUG: running scenario 2/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 20, \\'whereclause\\': \\'WHERE id = 5\\', \\'limit\\': 10, \\'fetch\\': 30, \\'expect_pgsizes\\': [10]}\\ndtest: DEBUG: running scenario 3/18: {\\'expect_pgcount\\': 2, \\'data_size\\': 30, \\'whereclause\\': \\'WHERE id = 6\\', \\'limit\\': 20, \\'fetch\\': 10, \\'expect_pgsizes\\': [10, 10]}\\ndtest: DEBUG: running scenario 4/18: {\\'expect_pgcount\\': 2, \\'data_size\\': 20, \\'whereclause\\': \\'WHERE id = 5\\', \\'limit\\': 30, \\'fetch\\': 10, \\'expect_pgsizes\\': [10, 10]}\\ndtest: DEBUG: running scenario 5/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 10, \\'whereclause\\': \\'WHERE id = 3\\', \\'limit\\': 20, \\'fetch\\': 30, \\'expect_pgsizes\\': [10]}\\ndtest: DEBUG: running scenario 6/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 10, \\'whereclause\\': \\'WHERE id = 3\\', \\'limit\\': 30, \\'fetch\\': 20, \\'expect_pgsizes\\': [10]}\\ndtest: DEBUG: running scenario 7/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 80, \\'whereclause\\': \\'WHERE id in (1,2,3,4,5,6)\\', \\'limit\\': 9, \\'fetch\\': 20, \\'expect_pgsizes\\': [9]}\\ndtest: DEBUG: running scenario 8/18: {\\'expect_pgcount\\': 1, \\'data_size\\': 20, \\'whereclause\\': \\'WHERE id in (3,4)\\', \\'limit\\': 10, \\'fetch\\': 30, \\'expect_pgsizes\\': [10]}\\ndtest: DEBUG: running scenario 9/18: {\\'expect_pgcount\\': 2, \\'data_size\\': 30, \\'whereclause\\': \\'WHERE id in (4,5)\\', \\'limit\\': 20, \\'fetch\\': 10, \\'expect_pgsizes\\': [10, 10]}\\ndtest: DEBUG: scenario 9/18 encountered a non-deferrable exception, aborting\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "\n****************************** BEGIN MultiError ******************************\nencountered RuntimeError Requested pages were not delivered before timeout. running scenario:\n  {'expect_pgcount': 2, 'data_size': 30, 'whereclause': 'WHERE id in (4,5)', 'limit': 20, 'fetch': 10, 'expect_pgsizes': [10, 10]}\nTraceback (most recent call last):\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 710, in run_scenarios\n    handler(scenario)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 556, in handle_scenario\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 114, in request_all\n    self.wait()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\nRuntimeError: Requested pages were not delivered before timeout.\n\n****************************** END MultiError ******************************\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-e0LuKt\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: running scenario 1/18: {'expect_pgcount': 1, 'data_size': 30, 'whereclause': 'WHERE id = 6', 'limit': 10, 'fetch': 20, 'expect_pgsizes': [10]}\ndtest: DEBUG: running scenario 2/18: {'expect_pgcount': 1, 'data_size': 20, 'whereclause': 'WHERE id = 5', 'limit': 10, 'fetch': 30, 'expect_pgsizes': [10]}\ndtest: DEBUG: running scenario 3/18: {'expect_pgcount': 2, 'data_size': 30, 'whereclause': 'WHERE id = 6', 'limit': 20, 'fetch': 10, 'expect_pgsizes': [10, 10]}\ndtest: DEBUG: running scenario 4/18: {'expect_pgcount': 2, 'data_size': 20, 'whereclause': 'WHERE id = 5', 'limit': 30, 'fetch': 10, 'expect_pgsizes': [10, 10]}\ndtest: DEBUG: running scenario 5/18: {'expect_pgcount': 1, 'data_size': 10, 'whereclause': 'WHERE id = 3', 'limit': 20, 'fetch': 30, 'expect_pgsizes': [10]}\ndtest: DEBUG: running scenario 6/18: {'expect_pgcount': 1, 'data_size': 10, 'whereclause': 'WHERE id = 3', 'limit': 30, 'fetch': 20, 'expect_pgsizes': [10]}\ndtest: DEBUG: running scenario 7/18: {'expect_pgcount': 1, 'data_size': 80, 'whereclause': 'WHERE id in (1,2,3,4,5,6)', 'limit': 9, 'fetch': 20, 'expect_pgsizes': [9]}\ndtest: DEBUG: running scenario 8/18: {'expect_pgcount': 1, 'data_size': 20, 'whereclause': 'WHERE id in (3,4)', 'limit': 10, 'fetch': 30, 'expect_pgsizes': [10]}\ndtest: DEBUG: running scenario 9/18: {'expect_pgcount': 2, 'data_size': 30, 'whereclause': 'WHERE id in (4,5)', 'limit': 20, 'fetch': 10, 'expect_pgsizes': [10, 10]}\ndtest: DEBUG: scenario 9/18 encountered a non-deferrable exception, aborting\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "crash_during_decommission_test", "className": "topology_test.TestTopology", "duration": 131.206, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 82.625, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "incompressible_data_in_compressed_table_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 10.809, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 79.044, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 67.755, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 39.87, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 33.641, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_while_node_down_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 62.58, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "write_failures_test.TestWriteFailures", "duration": 58.344, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_with_internode_ssl_test", "className": "internode_ssl_test.TestInternodeSSL", "duration": 38.221, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 34.072, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 28.961, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "paging_test.TestPagingWithModifiers", "duration": 26.031, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "paging_test.TestPagingSize", "duration": 24.32, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_as_part_of_pkey", "className": "user_types_test.TestUserTypes", "duration": 27.612, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_remove", "className": "thrift_tests.TestMutations", "duration": 27.423, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_cf_recreate", "className": "thrift_tests.TestMutations", "duration": 8.512, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cf_remove", "className": "thrift_tests.TestMutations", "duration": 7.328, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_muliget_slice", "className": "thrift_tests.TestMutations", "duration": 7.274, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_and_range_slice", "className": "thrift_tests.TestMutations", "duration": 7.149, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_long_order", "className": "thrift_tests.TestMutations", "duration": 7.151, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_partial", "className": "thrift_tests.TestMutations", "duration": 7.325, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_resurrect_subcolumn", "className": "thrift_tests.TestMutations", "duration": 7.297, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_token_map", "className": "thrift_tests.TestMutations", "duration": 7.228, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_tombstone_and_static", "className": "thrift_tests.TestCQLAccesses", "duration": 7.746, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 23.111, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_disabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 18.378, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 106, in hintedhandoff_disabled_test\n    self.assertEqual('Hinted handoff is not running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is not running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OXhkZ5\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is not running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OXhkZ5\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_keeps_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.392, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_invalid_uuid", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.528, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_on_non_reserved_keywords", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.28, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_ks_auth_test", "className": "auth_test.TestAuth", "duration": 17.262, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_column_ttl_with_default_ttl_test2", "className": "ttl_test.TestTTL", "duration": 14.82, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_ttl_can_be_removed_test", "className": "ttl_test.TestTTL", "duration": 8.337, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_standalone_scrub_essential_files_only", "className": "scrub_test.TestScrub", "duration": 7.796, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 404, in test_standalone_scrub_essential_files_only\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-upoij5\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-upoij5\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_rejects_counter_mutations_test", "className": "batch_test.TestBatch", "duration": 7.263, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_preparation_test", "className": "cql_prepared_test.TestCQL", "duration": 6.726, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_function_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.165, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "builtin_functions_require_no_special_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.366, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_create_drop_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.764, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_and_grant_roles_with_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.159, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_drop_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.691, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_drop_role_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.125, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_user_as_alias_for_create_role_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.856, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creator_of_db_resource_granted_all_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.19, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disallow_grant_execute_on_non_function_resources_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.805, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disallow_grant_revoke_on_builtin_functions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.848, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_and_revoke_roles_with_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.202, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_function_and_keyspace_cleans_up_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.229, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_keyspace_cleans_up_function_level_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.183, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_cleans_up_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.253, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_removes_memberships_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.866, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_role_revokes_permissions_granted_on_it_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.861, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "filter_granted_permissions_by_resource_type_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.028, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_resource_hierarchy_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_are_idempotent_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.498, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.544, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_role_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.407, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.88, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.861, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ignore_invalid_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.733, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "inheritence_of_udf_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.315, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.588, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_permissions_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.635, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_roles_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.371, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_users_considers_inherited_superuser_status_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.975, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "prevent_circular_grants_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.637, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_admin_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.514, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_caching_authenticated_user_test", "className": "auth_roles_test.TestAuthRoles", "duration": 20.445, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_name_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.474, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_requires_login_privilege_to_authenticate_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.98, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "role_requires_password_to_login_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.128, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "roles_do_not_inherit_login_privilege_test", "className": "auth_roles_test.TestAuthRoles", "duration": 16.988, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "superuser_status_is_inherited_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.341, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_delete_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.288, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_insert_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.115, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_select_where_clause_test", "className": "auth_roles_test.TestAuthRoles", "duration": 19.22, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_selection_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.213, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_in_update_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.118, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_permissions_validation_test", "className": "auth_roles_test.TestAuthRoles", "duration": 18.427, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_overloads_permissions_test", "className": "auth_roles_test.TestAuthRoles", "duration": 17.911, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "conversion_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.06, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "table_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "truncate_clean_cache_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "multi_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4882_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "dense_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "sparse_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "no_range_ghost_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_ranges_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6069_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_count_paging_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "count_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_indexing_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_with_limit_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "column_name_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_and_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "only_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "boolean_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_5240_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 711, "skippedMessage": "3.0.0 > 2.0.x", "name": "large_count_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 6, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_blob_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "drop_and_readd_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 125, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "cql3_insert_thrift_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6050_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_and_ttl_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_tombstones_compaction_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 649, "skippedMessage": "3.0.0 > 2.0.x", "name": "timestamp_and_ttl_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 68, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "deletion_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "multi_list_set_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_key_ordered_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6612_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "reserved_keyword_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.116, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_tombstones_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "table_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "upgrade_with_counters_test", "className": "upgrade_supercolumns_test.TestSCUpgrade", "duration": 0.058, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "non_eq_conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 46.333, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 92.6, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1590, in cql3_insert_thrift_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PhQ9oJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PhQ9oJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.245, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "bug_6069_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.104, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3385, in bug_6069_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, {1, 2, 3}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, set([1, 2, 3])]] from SELECT * FROM test, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lTYr6z\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Expected [[0, set([1, 2, 3])]] from SELECT * FROM test, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lTYr6z\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "dense_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.669, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "batch_and_list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.446, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conversion_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.989, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "column_name_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.41, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.121, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 101.593, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 856, in static_columns_paging_test\n    results = list(cursor.execute(\"SELECT %s FROM test\" % selector))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bsibAS\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bsibAS\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_equal_results_to_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 65.072, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 309, in test_with_equal_results_to_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PEvCIT\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-PEvCIT\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 62.997, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1080, in test_paging_using_secondary_indexes_with_static_cols\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8Ga8R3\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-8Ga8R3\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_failure_threshold_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 37.988, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.941, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.395, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 705, "skippedMessage": null, "name": "static_columns_with_2i_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.107, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3918, in static_columns_with_2i_test\n    assert_all(cursor, \"SELECT * FROM test WHERE v = 1\", [[0, 0, 42, 1], [0, 1, 42, 1]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LcQ4ka\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 12, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LcQ4ka\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 701, "skippedMessage": null, "name": "indexed_with_eq_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.251, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 488, in indexed_with_eq_test\n    assert rows_to_list(res) == [['Samwise']], res\n\"[]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iVeXcw\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 16, "errorDetails": "[]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iVeXcw\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.639, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.081, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WK4Fuz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-WK4Fuz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 31.981, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "duration": 29.646, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_reversed_test", "className": "consistency_test.TestConsistency", "duration": 431.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "really_complex_repair_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 135.271, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "add_node_after_mv_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 87.786, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 46.597, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.279, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.607, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "repair_table_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 88.587, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "repair_parent_table_test", "className": "repair_test.TestRepairDataSystemTable", "duration": 95.355, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_collapse_gossiping_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 75.654, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 71.686, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 206, in compaction_throughput_test\n    assert_almost_equal(float(threshold), float(avgthroughput), error=0.2)\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 65, in assert_almost_equal\n    assert vmin > vmax * (1.0 - error) or vmin == vmax, \"values not within %.2f%% of the max: %s\" % (error * 100, args)\n'values not within 20.00% of the max: (5.0, 3.978328)\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Pr85Cl\\ndtest: DEBUG: 3.978328\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "values not within 20.00% of the max: (5.0, 3.978328)\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Pr85Cl\ndtest: DEBUG: 3.978328\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_strategy_switching_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 39.905, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 50.041, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 23.48, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paxos", "className": "write_failures_test.TestWriteFailures", "duration": 58.94, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_respected_on_repair_test", "className": "ttl_test.TestDistributedTTL", "duration": 41.603, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_list_ttl_test", "className": "ttl_test.TestTTL", "duration": 18.974, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 10.782, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "basic_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 31.074, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "begin_test", "className": "jmxmetrics_test.TestJMXMetrics", "duration": 37.148, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 32.113, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_using_secondary_indexes", "className": "paging_test.TestPagingData", "duration": 27.506, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 27.542, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_dropping", "className": "user_types_test.TestUserTypes", "duration": 28.127, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "materialized_views_auth_test", "className": "auth_test.TestAuth", "duration": 17.711, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_auth_test", "className": "auth_test.TestAuth", "duration": 18.209, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ghosts_test", "className": "range_ghost_test.TestRangeGhosts", "duration": 13.989, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_dynamic_indexes_creation_deletion", "className": "thrift_tests.TestMutations", "duration": 8.357, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_with_none_given_underneath", "className": "thrift_tests.TestMutations", "duration": 7.482, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_slice_standard", "className": "thrift_tests.TestMutations", "duration": 7.218, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_super_blocking", "className": "thrift_tests.TestMutations", "duration": 7.243, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_cf_names", "className": "thrift_tests.TestMutations", "duration": 7.187, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_strategy_class", "className": "thrift_tests.TestMutations", "duration": 7.131, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice_super", "className": "thrift_tests.TestMutations", "duration": 7.136, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_8280_validate_indexed_values", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 8.167, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_indexes_on_single_map_column", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 7.73, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_round_trip", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 8.296, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_source_glass", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.771, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 370, in test_source_glass\n    self.verify_glass(node1)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 234, in verify_glass\n    self.assertEquals(output.count('\u041c\u043e\u0436\u0430\u043c \u0434\u0430 \u0458\u0430\u0434\u0430\u043c \u0441\u0442\u0430\u043a\u043b\u043e, \u0430 \u043d\u0435 \u043c\u0435 \u0448\u0442\u0435\u0442\u0430.'), 16)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'0 != 16\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lNpSqo\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "0 != 16\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lNpSqo\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_pep8_compliance", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 0.806, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_valid_data", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.861, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_invalid_text", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.674, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "prepared_statement_invalidation_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 7.21, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "durable_writes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.794, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_udf_test", "className": "user_functions_test.TestUserFunctions", "duration": 8.247, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "aggregate_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.619, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "default_aggregate_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.571, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_migration", "className": "user_functions_test.TestUserFunctions", "duration": 34.598, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_overload_test", "className": "user_functions_test.TestUserFunctions", "duration": 34.049, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_scripting_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.579, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_keyspace_isolation_test", "className": "user_functions_test.TestUserFunctions", "duration": 6.687, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udf_with_udt_test", "className": "user_functions_test.TestUserFunctions", "duration": 7.214, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "dynamic_cf_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.059, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "nameless_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "token_range_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 67, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 706, "skippedMessage": "3.0.0 > 2.0.x", "name": "list_item_conditional_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 11, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "set_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 709, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 8, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_clustering_indexing_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_cas_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 695, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_clustering_and_static_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 22, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_partition_key_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_and_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 711, "skippedMessage": "3.0.0 > 2.0.x", "name": "counters_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 6, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "multiordering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "nonpure_function_collection_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.11, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "create_alter_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_row_key_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_old_property_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_compact_multikey_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_compact_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "in_with_desc_order_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_8558_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_index_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "empty_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 583, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_counter_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 134, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "function_and_reverse_type_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "timeuuid_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "identifier_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_and_list_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_with_empty_clustering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_with_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "negative_timestamp_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_4_test", "className": "batch_test.TestBatch", "duration": 755.786, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "split_test", "className": "sstablesplit_test.TestSSTableSplit", "duration": 398.63, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "-- ma-26-big-Data.db-----\n-- ma-50-big-Data.db-----\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_first_boot_test", "className": "replace_address_test.TestReplaceAddress", "duration": 166.135, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_nonexistent_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 28.272, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_sequential_repair_test", "className": "repair_test.TestRepair", "duration": 134.222, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "deletion_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 148.514, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 962, in deletion_test\n    res = cursor.execute(\"SELECT * FROM testcf\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dFJ2Tz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dFJ2Tz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_compaction_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 58.221, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.926, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.59, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2436, in multi_in_test\n    self.__multi_in(False)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hNUeYu\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-hNUeYu\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.271, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "rename_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.552, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "limit_multiget_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.551, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "indexes_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.416, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1972, in indexes_composite_test\n    res = cursor.execute(\"SELECT blog_id, timestamp FROM test WHERE author = 'bob'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Rz7p9l\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Rz7p9l\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_and_regular_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.937, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "limit_bugs_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 36.694, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1831, in limit_bugs_test\n    res = cursor.execute(\"SELECT * FROM testcf;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G0pcrH\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-G0pcrH\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-G0pcrH] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GKFXCc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-G0pcrH\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-G0pcrH\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-G0pcrH] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GKFXCc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_order_by_without_selecting_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.028, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "counters_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.362, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 457, in counters_test\n    assert rows_to_list(res) == [[-4]], res\n\"[Row(total=-2)]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jNq0pz\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "[Row(total=-2)]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jNq0pz\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_with_deletes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 48.964, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2397, in range_with_deletes_test\n    res = cursor.execute(\"SELECT * FROM test LIMIT %d\" % (nb_keys / 2))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KscQ6O\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KscQ6O\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "select_count_paging_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.454, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4040, in select_count_paging_test\n    assert_one(cursor, \"select count(*) from test where field3 = false limit 1;\", [2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-p95Mn8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-p95Mn8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "whole_list_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.666, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4232, in whole_list_conditional_test\n    check_applies(\"l = ['foo', 'bar', 'foobar']\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4230, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YktYpn\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-YktYpn\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_ranges_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.268, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "bug_6612_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.239, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4896, in bug_6612_test\n    assert_one(cursor, \"select count(*) from session_data where app_name='foo' and account='bar' and last_access > 4 allow filtering\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dKvFFg\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dKvFFg\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "batch_and_list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.273, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "nonpure_function_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.09, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "composite_partition_key_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.161, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2429, in composite_partition_key_validation_test\n    res = cursor.execute(\"SELECT * FROM foo\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0HceuF\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0HceuF\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "order_by_with_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.59, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "float_with_exponent_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 714, "skippedMessage": null, "name": "test_with_allow_filtering", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 64.261, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 592, in test_with_allow_filtering\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lcxqvr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 3, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-lcxqvr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_rebuild_test", "className": "rebuild_test.TestRebuild", "duration": 91.796, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_commit_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 82.739, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_crc", "className": "commitlog_test.TestCommitLog", "duration": 33.731, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.153, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "lwt_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 73.818, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_one", "className": "write_failures_test.TestWriteFailures", "duration": 69.551, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_v3", "className": "write_failures_test.TestWriteFailures", "duration": 58.407, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "paging_test.TestPagingSize", "duration": 44.529, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_partition_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 28.451, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 27.15, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_schema_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 33.801, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 18.752, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 10.556, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 23.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "load_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 31.499, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 22.164, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "select_element_inside_udt_test", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.261, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_alter_table", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.421, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_commented_lines", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.531, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:6:SyntaxException: <ErrorMessage code=2000 [Syntax error in CQL query] message=\"line 1:0 no viable alternative at input ';' ([;])\">(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_set_ttl_test", "className": "ttl_test.TestTTL", "duration": 18.979, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_map_ttl_test", "className": "ttl_test.TestTTL", "duration": 14.716, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_ttl_works_without_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 9.756, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_cf_auth_test", "className": "auth_test.TestAuth", "duration": 17.398, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_table_with_2ary_indexes_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.372, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_table_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.9, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "nondefault_table_settings_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.542, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "pkey_requirement_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 7.79, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_snitch", "className": "thrift_tests.TestMutations", "duration": 7.008, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_get", "className": "thrift_tests.TestMutations", "duration": 6.974, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter_get_slice_range", "className": "thrift_tests.TestMutations", "duration": 7.349, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_column_name_lengths", "className": "thrift_tests.TestMutations", "duration": 6.94, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_long_remove", "className": "thrift_tests.TestMutations", "duration": 7.233, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_truncate", "className": "thrift_tests.TestTruncate", "duration": 7.194, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "table_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.479, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_no_counters_in_user_types", "className": "user_types_test.TestUserTypes", "duration": 6.498, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_5_test", "className": "batch_test.TestBatch", "duration": 805.416, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy_users", "className": "consistency_test.TestAccuracy", "duration": 247.664, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simultaneous_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 169.029, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 89.269, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replace_shutdown_node_test", "className": "replace_address_test.TestReplaceAddress", "duration": 122.517, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "test_undefined_page_size_default", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 96.65, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 342, in test_undefined_page_size_default\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZTnlYU\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ZTnlYU\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "test_with_more_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "duration": 64.212, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 278, in test_with_more_results_than_page_size\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLhxOm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 4, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLhxOm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 78.857, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes2RF1", "duration": 68.368, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 706, "skippedMessage": null, "name": "test_with_less_results_than_page_size", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 58.976, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 245, in test_with_less_results_than_page_size\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EUplGM\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 11, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EUplGM\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 41.683, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3582, in large_count_test\n    assert_one(cursor, \"SELECT COUNT(*) FROM test\", [9999])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V9Y2d_\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-V9Y2d_\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.971, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "expanded_list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.935, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4349, in expanded_list_item_conditional_test\n    check_applies(\"l[1] < 'zzz'\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4347, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, ['foo', 'bar', 'foobar']])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5yjLLA\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5yjLLA\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_range_ghost_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.967, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1154, in no_range_ghost_test\n    unsorted_res = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-x9AEZl\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-x9AEZl\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "list_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.861, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1447, in list_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HXDroD\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HXDroD\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "conversion_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.71, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 27.6, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1361, in set_test\n    res = cursor.execute(\"SELECT tags FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-98vyj6\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-98vyj6\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.82, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3720, in static_columns_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, None, 42, None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pj6cr8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pj6cr8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "invalid_custom_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.833, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.866, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 57, in static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-g8eW8F\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-g8eW8F\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "delete_row_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.609, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1314, in delete_row_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pgEEfo\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pgEEfo\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "static_with_empty_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.675, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4732, in static_with_empty_clustering_test\n    assert_one(cursor, \"SELECT * FROM test\", ['partition1', '', 'static value', 'value'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OEyy9W\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OEyy9W\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.366, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4577, in map_item_conditional_test\n    assert_none(cursor, \"SELECT * FROM %s\" % (table,))\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 44, in assert_none\n    assert list_res == [], \"Expected nothing from %s, but got %s\" % (query, list_res)\n\"Expected nothing from SELECT * FROM tmap, but got [[0, OrderedMapSerializedKey([(u'foo', u'bar')])]]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XOKEIr\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "Expected nothing from SELECT * FROM tmap, but got [[0, OrderedMapSerializedKey([(u'foo', u'bar')])]]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XOKEIr\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_ttl_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 37.705, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "whole_set_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.048, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4424, in whole_set_conditional_test\n    check_applies(\"s = {'bar', 'foo'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4422, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, set(['bar', 'foo'])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 37, in assert_one\n    assert list_res == [expected], \"Expected %s from %s, but got %s\" % ([expected], query, list_res)\n\"Expected [[0, set(['foo', 'bar'])]] from SELECT * FROM tset, but got []\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sH0b3e\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Expected [[0, set(['foo', 'bar'])]] from SELECT * FROM tset, but got []\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-sH0b3e\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_collection_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.1, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "composite_index_collections_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.942, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2335, in composite_index_collections_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-anPrUs\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-anPrUs\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-anPrUs] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oO8AwO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-anPrUs\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-anPrUs\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-anPrUs] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-oO8AwO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.818, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4882_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "noncomposite_static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.991, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 145, in noncomposite_static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nXbvwj\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nXbvwj\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by_reversed", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 33.13, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog_with_active_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 89.649, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "functional_test", "className": "super_counter_test.TestSuperCounterClusterRestart", "duration": 85.568, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_property_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 77.358, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 601, "skippedMessage": "3.0.0 > 2.1.x", "name": "test_rf_collapse_yaml_file_snitch", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 0.058, "errorStackTrace": null, "age": 116, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_a_single_wide_row", "className": "paging_test.TestPagingData", "duration": 52.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "static_columns_with_empty_non_static_columns_paging_test", "className": "paging_test.TestPagingData", "duration": 23.639, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_order_by", "className": "paging_test.TestPagingWithModifiers", "duration": 24.529, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "small_compressed_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 47.998, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "login_test", "className": "auth_test.TestAuth", "duration": 36.748, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "modify_and_select_auth_test", "className": "auth_test.TestAuth", "duration": 17.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superuser_can_create_users_test", "className": "auth_test.TestAuth", "duration": 0.058, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.1.x", "name": "only_superusers_can_drop_users_test", "className": "auth_test.TestAuth", "duration": 0.055, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_only_coordinator_chooses_index_for_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 29.147, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_super_remove", "className": "thrift_tests.TestMutations", "duration": 26.806, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_column_family_operations", "className": "thrift_tests.TestMutations", "duration": 7.164, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_entire_row", "className": "thrift_tests.TestMutations", "duration": 7.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_supercolumn", "className": "thrift_tests.TestMutations", "duration": 6.886, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_cf_remove_column", "className": "thrift_tests.TestMutations", "duration": 6.989, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_collation", "className": "thrift_tests.TestMutations", "duration": 6.916, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_index_scan_uuid_names", "className": "thrift_tests.TestMutations", "duration": 6.774, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert", "className": "thrift_tests.TestMutations", "duration": 6.914, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_standard_columns", "className": "thrift_tests.TestMutations", "duration": 7.041, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_super_insert", "className": "thrift_tests.TestMutations", "duration": 6.916, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slice_after_deletion", "className": "thrift_tests.TestMutations", "duration": 6.813, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_system_calls", "className": "thrift_tests.TestMutations", "duration": 6.886, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_decommission_after_drain_is_invalid", "className": "nodetool_test.TestNodetool", "duration": 85.555, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_3_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 20.507, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_rejects_bad_pass", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 17.777, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_materialized_view", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.12, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1361, in test_materialized_view\n    self.assertEqual(0, len(err), err)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"<stdin>:2:'list' object has no attribute 'has_more_pages'\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UpswTP\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "<stdin>:2:'list' object has no attribute 'has_more_pages'\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UpswTP\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_truncate", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.046, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "remove_column_ttl_with_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 16.392, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_single_column_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.508, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tombstone_size_test", "className": "deletion_test.TestDeletion", "duration": 7.99, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_udf_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "invalid_string_literals_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 6.432, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "clustering_order_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.058, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.0.x", "name": "validate_counter_regular_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "in_clause_wide_rows_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_flush_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "static_columns_with_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "composite_index_collections_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 67, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "3.0.0 > 2.0.x", "name": "compression_option_validation_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "large_clustering_in_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.109, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "blobAs_functions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.108, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "keyspace_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.107, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 0.056, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 0.056, "errorStackTrace": null, "age": 211, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 0.056, "errorStackTrace": null, "age": 211, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 506, "skippedMessage": "3.0.0 > 2.2.X", "name": "compaction_delete_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.056, "errorStackTrace": null, "age": 211, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "json_tools_test", "className": "json_tools_test.TestJson", "duration": 0.055, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "Hanging the build", "name": "contention_test_multi_iterations", "className": "paxos_tests.TestPaxos", "duration": 0.055, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 667, "skippedMessage": "3.0.0 > 2.2.X", "name": "test_mutation_v2", "className": "write_failures_test.TestWriteFailures", "duration": 0.055, "errorStackTrace": null, "age": 50, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_3_test", "className": "batch_test.TestBatch", "duration": 782.803, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_gcgs_below_threshold_should_not_print_warning_test", "className": "batch_test.TestBatch", "duration": 7.333, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "each_statement_in_batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 7.111, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "local_quorum_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 468.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_indexes_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 149.496, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_network_topology_strategy_counters", "className": "consistency_test.TestAccuracy", "duration": 125.745, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 700, "skippedMessage": null, "name": "select_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 101.477, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3263, in select_distinct_test\n    res = cursor.execute('SELECT DISTINCT pk0, pk1 FROM regular LIMIT 1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dC5X4Z\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 17, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dC5X4Z\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "empty_blob_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 94.96, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2883, in empty_blob_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DpMKs5\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 66, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-DpMKs5\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6050_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.152, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "tuple_notation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.26, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.736, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "only_pk_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.028, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1666, in only_pk_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JxwmMe\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-JxwmMe\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-JxwmMe] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_f5II3\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-JxwmMe\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-JxwmMe\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-JxwmMe] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-_f5II3\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "remove_range_slice_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.115, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1942, in remove_range_slice_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 1, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QYTNuP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 1 responses and 1 failures\" info={'failures': 1, 'received_responses': 1, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QYTNuP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 61.188, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_ttl_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 47.402, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 36.316, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 40.062, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "collection_flush_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.453, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3240, in collection_flush_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, set([2])])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K3Bs2V\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K3Bs2V\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "select_distinct_with_deletions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.984, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3303, in select_distinct_with_deletions_test\n    rows = cursor.execute('SELECT DISTINCT k FROM t1')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pstrPV\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pstrPV\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_clause_wide_rows_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.475, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "whole_map_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.874, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4503, in whole_map_conditional_test\n    check_applies(\"m = {'foo': 'bar'}\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4501, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yiuZ37\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-yiuZ37\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "more_user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.795, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3515, in more_user_types_test\n    cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7p0MHE\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-7p0MHE\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "conditional_update_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.635, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2964, in conditional_update_test\n    assert_one(cursor, \"SELECT * FROM test\", [0, 2, 'foo', None])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iHo81v\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iHo81v\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "composite_index_collections_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.083, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2335, in composite_index_collections_test\n    res = cursor.execute(\"SELECT blog_id, content FROM blogs WHERE author='foo'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2U1QOk\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-2U1QOk\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-2U1QOk] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RUFEDn\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-2U1QOk\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-2U1QOk\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-2U1QOk] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RUFEDn\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cas_simple_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.703, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.159, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ap7YgE\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ap7YgE\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sparse_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.15, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_query_2ndary_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.962, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1335, in range_query_2ndary_test\n    res = cursor.execute(\"SELECT * FROM indextest WHERE setid = 0 AND row < 1 ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-t6cTGR\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-t6cTGR\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_with_limit", "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "duration": 36.323, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "duration": 30.034, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_consistency_test", "className": "counter_tests.TestCounters", "duration": 85.236, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "contention_test_many_threads", "className": "paxos_tests.TestPaxos", "duration": 80.1, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "replica_availability_test", "className": "paxos_tests.TestPaxos", "duration": 58.419, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_deflate_to_snappy_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.479, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compaction_throughput_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 69.275, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "name": "dtcs_deletion_test", "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "duration": 0.062, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6924_dropping_ks", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 71.292, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_6285", "className": "thrift_hsha_test.ThriftHSHATest", "duration": 46.632, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_closing_connections", "className": "thrift_hsha_test.ThriftHSHATest", "duration": 28.516, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_quorum", "className": "write_failures_test.TestWriteFailures", "duration": 41.377, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "paging_test.TestPagingData", "duration": 27.302, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_partition_deletions", "className": "paging_test.TestPagingWithDeletions", "duration": 25.267, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "clustering_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 26.123, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_letter_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 22.376, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_explicit_column_order_reading", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_authenticates_correct_user", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 18.073, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:3:Unauthorized: code=2100 [Unauthorized] message=\"Only superusers can create a role with superuser status\"(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_login_allows_bad_pass_and_continued_use", "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "duration": 17.948, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_mv", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 9.755, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_float_formatting", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.41, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1012, in test_float_formatting\n    \"\"\")\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 516, in verify_output\n    assert False, \"Failed to execute cqlsh\"\n\"Failed to execute cqlsh\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pI3fzX\\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\\n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Failed to execute cqlsh\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pI3fzX\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "get_test_table_output", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 0.061, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.186, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_delete", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.364, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_1_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 22.632, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_column_ttl_with_default_ttl_test", "className": "ttl_test.TestTTL", "duration": 16.718, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "insert_ttl_has_priority_on_defaut_ttl_test", "className": "ttl_test.TestTTL", "duration": 13.63, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 7.714, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "rename_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 8.212, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 6.749, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 7.153, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_then_drop_ks", "className": "thrift_tests.TestMutations", "duration": 7.49, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiget_slice_with_compact_table", "className": "thrift_tests.TestMutations", "duration": 7.642, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_range", "className": "thrift_tests.TestMutations", "duration": 7.323, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multi_count", "className": "thrift_tests.TestMutations", "duration": 7.465, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "udt_table_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.622, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "cas_simple_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.061, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_sparse_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "ticket_5230_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "allow_filtering_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "exclusive_slice_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 714, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_function_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 3, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "alter_with_collections_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 650, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_with_deletions_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.115, "errorStackTrace": null, "age": 67, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "range_query_2ndary_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_delete_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "nan_infinity_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 685, "skippedMessage": "3.0.0 > 2.0.x", "name": "create_invalid_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 32, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "downgrade_to_compact_bug_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 685, "skippedMessage": null, "name": "basic_compound_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 810.347, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 715, in basic_compound_paging_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM %s\" % (table,)))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-64121Z\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying table test2\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Using fetch size 3\\ndtest: DEBUG: Using fetch size 5\\ndtest: DEBUG: Using fetch size 10\\ndtest: DEBUG: Using fetch size 100\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Querying table test\\ndtest: DEBUG: Using fetch size 2\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 32, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-64121Z\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying table test2\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Using fetch size 3\ndtest: DEBUG: Using fetch size 5\ndtest: DEBUG: Using fetch size 10\ndtest: DEBUG: Using fetch size 100\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Querying table test\ndtest: DEBUG: Using fetch size 2\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "test_paging_using_secondary_indexes_with_static_cols", "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "duration": 74.74, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1080, in test_paging_using_secondary_indexes_with_static_cols\n    pf = PageFetcher(future).request_all()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zyNdry\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 6, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zyNdry\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_tombstones_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 40.998, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "reversed_comparator_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.881, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sparse_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.931, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_clause_wide_rows_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.069, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "range_with_deletes_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.88, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2397, in range_with_deletes_test\n    res = cursor.execute(\"SELECT * FROM test LIMIT %d\" % (nb_keys / 2))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AcKiWY\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-AcKiWY\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "list_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.204, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_limit_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.008, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.614, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 57, in static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-A8qF_J\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-A8qF_J\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "static_with_empty_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.342, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "nan_infinity_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.782, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3690, in nan_infinity_test\n    selected = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QLwSgb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QLwSgb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_in_compact_non_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.024, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "select_key_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.885, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "rename_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 31.525, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2916, in rename_test\n    assert_one(cursor, \"SELECT foo1, foo2, foo3 FROM test\", [4, 3, 2])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L1RSzu\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-L1RSzu\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "limit_sparse_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.569, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "function_with_null_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.922, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_order_by_without_selecting_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.359, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "negative_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.992, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_4532_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.846, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_order_and_functions_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.67, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2936, in clustering_order_and_functions_test\n    cursor.execute(\"SELECT dateOf(t) FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Marob_\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Marob_\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_later_page", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 31.224, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_schema_churn_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 280.668, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "changes_to_different_nodes_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 73.106, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "dc_repair_test", "className": "repair_test.TestRepair", "duration": 191.983, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "resumable_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 136.086, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "failed_bootstap_wiped_node_can_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 95.845, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstablelevelreset_test", "className": "offline_tools_test.TestOfflineTools", "duration": 111.862, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "consistent_reads_after_bootstrap_test", "className": "consistent_bootstrap_test.TestBootstrapConsistency", "duration": 86.771, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ignore_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 85.162, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "small_segment_size_test", "className": "commitlog_test.TestCommitLog", "duration": 46.5, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_compression_error", "className": "commitlog_test.TestCommitLog", "duration": 33.431, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "die_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 20.148, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_snappy_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 80.301, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_marking_test", "className": "incremental_repair_test.TestIncRepair", "duration": 65.583, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_thrift", "className": "write_failures_test.TestWriteFailures", "duration": 59.5, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ttl_is_respected_on_delayed_replication_test", "className": "ttl_test.TestDistributedTTL", "duration": 53.556, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "delete_with_ttl_expired_test", "className": "ttl_test.TestTTL", "duration": 8.464, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_manual_rebuild_index", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 45.69, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "tombstone_failure_threshold_message_test", "className": "pushed_notifications_test.TestVariousNotifications", "duration": 27.948, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_enforcement", "className": "user_types_test.TestUserTypes", "duration": 26.957, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_type_as_clustering_col", "className": "user_types_test.TestUserTypes", "duration": 25.004, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_and_nodetool_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 25.947, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstable_deletion_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 10.2, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_async_3_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.468, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "list_users_test", "className": "auth_test.TestAuth", "duration": 17.142, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_ks_auth_test", "className": "auth_test.TestAuth", "duration": 17.418, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 16.577, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "keyspace_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 6.632, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_index_scan_expiring", "className": "thrift_tests.TestMutations", "duration": 10.004, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_super_add", "className": "thrift_tests.TestMutations", "duration": 7.169, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_remove_expiring", "className": "thrift_tests.TestMutations", "duration": 6.763, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_bad_batch_calls", "className": "thrift_tests.TestMutations", "duration": 6.674, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_empty_range", "className": "thrift_tests.TestMutations", "duration": 6.853, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_insertions_and_deletions", "className": "thrift_tests.TestMutations", "duration": 7.028, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cas", "className": "thrift_tests.TestMutations", "duration": 6.992, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "test_scrub_static_table", "className": "scrub_test.TestScrubIndexes", "duration": 7.997, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 204, in test_scrub_static_table\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RJDkX5\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RJDkX5\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_eat_glass", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.171, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 358, in test_eat_glass\n    self.verify_glass(node1)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 234, in verify_glass\n    self.assertEquals(output.count('\u041c\u043e\u0436\u0430\u043c \u0434\u0430 \u0458\u0430\u0434\u0430\u043c \u0441\u0442\u0430\u043a\u043b\u043e, \u0430 \u043d\u0435 \u043c\u0435 \u0448\u0442\u0435\u0442\u0430.'), 16)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'0 != 16\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UwwwIl\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "0 != 16\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-UwwwIl\n--------------------- >> end captured logging << ---------------------", "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_uuid", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.251, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wrong_number_of_columns", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 6.815, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  <stdin>:2:(EE)  list index out of range(EE)  <stdin>:2:Aborting import at record #1. Previously inserted records are still present, and some records after that may be present as well.(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_undefined_as_null_indicator", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.186, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "batch_uses_proper_timestamp_test", "className": "batch_test.TestBatch", "duration": 6.868, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "unlogged_batch_accepts_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 6.85, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "batch_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.06, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "list_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "undefined_column_handling_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_4532_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "edge_2i_on_complex_pk_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 712, "skippedMessage": "3.0.0 > 2.0.x", "name": "map_item_conditional_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 5, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 713, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_6115_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 4, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 594, "skippedMessage": "3.0.0 > 2.0.x", "name": "double_with_npe_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 123, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "refuse_in_with_indexes_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.111, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 592, "skippedMessage": "3.0.0 > 2.0.x", "name": "conditional_ddl_table_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 125, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "delete_row_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 591, "skippedMessage": "3.0.0 > 2.0.x", "name": "keyspace_creation_options_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 126, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 651, "skippedMessage": "3.0.0 > 2.0.x", "name": "row_existence_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.112, "errorStackTrace": null, "age": 66, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "map_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 811.264, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1406, in map_test\n    res = cursor.execute(\"SELECT m FROM user\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-73AOPy\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 65, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-73AOPy\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "bug_5240_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 100.662, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2784, in bug_5240_test\n    res = cursor.execute(\"select * from test where severity = 3 and interval = 't' and seq =1;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OepkQx\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OepkQx\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 41.738, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "invalid_custom_timestamp_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.767, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "truncate_clean_cache_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.077, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cas_and_compact_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.537, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.656, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "select_with_alias_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.545, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3136, in select_with_alias_test\n    res = cursor.execute('SELECT count(*) AS user_count FROM users')\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-br6dvZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-br6dvZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug_4532_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 32.858, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "date_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.909, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_query_isolation", "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes3RF3", "duration": 86.103, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "duration": 63.651, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_with_no_results", "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "duration": 58.233, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 218, in test_with_no_results\n    pf = PageFetcher(future)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 72, in __init__\n    self.wait(seconds=30)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 132, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u94WE9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-u94WE9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 706, "skippedMessage": null, "name": "bug_6327_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 35.038, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3546, in bug_6327_test\n    assert_one(cursor, \"SELECT v FROM test WHERE v IN (1, 0) ALLOW FILTERING\", [0])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jO2vVO\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 11, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-jO2vVO\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "static_columns_with_distinct_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.704, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3957, in static_columns_with_distinct_test\n    assert_all(cursor, \"SELECT k, s FROM test\", [[1, None], [1, None]])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 49, in assert_all\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QO3TJm\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QO3TJm\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "clustering_indexing_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.971, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2694, in clustering_indexing_test\n    res = cursor.execute(\"SELECT v1 FROM posts WHERE time = 1\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_2pJb\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-K_2pJb\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 651, "skippedMessage": null, "name": "empty_blob_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.614, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2883, in empty_blob_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OR8HCJ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 66, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-OR8HCJ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.21, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "no_clustering_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.475, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1687, in no_clustering_test\n    results = rows_to_list(cursor.execute(\"SELECT * FROM test\"))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RvyTYu\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-RvyTYu\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "reversed_compact_multikey_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.012, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_4882_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.697, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "multi_list_set_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.714, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "cql3_insert_thrift_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 28.553, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1590, in cql3_insert_thrift_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wvy9iZ\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wvy9iZ\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiple_cell_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 34.862, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "test_compactionstats", "className": "jmx_test.TestJMX", "duration": 322.798, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 705, "skippedMessage": null, "name": "create_lots_of_alters_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 229.627, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 188, in create_lots_of_alters_concurrently_test\n    self.assertEqual(510, column_ct)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'510 != 507\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ynlmuC\\ndtest: DEBUG: executing 500 alters\\ndtest: DEBUG: waiting for alters to propagate\\n--------------------- >> end captured logging << ---------------------'", "age": 12, "errorDetails": "510 != 507\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ynlmuC\ndtest: DEBUG: executing 500 alters\ndtest: DEBUG: waiting for alters to propagate\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_lots_of_mv_concurrently_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 134.486, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "restart_node_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 102.178, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "restart_node_localhost_test", "className": "pushed_notifications_test.TestPushedNotifications", "duration": 77.796, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "node1: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9160)\n       binary=('localhost', 9161)\n       storage=('127.0.0.1', 7000)\n       jmx_port=7100\n       remote_debug_port=0\n       initial_token=-9223372036854775808\nnode2: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9162)\n       binary=('localhost', 9163)\n       storage=('127.0.0.2', 7000)\n       jmx_port=7200\n       remote_debug_port=0\n       initial_token=0\n", "skipped": false, "stderr": "/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9161 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9163 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n"}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_archive_commitlog_point_in_time_with_active_commitlog", "className": "snapshot_test.TestArchiveCommitlog", "duration": 89.829, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_map_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 78.426, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_set_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 64.52, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "bug3367_test", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 6.933, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multi_index_filtering_query", "className": "secondary_indexes_test.TestSecondaryIndexes", "duration": 6.703, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy", "className": "consistency_test.TestAvailability", "duration": 55.932, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "acknowledged_by_batchlog_not_set_when_batchlog_write_fails_test", "className": "batch_test.TestBatch", "duration": 45.317, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "counter_batch_rejects_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.076, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 41.33, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_node_unavailabe_during_paging", "className": "paging_test.TestPagingDatasetChanges", "duration": 39.148, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "putget_test", "className": "putget_test.TestPutGet", "duration": 33.901, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_copy_to", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 28.061, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  (EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_drop_index", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.48, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_create_keyspace", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.087, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_quoted_column_names_reading_dont_specify_names", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.405, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_batch_remove", "className": "thrift_tests.TestMutations", "duration": 27.075, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_update_expiring", "className": "thrift_tests.TestMutations", "duration": 8.351, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_integer_remove", "className": "thrift_tests.TestMutations", "duration": 6.835, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wrapped_range_slices", "className": "thrift_tests.TestMutations", "duration": 7.211, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_index_scan", "className": "thrift_tests.TestMutations", "duration": 6.841, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert_ttl", "className": "thrift_tests.TestMutations", "duration": 6.835, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_partitioner", "className": "thrift_tests.TestMutations", "duration": 6.592, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_table_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 27.747, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "create_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 25.308, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_alter_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 22.237, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "range_slice_test", "className": "cql_tests.MiscellaneousCQLTester", "duration": 20.039, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "hintedhandoff_dc_disabled_test", "className": "hintedhandoff_test.TestHintedHandoffConfig", "duration": 17.949, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 131, in hintedhandoff_dc_disabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KoyPgr\\n--------------------- >> end captured logging << ---------------------\"", "age": 5, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KoyPgr\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "type_auth_test", "className": "auth_test.TestAuth", "duration": 17.446, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cant_create_existing_user_test", "className": "auth_test.TestAuth", "duration": 16.761, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "gc_test", "className": "deletion_test.TestDeletion", "duration": 11.031, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_scrub_with_UDT", "className": "scrub_test.TestScrub", "duration": 9.548, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "creating_and_dropping_uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.422, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "drop_column_queries_test", "className": "schema_test.TestSchema", "duration": 7.206, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "compression_chunk_length_test", "className": "configuration_test.TestConfiguration", "duration": 6.537, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 701, "skippedMessage": "3.0.0 > 2.0.x", "name": "bug_5732_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.06, "errorStackTrace": null, "age": 16, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "compact_metadata_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 648, "skippedMessage": "3.0.0 > 2.0.x", "name": "null_support_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 69, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "collection_and_regular_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "map_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "float_with_exponent_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "reversed_comparator_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "order_by_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "indexes_composite_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "function_with_null_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 700, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_distinct_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.114, "errorStackTrace": null, "age": 17, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 715, "skippedMessage": "3.0.0 > 2.0.x", "name": "invalid_string_literals_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 2, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 716, "skippedMessage": "3.0.0 > 2.0.x", "name": "limit_multiget_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 1, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 652, "skippedMessage": "3.0.0 > 2.0.x", "name": "select_with_alias_test", "className": "deprecated_cql_tests.TestCQL", "duration": 0.113, "errorStackTrace": null, "age": 65, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cfhistograms_test", "className": "jmx_test.TestJMX", "duration": 2936.914, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_tuple_indexes", "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "duration": 25.912, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_number_delimiter", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 22.105, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_read_invalid_float", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.411, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_explicit_column_order_writing", "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "duration": 7.24, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_list_queries", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 18.137, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 544, in test_list_queries\n    \"\"\")\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 516, in verify_output\n    assert False, \"Failed to execute cqlsh\"\n\"Failed to execute cqlsh\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FB8Ffn\\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\\n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Failed to execute cqlsh\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-FB8Ffn\ndtest: DEBUG: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cls", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.604, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "force_repair_range_async_2_test", "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "duration": 21.337, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "conditional_create_drop_user_test", "className": "auth_test.TestAuth", "duration": 16.728, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "only_superuser_alters_superuser_status_test", "className": "auth_test.TestAuth", "duration": 16.967, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_basic_snapshot_and_restore", "className": "snapshot_test.TestSnapshot", "duration": 13.491, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "simple_schema_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 9.945, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 1226, in simple_schema_test\n    run_func_docstring(tester=self, test_func=self.simple_schema_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 33, in simple_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest simple_schema_test[3]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 45, in simple_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT * FROM primitive_type_test\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest simple_schema_test[4]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT * FROM primitive_type_test\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 68, in simple_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest simple_schema_test[7]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 80, in simple_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT JSON col15, col1, col3, col13, col11, col2, col4 FROM primitive_type_test WHERE key1 in (\\'foo\\', \\'bar\\')\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest simple_schema_test[8]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT JSON col15, col1, col3, col13, col11, col2, col4 FROM primitive_type_test WHERE key1 in (\\'foo\\', \\'bar\\')\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 92, in simple_schema_test\\nFailed example:\\n    cqlsh_print(\"SELECT * FROM primitive_type_test\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest simple_schema_test[9]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT * FROM primitive_type_test\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dCEnU0\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 33, in simple_schema_test\nFailed example:\n    cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest simple_schema_test[3]>\", line 1, in <module>\n        cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 45, in simple_schema_test\nFailed example:\n    cqlsh_print(\"SELECT * FROM primitive_type_test\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest simple_schema_test[4]>\", line 1, in <module>\n        cqlsh_print(\"SELECT * FROM primitive_type_test\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 68, in simple_schema_test\nFailed example:\n    cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest simple_schema_test[7]>\", line 1, in <module>\n        cqlsh_print(\"SELECT JSON * FROM primitive_type_test\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 80, in simple_schema_test\nFailed example:\n    cqlsh_print(\"SELECT JSON col15, col1, col3, col13, col11, col2, col4 FROM primitive_type_test WHERE key1 in ('foo', 'bar')\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest simple_schema_test[8]>\", line 1, in <module>\n        cqlsh_print(\"SELECT JSON col15, col1, col3, col13, col11, col2, col4 FROM primitive_type_test WHERE key1 in ('foo', 'bar')\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 92, in simple_schema_test\nFailed example:\n    cqlsh_print(\"SELECT * FROM primitive_type_test\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest simple_schema_test[9]>\", line 1, in <module>\n        cqlsh_print(\"SELECT * FROM primitive_type_test\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-dCEnU0\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   5 of  10 in simple_schema_test\n***Test Failed*** 5 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count_around_page_size", "className": "thrift_tests.TestMutations", "duration": 9.131, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_batch_mutate_remove_super_columns_with_standard_under", "className": "thrift_tests.TestMutations", "duration": 7.376, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_system_keyspace_operations", "className": "thrift_tests.TestMutations", "duration": 7.709, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_count_paging", "className": "thrift_tests.TestMutations", "duration": 7.179, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_range_slices_tokens", "className": "thrift_tests.TestMutations", "duration": 7.331, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_incr_decr_standard_batch_add", "className": "thrift_tests.TestMutations", "duration": 7.25, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_counter_get_slice_super_range", "className": "thrift_tests.TestMutations", "duration": 7.23, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe", "className": "thrift_tests.TestMutations", "duration": 7.458, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_describe_ring_on_invalid_keyspace", "className": "thrift_tests.TestMutations", "duration": 6.965, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_multiget_slice", "className": "thrift_tests.TestMutations", "duration": 7.507, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 712, "skippedMessage": null, "name": "compression_cql_options_test", "className": "compression_test.TestCompression", "duration": 8.013, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 96, in compression_cql_options_test\n    sstables = self.flush('compression_opts_table')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9Fv2du\\n--------------------- >> end captured logging << ---------------------'", "age": 5, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9Fv2du\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_accepts_regular_mutations_test", "className": "batch_test.TestBatch", "duration": 7.388, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "statements_test", "className": "cql_tests.StorageProxyCQLTester", "duration": 6.857, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_compatibility_1_test", "className": "batch_test.TestBatch", "duration": 757.037, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "logged_batch_gcgs_below_threshold_single_table_test", "className": "batch_test.TestBatch", "duration": 7.517, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "short_read_test", "className": "consistency_test.TestConsistency", "duration": 429.683, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_simple_strategy_counters", "className": "consistency_test.TestAccuracy", "duration": 43.017, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "decommission_node_test", "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "duration": 150.843, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 475, in decommission_node_test\n    self.validate_schema_consistent(node1)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 127, in validate_schema_consistent\n    assert num_schemas == 1, \"There were multiple schema versions: \" + pprint.pformat(schemas)\n\"There were multiple schema versions: '14d17582-1213-3181-96f8-64827a5173e4: [127.0.0.1]\\\\n\\\\n\\\\t\\\\tUNREACHABLE: [127.0.0.2]'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-67eXwA\\ndtest: DEBUG: decommission_node_test()\\ndtest: DEBUG: prepare_for_changes() ns1\\ndtest: DEBUG: validate_schema_consistent() node1\\n--------------------- >> end captured logging << ---------------------\"", "age": 68, "errorDetails": "There were multiple schema versions: '14d17582-1213-3181-96f8-64827a5173e4: [127.0.0.1]\\n\\n\\t\\tUNREACHABLE: [127.0.0.2]'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-67eXwA\ndtest: DEBUG: decommission_node_test()\ndtest: DEBUG: prepare_for_changes() ns1\ndtest: DEBUG: validate_schema_consistent() node1\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "simple_parallel_repair_test", "className": "repair_test.TestRepair", "duration": 134.133, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "shutdown_wiped_node_cannot_join_test", "className": "bootstrap_test.TestBootstrap", "duration": 99.278, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "manual_bootstrap_test", "className": "bootstrap_test.TestBootstrap", "duration": 50.124, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 649, "skippedMessage": null, "name": "simple_tuple_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 145.981, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 394, in simple_tuple_query_test\n    res = cursor.execute(\"SELECT * FROM bard WHERE b=0 AND (c, d, e) > (1, 1, 1) ALLOW FILTERING;\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n\"errors={}, last_host=127.0.0.2\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-koEaao\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Retrying read after timeout. Attempt #0\\ndtest: DEBUG: Retrying read after timeout. Attempt #1\\ndtest: DEBUG: Retrying read after timeout. Attempt #2\\ndtest: DEBUG: Retrying read after timeout. Attempt #3\\ndtest: DEBUG: Retrying read after timeout. Attempt #4\\n--------------------- >> end captured logging << ---------------------\"", "age": 68, "errorDetails": "errors={}, last_host=127.0.0.2\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-koEaao\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: Exception while downloading binary:2.2.3; falling back to source\ndtest: DEBUG: Source identifier: git:cassandra-2.2.3\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Retrying read after timeout. Attempt #0\ndtest: DEBUG: Retrying read after timeout. Attempt #1\ndtest: DEBUG: Retrying read after timeout. Attempt #2\ndtest: DEBUG: Retrying read after timeout. Attempt #3\ndtest: DEBUG: Retrying read after timeout. Attempt #4\n--------------------- >> end captured logging << ---------------------", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 711, "skippedMessage": null, "name": "large_count_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 58.447, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3582, in large_count_test\n    assert_one(cursor, \"SELECT COUNT(*) FROM test\", [9999])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aCGD8e\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 6, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-aCGD8e\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "range_query_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.717, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 650, "skippedMessage": null, "name": "token_range_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 34.436, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1061, in token_range_test\n    rows = cursor.execute(\"SELECT k FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jb3akp\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 67, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Jb3akp\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "function_and_reverse_type_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.374, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "collection_function_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.44, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "bug_6115_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 35.189, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "undefined_column_handling_test", "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "duration": 33.247, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 661, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1200, in undefined_column_handling_test\n    res = cursor.execute(\"SELECT v2 FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 2, \\'required_responses\\': 3, \\'consistency\\': \\'ALL\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eUD9F6\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eUD9F6\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eUD9F6] directory\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1XJzgG\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 2 responses and 1 failures\" info={'failures': 1, 'received_responses': 2, 'required_responses': 3, 'consistency': 'ALL'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-eUD9F6\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-eUD9F6\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-eUD9F6] directory\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1XJzgG\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cell_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 70.792, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_row_TTL_expiry_during_paging", "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "duration": 68.106, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "timeuuid_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 37.057, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2605, in timeuuid_test\n    res = cursor.execute(\"SELECT * FROM test\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U_XY3q\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-U_XY3q\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "expanded_map_item_conditional_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 33.318, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4618, in expanded_map_item_conditional_test\n    check_applies(\"m['xxx'] = null\")\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 4616, in check_applies\n    assert_one(cursor, \"SELECT * FROM %s\" % (table,), [0, {'foo': 'bar'}])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SLKtFe\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Testing normal maps\\ndtest: DEBUG: Testing frozen maps\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Testing normal maps\\n--------------------- >> end captured logging << ---------------------'", "age": 2, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SLKtFe\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Testing normal maps\ndtest: DEBUG: Testing frozen maps\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Testing normal maps\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "indexes_composite_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 32.011, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 1972, in indexes_composite_test\n    res = cursor.execute(\"SELECT blog_id, timestamp FROM test WHERE author = 'bob'\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wV2CdN\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-wV2CdN\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "multi_in_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.215, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2436, in multi_in_test\n    self.__multi_in(False)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 2487, in __multi_in\n    res = cursor.execute(\"select zipcode from zipcodes\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cCInI6\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-cCInI6\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "user_types_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.856, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "order_by_validation_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.312, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "in_with_desc_order_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.149, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "ticket_5230_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.58, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 652, "skippedMessage": null, "name": "noncomposite_static_cf_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.046, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 145, in noncomposite_static_cf_test\n    res = cursor.execute(\"SELECT * FROM users\")\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MuS8v8\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 65, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-MuS8v8\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 713, "skippedMessage": null, "name": "static_columns_cas_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 29.236, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/cql_tests.py\", line 3790, in static_columns_cas_test\n    assert_one(cursor, \"SELECT * FROM test\", [1, 'foo', 1, 'foo'])\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 35, in assert_one\n    res = session.execute(simple_query)\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={\\'failures\\': 1, \\'received_responses\\': 0, \\'required_responses\\': 1, \\'consistency\\': \\'ONE\\'}\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bHbkqn\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------'", "age": 4, "errorDetails": "code=1300 [Replica(s) failed to execute read] message=\"Operation failed - received 0 responses and 1 failures\" info={'failures': 1, 'received_responses': 0, 'required_responses': 1, 'consistency': 'ONE'}\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-bHbkqn\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "truncate_clean_cache_test", "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "duration": 30.765, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_single_row_deletions", "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "duration": 36.9, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FAILED", "failedSince": 715, "skippedMessage": null, "name": "static_columns_paging_test", "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "duration": 28.536, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 860, in static_columns_paging_test\n    self.assertEqual([0] * 4 + [1] * 4 + [2] * 4 + [3] * 4, sorted([r.a for r in results]))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 742, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 724, in assertSequenceEqual\n    self.fail(msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 410, in fail\n    raise self.failureException(msg)\n\"Lists differ: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2,... != [0, 1, 1, 1, 1, 2, 2, 2, 2, 3,...\\n\\nFirst differing element 1:\\n0\\n1\\n\\nFirst list contains 3 additional elements.\\nFirst extra element 13:\\n3\\n\\n- [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\\n?     ---------\\n\\n+ [0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pTy3lT\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\n--------------------- >> end captured logging << ---------------------\"", "age": 2, "errorDetails": "Lists differ: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2,... != [0, 1, 1, 1, 1, 2, 2, 2, 2, 3,...\n\nFirst differing element 1:\n0\n1\n\nFirst list contains 3 additional elements.\nFirst extra element 13:\n3\n\n- [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\n?     ---------\n\n+ [0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-pTy3lT\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\n--------------------- >> end captured logging << ---------------------", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_rf_expand_gossiping_property_file_snitch_multi_dc", "className": "replication_test.SnitchConfigurationUpdateTest", "duration": 91.647, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_deflate_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 80.822, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "sstableloader_compression_none_to_none_test", "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "duration": 81.166, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_mutation_v4", "className": "write_failures_test.TestWriteFailures", "duration": 58.444, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "data_size_test", "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "duration": 47.346, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "disable_autocompaction_nodetool_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 23.9, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "large_compaction_warning_test", "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "duration": 18.601, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "FIXED", "failedSince": 0, "skippedMessage": null, "name": "allow_filtering_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 39.95, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "populate_mv_after_insert_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 35.505, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "query_all_new_column_test", "className": "materialized_views_test.TestMaterializedViews", "duration": 27.253, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_wide_rows", "className": "wide_rows_test.TestWideRows", "duration": 34.424, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_data_change_impacting_earlier_page", "className": "paging_test.TestPagingDatasetChanges", "duration": 26.524, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "stop_failure_policy_test", "className": "commitlog_test.TestCommitLog", "duration": 22.415, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "grant_revoke_validation_test", "className": "auth_test.TestAuth", "duration": 16.955, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "SKIPPED", "failedSince": 563, "skippedMessage": "This test is only designed to work with 2.0 and 2.1 right now", "name": "test_friendly_unrecognized_table_handling", "className": "mixed_version_test.TestSchemaChanges", "duration": 17.006, "errorStackTrace": null, "age": 154, "errorDetails": null, "stdout": null, "skipped": true, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "cfid_test", "className": "cfid_test.TestCFID", "duration": 15.127, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "update_multiple_columns_ttl_test", "className": "ttl_test.TestTTL", "duration": 11.144, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "delete_using_pkey_json_test", "className": "json_test.FromJsonDeleteTests", "duration": 9.306, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 1114, in delete_using_pkey_json_test\n    run_func_docstring(tester=self, test_func=self.delete_using_pkey_json_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 22, in delete_using_pkey_json_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT * FROM person_info WHERE name = fromJson(\\'{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}\\')\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest delete_using_pkey_json_test[3]>\", line 3, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 41, in delete_using_pkey_json_test\\nFailed example:\\n    cqlsh_print(\"SELECT COUNT(*) from person_info\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest delete_using_pkey_json_test[5]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT COUNT(*) from person_info\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ycw4fR\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 22, in delete_using_pkey_json_test\nFailed example:\n    cqlsh_print('''\n    SELECT * FROM person_info WHERE name = fromJson('{\"first\":\"test\", \"middle\":\"guy\", \"last\":\"jones\"}')\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest delete_using_pkey_json_test[3]>\", line 3, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 41, in delete_using_pkey_json_test\nFailed example:\n    cqlsh_print(\"SELECT COUNT(*) from person_info\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest delete_using_pkey_json_test[5]>\", line 1, in <module>\n        cqlsh_print(\"SELECT COUNT(*) from person_info\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ycw4fR\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   2 of   6 in delete_using_pkey_json_test\n***Test Failed*** 2 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "basic_data_types_test", "className": "json_test.FromJsonInsertTests", "duration": 8.431, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 897, in basic_data_types_test\n    run_func_docstring(tester=self, test_func=self.basic_data_types_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 32, in basic_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15\\n    FROM primitive_type_test WHERE key1 = \\'test\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest basic_data_types_test[2]>\", line 4, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n**********************************************************************\\nLine 46, in basic_data_types_test\\nFailed example:\\n    cqlsh_print(\\'\\'\\'\\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\\n    FROM primitive_type_test WHERE key1 = \\'test\\'\\n    \\'\\'\\')\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest basic_data_types_test[3]>\", line 6, in <module>\\n        \\'\\'\\')\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1pTb9G\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 32, in basic_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15\n    FROM primitive_type_test WHERE key1 = 'test'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest basic_data_types_test[2]>\", line 4, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:5:'list' object has no attribute 'has_more_pages'\n\n**********************************************************************\nLine 46, in basic_data_types_test\nFailed example:\n    cqlsh_print('''\n    SELECT toJson(col1), toJson(col2), toJson(col3), toJson(col4), toJson(col5),\n           toJson(col6), toJson(col7), toJson(col8), toJson(col9), toJson(col10),\n           toJson(col11),toJson(col12),toJson(col13),toJson(col14),toJson(col15)\n    FROM primitive_type_test WHERE key1 = 'test'\n    ''')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest basic_data_types_test[3]>\", line 6, in <module>\n        ''')\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:7:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1pTb9G\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   2 of   4 in basic_data_types_test\n***Test Failed*** 2 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "null_value_test", "className": "json_test.JsonFullRowInsertSelect", "duration": 8.01, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 1301, in null_value_test\n    run_func_docstring(tester=self, test_func=self.null_value_test)\n  File \"/home/automaton/cassandra-dtest/json_test.py\", line 181, in run_func_docstring\n    raise RuntimeError(\"Doctest failed! Captured output:\\n{}\".format(test_output_capturer.content))\n'Doctest failed! Captured output:\\n**********************************************************************\\nLine 31, in null_value_test\\nFailed example:\\n    cqlsh_print(\"SELECT * FROM primitive_type_test WHERE key1 = \\'foo\\'\")\\nException raised:\\n    Traceback (most recent call last):\\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\\n        compileflags, 1) in test.globs\\n      File \"<doctest null_value_test[2]>\", line 1, in <module>\\n        cqlsh_print(\"SELECT * FROM primitive_type_test WHERE key1 = \\'foo\\'\")\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\\n        output = cqlsh(cmds, supress_err=supress_err)\\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:\\'list\\' object has no attribute \\'has_more_pages\\'\\n\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BLnl3D\\n--------------------- >> end captured logging << ---------------------'", "age": 1, "errorDetails": "Doctest failed! Captured output:\n**********************************************************************\nLine 31, in null_value_test\nFailed example:\n    cqlsh_print(\"SELECT * FROM primitive_type_test WHERE key1 = 'foo'\")\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib/python2.7/doctest.py\", line 1315, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest null_value_test[2]>\", line 1, in <module>\n        cqlsh_print(\"SELECT * FROM primitive_type_test WHERE key1 = 'foo'\")\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 97, in cqlsh_print\n        output = cqlsh(cmds, supress_err=supress_err)\n      File \"/home/automaton/cassandra-dtest/json_test.py\", line 87, in cqlsh\n        raise RuntimeError(\"Unexpected cqlsh error: {}\".format(err))\n    RuntimeError: Unexpected cqlsh error: <stdin>:2:'list' object has no attribute 'has_more_pages'\n\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BLnl3D\n--------------------- >> end captured logging << ---------------------", "stdout": "**********************************************************************\n1 items had failures:\n   1 of   3 in null_value_test\n***Test Failed*** 1 failures.\n", "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_update", "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "duration": 7.455, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": "(EE)  ", "skipped": false, "stderr": null}, {"testActions": [], "status": "REGRESSION", "failedSince": 716, "skippedMessage": null, "name": "test_tracing", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 7.446, "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 1226, in test_tracing\n    Tracing session:\"\"\")\n  File \"/home/automaton/cassandra-dtest/cqlsh_tests/cqlsh_tests.py\", line 516, in verify_output\n    assert False, \"Failed to execute cqlsh\"\n\"Failed to execute cqlsh\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5PI82K\\ndtest: DEBUG: <stdin>:4:'list' object has no attribute 'has_more_pages'\\n\\n--------------------- >> end captured logging << ---------------------\"", "age": 1, "errorDetails": "Failed to execute cqlsh\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-5PI82K\ndtest: DEBUG: <stdin>:4:'list' object has no attribute 'has_more_pages'\n\n--------------------- >> end captured logging << ---------------------", "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_clear", "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "duration": 6.971, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "uda_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 7.508, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "static_column_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.768, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "collection_table_datatype_test", "className": "schema_metadata_test.TestSchemaMetadata", "duration": 6.679, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_get_slice_by_names", "className": "thrift_tests.TestMutations", "duration": 7.607, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_range_with_remove_cf", "className": "thrift_tests.TestMutations", "duration": 7.227, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_insert_blocking", "className": "thrift_tests.TestMutations", "duration": 7.471, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_empty_slice", "className": "thrift_tests.TestMutations", "duration": 7.155, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_cf_remove_column", "className": "thrift_tests.TestMutations", "duration": 7.171, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}, {"testActions": [], "status": "PASSED", "failedSince": 0, "skippedMessage": null, "name": "test_invalid_ks_names", "className": "thrift_tests.TestMutations", "duration": 7.086, "errorStackTrace": null, "age": 0, "errorDetails": null, "stdout": null, "skipped": false, "stderr": null}], "stdout": null, "id": null, "name": "nosetests", "stderr": null}]}}
