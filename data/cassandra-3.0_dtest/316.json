{"baseurl": "http://cassci.datastax.com/job/cassandra-3.0_dtest/316/testReport/api/python", "_data": {"skipCount": 208, "passCount": 933, "suites": [{"stderr": null, "stdout": null, "cases": [{"failedSince": 0, "skipped": false, "age": 0, "className": "jmx_test.TestJMX", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 894.964, "name": "netstats_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 110.664, "name": "upgrade_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 91.132, "name": "read_from_bootstrapped_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 84.333, "name": "add_node_after_mv_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 47.365, "name": "ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.131, "name": "allow_filtering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 134.908, "name": "empty_vs_gcable_parallel_repair_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "simple_repair_order_preserving_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "repair_test.TestRepairDataSystemTable", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "hangs CI", "duration": 0.0, "name": "initial_empty_repair_tables_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 189.265, "name": "test_undefined_page_size_default", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 50.922, "name": "test_ttl_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.852, "name": "test_single_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.831, "name": "noncomposite_static_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.4, "name": "range_query_2ndary_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.914, "name": "range_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.407, "name": "indexed_with_eq_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.241, "name": "simple_tuple_query_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.805, "name": "static_cf_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_list_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_set_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_set_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_map_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_list_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_map_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.928, "name": "bug_8558_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.787, "name": "expanded_map_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.826, "name": "indexes_composite_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.705, "name": "only_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.757, "name": "no_range_ghost_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.861, "name": "range_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.406, "name": "no_clustering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.56, "name": "static_with_limit_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.544, "name": "exclusive_slice_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_set_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_map_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_list_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_map_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_list_key_single_row_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7396", "duration": 0.0, "name": "select_set_key_multi_row_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 68.781, "name": "test_mutation_any", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 61.877, "name": "test_thrift", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 51.867, "name": "compaction_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "hangs CI", "duration": 0.0, "name": "multiple_subsequent_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "multidc_putget_test.TestMultiDCPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 42.752, "name": "putget_2dc_rf2_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "internode_ssl_test.TestInternodeSSL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.794, "name": "putget_with_internode_ssl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "nodetool_test.TestNodetool", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.967, "name": "test_correct_dc_rack_in_nodetool_info", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "nodetool_test.TestNodetool", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.821, "name": "test_decommission_after_drain_is_invalid", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.752, "name": "putget_deflate_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "wide_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.529, "name": "disable_autocompaction_schema_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 23.55, "name": "disable_autocompaction_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.652, "name": "disable_autocompaction_alter_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.002, "name": "logged_batch_doesnt_throw_uae_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.078, "name": "test_paging_using_secondary_indexes", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 6237", "duration": 0.0, "name": "test_multiple_row_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.638, "name": "test_nested_type_dropping", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7423", "duration": 0.0, "name": "udt_subfield_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.279, "name": "test_incr_decr_standard_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.165, "name": "test_get_slice_range", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.315, "name": "test_batch_insert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestTruncate", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.503, "name": "test_truncate", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "hintedhandoff_test.TestHintedHandoffConfig", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ytISsl\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 18.152, "name": "hintedhandoff_dc_disabled_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 131, in hintedhandoff_dc_disabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-ytISsl\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 268, "skipped": true, "age": 49, "className": "hintedhandoff_test.TestHintedHandoff", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "hintedhandoff_decom_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 17.786, "name": "test_login_rejects_bad_pass", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.671, "name": "test_explicit_column_order_reading", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.354, "name": "test_read_invalid_text", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.663, "name": "select_element_inside_udt_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.827, "name": "test_with_empty_values", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 0.802, "name": "test_pep8_compliance", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.609, "name": "test_batch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.292, "name": "only_superuser_alters_superuser_status_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 14.824, "name": "collection_map_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 12.564, "name": "test_commitlog_replay_on_startup", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "scrub_test.TestScrub", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.79, "name": "test_scrub_with_UDT", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonSelectTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.976, "name": "select_using_secondary_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.JsonFullRowInsertSelect", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.985, "name": "null_value_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.MiscellaneousCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.042, "name": "rename_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.MiscellaneousCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.535, "name": "prepared_statement_invalidation_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "cql_tests.AbortedQueriesTester", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7392", "duration": 0.0, "name": "local_query_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "cql_tests.AbortedQueriesTester", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7392", "duration": 0.0, "name": "materialized_view_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "cql_tests.AbortedQueriesTester", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7392", "duration": 0.0, "name": "remote_query_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "cql_tests.AbortedQueriesTester", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7392", "duration": 0.0, "name": "index_query_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "prepared_statements_test.TestPreparedStatements", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "Number of matching rows: 10\nExecuting prepared statement with dropped index...\n", "errorDetails": null, "skippedMessage": null, "duration": 7.378, "name": "dropped_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.51, "name": "creating_and_dropping_udf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.787, "name": "compact_storage_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "configuration_test.TestConfiguration", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.893, "name": "compression_chunk_length_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.057, "name": "static_columns_with_distinct_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "create_invalid_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "tuple_notation_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "select_with_alias_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "collection_compact_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "rename_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "row_existence_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "empty_in_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "update_type_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "date_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test3", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test7", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test6", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test8", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test9", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test4", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test2", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 7281", "duration": 0.0, "name": "tuple_query_mixed_order_columns_test5", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "paxos_tests.TestPaxos", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Hanging the build", "duration": 0.057, "name": "contention_test_multi_iterations", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "paxos_tests.TestPaxos", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "cluster_availability_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.058, "name": "test_rf_expand_yaml_file_snitch", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "replication_test.ReplicationTest", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "simple_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "replication_test.ReplicationTest", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "network_topology_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "decommissioned_node_cant_rejoin_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "movement_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "decommission_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "move_single_node_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "index_summary_upgrade_test.TestUpgradeIndexSummary", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require Fixes to ccm around upgrades", "duration": 0.0, "name": "test_upgrade_index_summary", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "pushed_notifications_test.TestPushedNotifications", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "move_single_node_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "pushed_notifications_test.TestPushedNotifications", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "move_single_node_localhost_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "pushed_notifications_test.TestPushedNotifications", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "require 9961", "duration": 0.0, "name": "schema_changes_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "consistent_bootstrap_test.TestBootstrapConsistency", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Test disabled for vnodes", "duration": 0.0, "name": "consistent_reads_after_move_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "test hangs: see CASSANDRA-9831", "duration": 0.0, "name": "resumable_replace_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "jmx_test.TestJMX", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 297.016, "name": "test_compactionstats", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "errorDetails": null, "skippedMessage": null, "duration": 214.062, "name": "logged_batch_compatibility_5_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.814, "name": "logged_batch_throws_uae_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.171, "name": "each_statement_in_batch_uses_proper_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 96.211, "name": "refuse_in_with_indexes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.777, "name": "composite_partition_key_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.76, "name": "static_columns_with_distinct_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.031, "name": "bug_6069_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.987, "name": "tuple_notation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.665, "name": "undefined_column_handling_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.772, "name": "batch_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.253, "name": "select_count_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.799, "name": "multi_in_compact_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.233, "name": "boolean_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.496, "name": "collection_function_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 61.698, "name": "test_row_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4,\n...[truncated 4100 chars]...\n1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "errorDetails": null, "skippedMessage": null, "duration": 37.967, "name": "basic_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.536, "name": "test_failure_threshold_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.979, "name": "truncate_clean_cache_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.954, "name": "edge_2i_on_complex_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.622, "name": "nameless_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.971, "name": "select_count_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.578, "name": "set_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.072, "name": "range_key_ordered_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.547, "name": "multi_in_compact_non_composite_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.402, "name": "in_with_desc_order_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.558, "name": "nonpure_function_collection_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.478, "name": "clustering_order_and_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.893, "name": "test_with_allow_filtering", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "code=2200 [Invalid query] message=\"No supported secondary index found for the non primary key columns restrictions\"\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9fYBHw\ndtest: DEBUG: creating indexes\ndtest: DEBUG: validating schema and index list\ndtest: DEBUG: validate_schema_consistent() node1\ndtest: DEBUG: validate_schema_consistent() node2\ndtest: DEBUG: waiting for indexes to fill in\ndtest: DEBUG: querying all values by secondary index\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 88.705, "name": "create_lots_of_indexes_concurrently_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 240, in create_lots_of_indexes_concurrently_test\n    self.assertEqual(1, len(session.execute(\"select * from base_{0} where c2 = {1}\".format(n, ins))))\n  File \"cassandra/cluster.py\", line 1623, in cassandra.cluster.Session.execute (cassandra/cluster.c:27566)\n    result = future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'code=2200 [Invalid query] message=\"No supported secondary index found for the non primary key columns restrictions\"\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-9fYBHw\\ndtest: DEBUG: creating indexes\\ndtest: DEBUG: validating schema and index list\\ndtest: DEBUG: validate_schema_consistent() node1\\ndtest: DEBUG: validate_schema_consistent() node2\\ndtest: DEBUG: waiting for indexes to fill in\\ndtest: DEBUG: querying all values by secondary index\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAccuracy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 124.425, "name": "test_network_topology_strategy_counters", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 94.572, "name": "test_rf_expand_gossiping_property_file_snitch_multi_dc", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 85.858, "name": "ignore_failure_policy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 51.315, "name": "default_compressed_segment_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.66, "name": "stop_failure_policy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.138, "name": "test_map_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 75.068, "name": "sstable_marking_test_not_intersecting_all_ranges", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingQueryIsolation", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 70.369, "name": "test_query_isolation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingDatasetChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.703, "name": "test_data_change_impacting_later_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithModifiers", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.576, "name": "test_with_allow_filtering", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 59.356, "name": "test_paxos_any", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 45.746, "name": "do_not_join_ring_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.327, "name": "populate_mv_after_insert_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.293, "name": "test_type_as_part_of_pkey", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.MiscellaneousCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 20.737, "name": "range_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.MiscellaneousCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.688, "name": "invalid_string_literals_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 18.233, "name": "test_login_keeps_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.905, "name": "test_datetime_values", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.584, "name": "test_past_and_future_dates", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.186, "name": "test_describe_on_non_reserved_keywords", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.33, "name": "test_reading_use_header", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.296, "name": "test_undefined_as_null_indicator", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.436, "name": "alter_ks_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "stress_tool_test.TestStressSparsenessRatio", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.092, "name": "fixed_ratio_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.JsonFullRowInsertSelect", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 13.52, "name": "complex_schema_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.JsonFullRowInsertSelect", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.706, "name": "simple_schema_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.166, "name": "test_count_around_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.222, "name": "test_long_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.432, "name": "test_multi_count", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.114, "name": "test_get_range_slices_tokens", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.02, "name": "test_bad_batch_calls", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.976, "name": "test_invalid_ks_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.459, "name": "test_describe_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.29, "name": "test_super_get", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.276, "name": "default_ttl_can_be_removed_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.063, "name": "bug_4532_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "indexed_with_eq_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "static_columns_with_2i_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "nameless_index_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "double_with_npe_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "compact_metadata_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "reserved_keyword_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.121, "name": "map_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "in_clause_wide_rows_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "compression_option_validation_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "collection_function_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.119, "name": "order_by_with_in_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "deletion_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.119, "name": "range_key_ordered_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.119, "name": "bug_4882_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "only_pk_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "limit_bugs_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "collection_and_regular_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstablesplit_test.TestSSTableSplit", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "-- ma-15-big-Data.db-----\n-- ma-22-big-Data.db-----\n-- ma-21-big-Data.db-----\n-- ma-40-big-Data.db-----\n-- ma-53-big-Data.db-----\n-- ma-14-big-Data.db-----\n-- ma-26-big-Data.db-----\n-- ma-17-big-Data.db-----\n-- ma-46-big-Data.db-----\n-- ma-55-big-Data.db-----\n-- ma-20-big-Data.db-----\n-- ma-58-big-Data.db-----\n-- ma-12-big-Data.db-----\n-- ma-61-big-Data.db-----\n-- ma-25-big-Data.db-----\n-- ma-45-big-Data.db-----\n-- ma-18-big-Data.db-----\n-- ma-29-big-Data.db-----\n-- ma-51-big-Data.db-----\n-- ma-\n...[truncated 66 chars]...\n-----\n-- ma-48-big-Data.db-----\n-- ma-36-big-Data.db-----\n-- ma-43-big-Data.db-----\n-- ma-19-big-Data.db-----\n-- ma-28-big-Data.db-----\n-- ma-56-big-Data.db-----\n-- ma-31-big-Data.db-----\n-- ma-16-big-Data.db-----\n-- ma-30-big-Data.db-----\n-- ma-50-big-Data.db-----\n-- ma-63-big-Data.db-----\n-- ma-27-big-Data.db-----\n-- ma-13-big-Data.db-----\n-- ma-33-big-Data.db-----\n-- ma-32-big-Data.db-----\n-- ma-37-big-Data.db-----\n-- ma-34-big-Data.db-----\n-- ma-42-big-Data.db-----\n-- ma-59-big-Data.db-----\n", "errorDetails": null, "skippedMessage": null, "duration": 470.469, "name": "single_file_split_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 181.242, "name": "bug_6327_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.755, "name": "bug_6050_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.495, "name": "whole_map_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.615, "name": "empty_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.805, "name": "select_with_alias_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.15, "name": "nameless_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.3, "name": "multi_collection_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.122, "name": "function_with_null_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.203, "name": "clustering_order_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.246, "name": "date_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.662, "name": "compact_metadata_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 71.771, "name": "test_cell_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.67, "name": "static_columns_with_distinct_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.266, "name": "reversed_comparator_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.811, "name": "bug_6612_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.62, "name": "bug_5240_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.742, "name": "select_distinct_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.65, "name": "timestamp_and_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.732, "name": "multi_in_compact_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.711, "name": "static_with_empty_clustering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.506, "name": "static_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.202, "name": "date_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 140.258, "name": "interrupt_build_process_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.782, "name": "query_all_new_column_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "pushed_notifications_test.TestPushedNotifications", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 106.416, "name": "restart_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestArchiveCommitlog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 91.119, "name": "test_archive_commitlog_with_active_commitlog", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.338, "name": "sstableloader_compression_snappy_to_none_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.467, "name": "changes_to_different_nodes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 66.553, "name": "sstable_marking_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 58.769, "name": "test_paxos", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 50.658, "name": "test_paging_across_multi_wide_rows", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingDatasetChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 43.514, "name": "test_cell_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingDatasetChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.749, "name": "test_node_unavailabe_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.811, "name": "test_failure_threshold_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.979, "name": "test_single_row_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingSize", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 24.438, "name": "test_with_less_results_than_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 49.189, "name": "data_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 40.758, "name": "test_round_trip_byte_ordered", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 9.931, "name": "test_source_copy_round_trip", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.422, "name": "test_writing_use_header", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.787, "name": "test_quoted_column_names_reading_specify_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.664, "name": "removing_default_ttl_does_not_affect_existing_rows_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.971, "name": "collection_list_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.073, "name": "test_type_as_clustering_col", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.581, "name": "force_repair_async_3_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.83, "name": "list_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.916, "name": "user_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cfid_test.TestCFID", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 14.879, "name": "cfid_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrubIndexes", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ytremm\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.618, "name": "test_scrub_static_table", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 204, in test_scrub_static_table\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Ytremm\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 307, "skipped": false, "age": 10, "className": "compression_test.TestCompression", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0Vnwv2\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.206, "name": "compression_cql_options_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 96, in compression_cql_options_test\n    sstables = self.flush('compression_opts_table')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-0Vnwv2\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.499, "name": "test_incr_decr_super_add", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.861, "name": "test_system_cf_recreate", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.751, "name": "test_long_order", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.079, "name": "test_batch_mutate_remove_standard_columns", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.295, "name": "test_wrapped_range_slices", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.257, "name": "test_range_collation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.761, "name": "test_column_validators", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.302, "name": "test_range_with_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.704, "name": "test_system_super_column_family_operations", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.339, "name": "test_empty_range", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.825, "name": "collection_table_datatype_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_test.TestSchema", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.944, "name": "drop_column_compact_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.06, "name": "order_by_test", "errorStackTrace": null}, {"failedSince": 312, "skipped": true, "age": 5, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "limit_ranges_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "range_tombstones_compaction_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "composite_index_collections_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "collection_flush_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "conditional_update_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "map_item_conditional_test", "errorStackTrace": null}, {"failedSince": 287, "skipped": true, "age": 30, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "invalid_clustering_indexing_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "alter_clustering_and_static_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "remove_range_slice_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "delete_row_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "function_and_reverse_type_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "timeuuid_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "list_item_conditional_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "unescaped_string_test", "errorStackTrace": null}, {"failedSince": 294, "skipped": true, "age": 23, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "conditional_ddl_keyspace_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "nan_infinity_test", "errorStackTrace": null}, {"failedSince": 315, "skipped": false, "age": 2, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "alter_me_6 column[s4] does not start with c and should have been dropped: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's4']\nalter_me_6 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's4']\nindex_me_14 expected indexes ix_index_me_c0->7, got: [u'ix_index_me_14_c1', u'ix_index_me_14_c2', u'ix_index_me_14_c3', u'ix_index_me_14_c4', u'ix_index_me_14_c5', u'ix_index_me_14_c7']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HJj6xM\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 32.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.cluster: WARNING: Node 127.0.0.3 is reporting a schema disagreement: {UUID('63596f27-dd7b-3e6c-9736-c5812f9641ee'): ['127.0.0.1'], UUID('fb8cdb50-4323-3659-8a7b-f6482867fe4a'): ['127.0.0.3']}\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 64.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 128.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\ndtest: DEBUG: waiting for things to settle and sync\ndtest: DEBUG: validate_schema_consistent() node1\ndtest: DEBUG: validate_schema_consistent() node2\ndtest: DEBUG: validate_schema_consistent() node3\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 305.48, "name": "create_lots_of_schema_churn_with_node_down_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 353, in create_lots_of_schema_churn_with_node_down_test\n    self._verify_lots_of_schema_actions(session)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 318, in _verify_lots_of_schema_actions\n    self.assertTrue(0 == len(errors), \"\\n\".join(errors))\n  File \"/usr/lib/python2.7/unittest/case.py\", line 422, in assertTrue\n    raise self.failureException(msg)\n\"alter_me_6 column[s4] does not start with c and should have been dropped: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's4']\\nalter_me_6 expected c1 -> c7, id, got: [u'c1', u'c2', u'c3', u'c4', u'c5', u'c6', u'c7', u'id', u's4']\\nindex_me_14 expected indexes ix_index_me_c0->7, got: [u'ix_index_me_14_c1', u'ix_index_me_14_c2', u'ix_index_me_14_c3', u'ix_index_me_14_c4', u'ix_index_me_14_c5', u'ix_index_me_14_c7']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-HJj6xM\\ncassandra.cluster: WARNING: Host 127.0.0.2 has been marked down\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 2.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 4.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 8.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 16.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 32.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.cluster: WARNING: Node 127.0.0.3 is reporting a schema disagreement: {UUID('63596f27-dd7b-3e6c-9736-c5812f9641ee'): ['127.0.0.1'], UUID('fb8cdb50-4323-3659-8a7b-f6482867fe4a'): ['127.0.0.3']}\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 64.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ncassandra.pool: WARNING: Error attempting to reconnect to 127.0.0.2, scheduling retry in 128.0 seconds: [Errno 111] Tried connecting to [('127.0.0.2', 9042)]. Last error: Connection refused\\ndtest: DEBUG: waiting for things to settle and sync\\ndtest: DEBUG: validate_schema_consistent() node1\\ndtest: DEBUG: validate_schema_consistent() node2\\ndtest: DEBUG: validate_schema_consistent() node3\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 109.555, "name": "create_lots_of_tables_concurrently_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViewsConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "\n0\n100\n200\n300\n400\n500\n600\n700\n800\n900\n1000\n1100\n1200\n1300\n1400\n1500\n1600\n1700\n1800\n1900\n2000\n2100\n2200\n2300\n2400\n2500\n2600\n2700\n2800\n2900\n3000\n3100\n3200\n3300\n3400\n3500\n3600\n3700\n3800\n3900\n4000\n4100\n4200\n4300\n4400\n4500\n4600\n4700\n4800\n4900\n5000\n5100\n5200\n5300\n5400\n5500\n5600\n5700\n5800\n5900\n6000\n6100\n6200\n6300\n6400\n6500\n6600\n6700\n6800\n6900\n7000\n7100\n7200\n7300\n7400\n7500\n7600\n7700\n7800\n7900\n8000\n8100\n8200\n8300\n8400\n8500\n8600\n8700\n8800\n8900\n9000\n9100\n9200\n9300\n9400\n9500\n9600\n9700\n9800\n9900\n10000\n10100\n...[truncated 58537 chars]...\n125; extra: 0; missing: 0\nOn 99000; match: 150; extra: 0; missing: 0\nOn 99100; match: 175; extra: 0; missing: 0\nOn 99200; match: 200; extra: 0; missing: 0\nOn 99300; match: 225; extra: 0; missing: 0\nOn 99400; match: 250; extra: 0; missing: 0\nOn 99500; match: 275; extra: 0; missing: 0\nOn 99600; match: 300; extra: 0; missing: 0\nOn 99700; match: 325; extra: 0; missing: 0\nOn 99800; match: 350; extra: 0; missing: 0\nOn 99900; match: 375; extra: 0; missing: 0\nOn 100000; match: 400; extra: 0; missing: 0\n", "errorDetails": null, "skippedMessage": null, "duration": 229.379, "name": "consistent_reads_after_write_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 199.741, "name": "decommissioned_wiped_node_can_join_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAccuracy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 151.826, "name": "test_simple_strategy_users", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 88.836, "name": "readrepair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 126.589, "name": "simple_decommission_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "wide_rows_test.TestWideRows", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 95.252, "name": "test_column_index_stress", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paxos_tests.TestPaxos", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 83.343, "name": "contention_test_many_threads", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paxos_tests.TestPaxos", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 58.627, "name": "replica_availability_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 196.959, "name": "test_query_isolation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 45.64, "name": "whole_set_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.829, "name": "conditional_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.413, "name": "invalid_string_literals_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.869, "name": "deletion_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.274, "name": "more_order_by_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.2, "name": "timestamp_and_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.662, "name": "select_distinct_with_deletions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.496, "name": "float_with_exponent_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.252, "name": "test_data_change_impacting_later_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.494, "name": "test_multiple_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.012, "name": "test_with_equal_results_to_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.121, "name": "clustering_indexing_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.641, "name": "range_query_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.017, "name": "count_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.803, "name": "clustering_order_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.628, "name": "invalid_string_literals_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.933, "name": "conversion_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.613, "name": "select_key_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.257, "name": "order_by_with_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.768, "name": "sparse_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.442, "name": "negative_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 62.89, "name": "dtcs_deletion_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 50.021, "name": "data_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 47.146, "name": "acknowledged_by_batchlog_not_set_when_batchlog_write_fails_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.867, "name": "multi_table_batch_for_10554_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 42.666, "name": "test_type_keyspace_permission_isolation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 41.025, "name": "test_round_trip_random", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 8.498, "name": "test_all_datatypes_round_trip", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.907, "name": "test_quoted_column_names_reading_dont_specify_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 9.291, "name": "test_use_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 8.251, "name": "test_drop_index", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.269, "name": "test_create_table", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.264, "name": "test_simple_insert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.358, "name": "test_ttl_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.219, "name": "test_single_partition_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingSize", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.108, "name": "test_with_equal_results_to_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithModifiers", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.136, "name": "test_with_order_by_reversed", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "pushed_notifications_test.TestVariousNotifications", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.423, "name": "tombstone_failure_threshold_message_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.274, "name": "force_repair_range_async_2_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "native_transport_ssl_test.NativeTransportSSL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 20.566, "name": "use_custom_port_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "native_transport_ssl_test.NativeTransportSSL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.713, "name": "use_custom_ssl_port_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "hintedhandoff_test.TestHintedHandoffConfig", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nGMQxR\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 18.865, "name": "hintedhandoff_enabled_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 118, in hintedhandoff_enabled_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-nGMQxR\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 13.804, "name": "insert_ttl_has_priority_on_defaut_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonUpdateTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.751, "name": "collection_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_test.TestSchema", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.747, "name": "drop_column_compaction_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.995, "name": "test_dynamic_indexes_with_system_update_cf", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.615, "name": "test_integer_order", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.682, "name": "test_create_then_drop_ks", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.838, "name": "test_incr_decr_standard_add", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.436, "name": "test_range_with_remove_cf", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.623, "name": "test_multiget_slice_with_compact_table", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.331, "name": "test_describe_partitioner", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2", "duration": 7.092, "name": "test_batch_mutate_remove_slice_part_of_supercolumns", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.473, "name": "index_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.062, "name": "table_options_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.118, "name": "bug_6115_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "static_columns_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "batch_and_list_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "clustering_order_in_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "refuse_in_with_indexes_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "alter_with_collections_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "counters_test", "errorStackTrace": null}, {"failedSince": 294, "skipped": true, "age": 23, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "multiordering_validation_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "static_with_limit_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "clustering_order_and_functions_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "range_tombstones_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "large_clustering_in_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "cas_simple_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "bug_6050_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 418.014, "name": "short_read_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.366, "name": "quorum_available_during_failure_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 201.399, "name": "bug_5732_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 41.281, "name": "no_range_ghost_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.856, "name": "truncate_clean_cache_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.56, "name": "delete_row_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.779, "name": "list_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.994, "name": "cas_simple_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.279, "name": "range_query_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.444, "name": "sparse_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.746, "name": "empty_blob_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.582, "name": "range_tombstones_compaction_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.931, "name": "rename_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.381, "name": "order_by_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.797, "name": "limit_bugs_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.422, "name": "batch_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.222, "name": "static_columns_with_2i_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.332, "name": "static_columns_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.008, "name": "dense_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.359, "name": "counters_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.489, "name": "delete_row_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IDsPWs\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 40.653, "name": "test_single_row_deletions", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1556, in test_single_row_deletions\n    [25, 25, 25, 25, 25, 25, 25, 23])\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1453, in check_all_paging_results\n    pf.request_all(timeout=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 116, in request_all\n    self.wait(seconds=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-IDsPWs\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "errorDetails": null, "skippedMessage": null, "duration": 88.635, "name": "logged_batch_compatibility_1_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\n", "errorDetails": null, "skippedMessage": null, "duration": 57.961, "name": "logged_batch_compatibility_4_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 135.78, "name": "multiple_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "incremental_repair_test.TestIncRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 84.923, "name": "sstable_repairedset_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 80.211, "name": "sstableloader_compression_deflate_to_snappy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.214, "name": "remove_index_file_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 78.809, "name": "test_rf_expand_gossiping_property_file_snitch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstableutil_test.SSTableUtilTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 69.249, "name": "compaction_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "read_repair_test.TestRepairDataSystemTable", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 65.702, "name": "range_slice_query_with_tombstones_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 58.532, "name": "test_counter", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 51.298, "name": "test_paging_a_single_wide_row", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 23.997, "name": "test_paging_with_in_orderby_and_two_partition_keys", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingDatasetChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.045, "name": "test_data_change_impacting_earlier_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 45.755, "name": "rangeputget_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 38.926, "name": "test_round_trip_murmur3", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.23, "name": "test_read_invalid_uuid", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.139, "name": "test_all_datatypes_write", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 28.445, "name": "test_copy_to", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  <stdin>:3:Unauthorized: code=2100 [Unauthorized] message=\"Only superusers can create a role with superuser status\"(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 17.738, "name": "test_login_authenticates_correct_user", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.596, "name": "test_uuid", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.283, "name": "test_create_index", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 6.772, "name": "test_update", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.182, "name": "test_alter_table", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.503, "name": "compaction_strategy_switching_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.514, "name": "disable_autocompaction_schema_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.229, "name": "disable_autocompaction_alter_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_hsha_test.ThriftHSHATest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.834, "name": "test_closing_connections", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestDistributedTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.211, "name": "ttl_is_replicated_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.467, "name": "insert_ttl_works_without_default_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.527, "name": "default_ttl_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "hintedhandoff_test.TestHintedHandoffConfig", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "'Hinted handoff is running\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running\\nData center dc1 is disabled'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xuHkN8\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 18.407, "name": "hintedhandoff_dc_reenabled_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 144, in hintedhandoff_dc_reenabled_test\n    self.assertEqual('Hinted handoff is running{}Data center dc1 is disabled'.format(os.linesep), res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running\\\\nData center dc1 is disabled' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running\\\\nData center dc1 is disabled'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-xuHkN8\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.901, "name": "grant_revoke_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "range_ghost_test.TestRangeGhosts", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 13.451, "name": "ghosts_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.215, "name": "test_count_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.786, "name": "test_column_not_found_quorum", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.086, "name": "test_missing_super", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.003, "name": "test_get_range_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.047, "name": "test_cf_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.818, "name": "test_bad_calls", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.762, "name": "test_describe_token_map", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.168, "name": "bug3367_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.237, "name": "batch_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.058, "name": "column_name_validation_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "range_query_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "range_with_deletes_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "null_support_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "select_key_in_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "bug_5240_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "dense_cf_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "order_by_validation_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "cql3_insert_thrift_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "token_range_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "set_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "noncomposite_static_cf_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "conditional_delete_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "bug7105_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "order_by_multikey_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "undefined_column_handling_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "conversion_functions_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.11, "name": "range_query_2ndary_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 256.024, "name": "create_lots_of_schema_churn_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAccuracy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 249.051, "name": "test_network_topology_strategy_users", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 54.028, "name": "short_read_quorum_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.245, "name": "short_read_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 48.217, "name": "collection_indexing_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 53.556, "name": "range_tombstones_compaction_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.808, "name": "in_clause_wide_rows_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.135, "name": "bug_8558_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.121, "name": "multi_in_compact_non_composite_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.114, "name": "counters_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.354, "name": "order_by_with_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.919, "name": "reversed_compact_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.907, "name": "multi_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.425, "name": "only_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.785, "name": "static_with_limit_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.951, "name": "static_columns_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.806, "name": "cql3_insert_thrift_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingQueryIsolationNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 89.092, "name": "test_query_isolation", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BXLTDP\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 46.33, "name": "test_multiple_partition_deletions", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1526, in test_multiple_partition_deletions\n    timeout=10)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1453, in check_all_paging_results\n    pf.request_all(timeout=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 116, in request_all\n    self.wait(seconds=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-BXLTDP\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.888, "name": "test_with_less_results_than_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.746, "name": "function_and_reverse_type_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.865, "name": "ticket_5230_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.975, "name": "row_existence_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.71, "name": "cql3_insert_thrift_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.78, "name": "remove_range_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.535, "name": "multi_list_set_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.118, "name": "test_with_limit", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.815, "name": "test_with_equal_results_to_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.569, "name": "test_with_no_results", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.646, "name": "test_with_less_results_than_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 92.192, "name": "simple_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 126.192, "name": "replace_shutdown_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 92.171, "name": "base_replica_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.17, "name": "immutable_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 80.979, "name": "sstableloader_compression_deflate_to_none_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "pushed_notifications_test.TestPushedNotifications", "stderr": "/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9161 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n/home/automaton/ccm/ccmlib/node.py:451: UserWarning: Binary interface localhost:9163 is not listening after 10 seconds, node may have failed to start.\n  % (binary_itf[0], binary_itf[1]))\n", "testActions": [], "status": "PASSED", "stdout": "node1: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9160)\n       binary=('localhost', 9161)\n       storage=('127.0.0.1', 7000)\n       jmx_port=7100\n       remote_debug_port=0\n       initial_token=-9223372036854775808\nnode2: DOWN (Not initialized)\n       cluster=test\n       auto_bootstrap=False\n       thrift=('localhost', 9162)\n       binary=('localhost', 9163)\n       storage=('127.0.0.2', 7000)\n       jmx_port=7200\n       remote_debug_port=0\n       initial_token=0\n", "errorDetails": null, "skippedMessage": null, "duration": 78.726, "name": "restart_node_localhost_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 65.099, "name": "test_list_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 50.098, "name": "small_compressed_segment_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 47.53, "name": "acknowledged_by_batchlog_set_when_batchlog_write_succeeds_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.984, "name": "unlogged_batch_rejects_counter_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingDatasetChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 42.165, "name": "test_row_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingSize", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.385, "name": "test_with_more_results_than_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.457, "name": "disable_autocompaction_alter_and_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 25.661, "name": "test_number_delimiter", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 8.725, "name": "test_list_data", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.159, "name": "tracing_from_system_traces_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.963, "name": "test_batch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.865, "name": "test_clear", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 21.463, "name": "permissions_caching_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.149, "name": "alter_cf_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.274, "name": "list_users_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.955, "name": "update_column_ttl_with_default_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.ToJsonSelectTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 12.926, "name": "complex_data_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.JsonFullRowInsertSelect", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.906, "name": "pkey_requirement_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.346, "name": "test_index_scan_expiring", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.382, "name": "test_counter_get_slice_range", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.876, "name": "test_super_cf_remove_supercolumn", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.477, "name": "test_super_cf_remove_column", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.436, "name": "test_incr_decr_standard_batch_add", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.198, "name": "test_time_uuid", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.444, "name": "test_insert_blocking", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.325, "name": "test_multiget_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.186, "name": "test_invalid_cf_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.MiscellaneousCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.223, "name": "cql3_insert_thrift_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.005, "name": "indexes_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.06, "name": "indexes_composite_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "downgrade_to_compact_bug_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "limit_sparse_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "composite_row_key_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "invalid_string_literals_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.12, "name": "invalid_old_property_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "conditional_ddl_table_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "count_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "reversed_compact_multikey_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "empty_blob_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "drop_and_readd_collection_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "float_with_exponent_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "no_range_ghost_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "more_order_by_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "reversed_compact_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "in_with_desc_order_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "dynamic_cf_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "allow_filtering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstablesplit_test.TestSSTableSplit", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "-- ma-26-big-Data.db-----\n-- ma-50-big-Data.db-----\n", "errorDetails": null, "skippedMessage": null, "duration": 394.281, "name": "split_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 203.24, "name": "local_dc_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepairDataSystemTable", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 91.982, "name": "repair_parent_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "offline_tools_test.TestOfflineTools", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 185.374, "name": "sstableofflinerelevel_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 134.499, "name": "replace_stopped_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 97.342, "name": "killed_wiped_node_cannot_join_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 50.87, "name": "manual_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 83.657, "name": "sstableloader_compression_snappy_to_deflate_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestArchiveCommitlog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 83.681, "name": "test_archive_commitlog_point_in_time", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 75.641, "name": "lwt_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.323, "name": "drop_column_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 74.008, "name": "test_row_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 41.702, "name": "test_paging_using_secondary_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.787, "name": "collection_flush_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.759, "name": "whole_set_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.159, "name": "large_clustering_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.929, "name": "range_query_2ndary_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.549, "name": "collection_function_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.14, "name": "select_distinct_with_deletions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.948, "name": "composite_partition_key_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.901, "name": "nan_infinity_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.639, "name": "bug7105_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.706, "name": "bug_4882_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.902, "name": "clustering_indexing_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.206, "name": "more_user_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.216, "name": "cas_and_compact_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.873, "name": "column_name_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.921, "name": "select_key_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.16, "name": "test_with_no_results", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.604, "name": "test_with_limit", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.221, "name": "test_paging_using_secondary_indexes_with_static_cols", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n\n...[truncated 5000 chars]...\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "errorDetails": null, "skippedMessage": null, "duration": 31.105, "name": "basic_compound_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.641, "name": "test_multiple_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.842, "name": "test_with_order_by", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 60.457, "name": "test_batch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 43.068, "name": "test_mutation_quorum", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_hsha_test.ThriftHSHATest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 49.263, "name": "test_6285", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.359, "name": "compaction_strategy_switching_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.89, "name": "disable_autocompaction_schema_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 24.229, "name": "disable_autocompaction_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.111, "name": "test_type_enforcement", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingSize", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 24.776, "name": "test_with_no_results", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.612, "name": "force_repair_async_1_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "hintedhandoff_test.TestHintedHandoffConfig", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zh3B8T\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 18.618, "name": "nodetool_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 80, in nodetool_test\n    self.assertEqual('Hinted handoff is running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-zh3B8T\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.839, "name": "regular_users_can_alter_their_passwords_only_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.763, "name": "altering_nonexistent_user_throws_exception_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 14.964, "name": "update_column_ttl_with_default_ttl_test2", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.384, "name": "test_materialized_view", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.46, "name": "test_describe_describes_non_default_compaction_parameters", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.95, "name": "test_cls", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  <stdin>:2:(EE)  list index out of range(EE)  <stdin>:2:Aborting import at record #1. Previously inserted records are still present, and some records after that may be present as well.(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.85, "name": "test_wrong_number_of_columns", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.909, "name": "test_read_invalid_float", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deletion_test.TestDeletion", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.584, "name": "tombstone_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonSelectTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.691, "name": "selecting_pkey_as_json_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.ToJsonSelectTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.243, "name": "counters_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.907, "name": "table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.847, "name": "unlogged_batch_accepts_regular_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.739, "name": "unlogged_batch_gcgs_below_threshold_should_not_print_warning_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.64, "name": "only_one_timestamp_is_valid_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_test.TestSchema", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.806, "name": "drop_column_queries_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.799, "name": "test_batch_mutate_remove_super_columns_entire_row", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.483, "name": "test_batch_mutate_standard_columns", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestCompactStorageThriftAccesses", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.121, "name": "test_get", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.057, "name": "static_column_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.061, "name": "batch_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "collection_counter_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "select_distinct_with_deletions_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "range_slice_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.118, "name": "alter_bug_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "keyspace_creation_options_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "composite_index_with_pk_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "static_with_empty_clustering_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.116, "name": "multi_collection_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "cas_and_compact_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "multiordering_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "edge_2i_on_complex_pk_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "nonpure_function_collection_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "bug_6612_test", "errorStackTrace": null}, {"failedSince": 315, "skipped": true, "age": 2, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "table_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "static_cf_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.117, "name": "large_count_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 546.775, "name": "local_quorum_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 105.439, "name": "failed_bootstap_wiped_node_can_join_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 188.569, "name": "bug_5732_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.34, "name": "cas_simple_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.255, "name": "composite_index_with_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.431, "name": "non_eq_conditional_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.352, "name": "more_order_by_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.525, "name": "deletion_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.009, "name": "range_with_deletes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.289, "name": "reversed_compact_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.093, "name": "batch_and_list_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.058, "name": "test_v2_protocol_IN_with_tuples", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 67.893, "name": "test_undefined_page_size_default", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.878, "name": "test_with_more_results_than_page_size", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 42.475, "name": "test_paging_using_secondary_indexes_with_static_cols", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 43.252, "name": "timeuuid_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 43.475, "name": "range_tombstones_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.204, "name": "bug_4532_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.385, "name": "limit_multiget_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 39.104, "name": "whole_list_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.914, "name": "limit_bugs_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.738, "name": "composite_index_with_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.989, "name": "collection_and_regular_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.46, "name": "null_support_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.466, "name": "remove_range_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.826, "name": "static_with_empty_clustering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.187, "name": "batch_and_list_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.059, "name": "test_v2_protocol_IN_with_tuples", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4,\n...[truncated 4100 chars]...\n1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n[[1, 0, u'1.0'],\n [1, 1, u'1.1'],\n [1, 2, u'1.2'],\n [1, 3, u'1.3'],\n [1, 4, u'1.4'],\n [0, 0, u'0.0'],\n [0, 1, u'0.1'],\n [0, 2, u'0.2'],\n [0, 3, u'0.3'],\n [0, 4, u'0.4'],\n [2, 0, u'2.0'],\n [2, 1, u'2.1'],\n [2, 2, u'2.2'],\n [2, 3, u'2.3'],\n [2, 4, u'2.4']]\n", "errorDetails": null, "skippedMessage": null, "duration": 33.765, "name": "basic_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 170.165, "name": "complex_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.489, "name": "test_gcgs_validation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 137.389, "name": "create_lots_of_mv_concurrently_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 95.253, "name": "test_rf_collapse_gossiping_property_file_snitch_multi_dc", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 75.76, "name": "test_rf_collapse_property_file_snitch", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.06, "name": "test_rf_collapse_yaml_file_snitch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.899, "name": "sstableloader_compression_deflate_to_deflate_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 70.976, "name": "sstable_deletion_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.06, "name": "compaction_delete_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.059, "name": "compaction_delete_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.058, "name": "compaction_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 59.377, "name": "test_mutation_v3", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingSize", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 46.764, "name": "test_undefined_page_size_default", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.0, "name": "login_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.917, "name": "conditional_create_drop_user_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.059, "name": "only_superuser_can_create_users_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.058, "name": "password_authenticator_create_user_requires_password_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.676, "name": "putget_snappy_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "list index out of range\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XOM7wy\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 28.436, "name": "test_type_secondary_indexing", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/user_types_test.py\", line 456, in test_type_secondary_indexing\n    row_uuid, first_name, like = rows[0]\n'list index out of range\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-XOM7wy\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.444, "name": "test_incr_standard_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.901, "name": "test_system_column_family_operations", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.407, "name": "test_range_partial", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.349, "name": "test_remove_expiring", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.531, "name": "test_batch_mutate_standard_columns_blocking", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.287, "name": "test_describe_snitch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.445, "name": "test_cf_remove_column", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.338, "name": "test_super_reinsert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.12, "name": "test_describe", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.382, "name": "test_tuple_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.474, "name": "test_describe", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.826, "name": "test_describe_mv", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 8.666, "name": "test_source_glass", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 0.058, "name": "get_test_table_output", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlLoginTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  <stdin>:2:('Unable to connect to any servers', {'127.0.0.1': AuthenticationFailed(u'Failed to authenticate to 127.0.0.1: code=0100 [Bad credentials] message=\"Username and/or password are incorrect\"',)})(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 18.117, "name": "test_login_allows_bad_pass_and_continued_use", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 21.92, "name": "force_repair_range_async_1_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.304, "name": "collection_set_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestSnapshot", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 14.19, "name": "test_basic_snapshot_and_restore", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonDeleteTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.504, "name": "delete_using_pkey_json_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrubIndexes", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SAT7o8\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 9.042, "name": "test_standalone_scrub", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 243, in test_standalone_scrub\n    initial_sstables = self.flush('users', 'gender_idx', 'state_idx', 'birth_year_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-SAT7o8\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.647, "name": "logged_batch_gcgs_below_threshold_multi_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.525, "name": "type_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.335, "name": "keyspace_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.887, "name": "durable_writes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.01, "name": "drop_counter_column_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.637, "name": "aggregate_udf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.089, "name": "aggregate_with_udt_keyspace_isolation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.829, "name": "default_aggregate_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.212, "name": "test_migration", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.286, "name": "udf_overload_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.237, "name": "udf_scripting_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.022, "name": "udf_with_udt_keyspace_isolation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_functions_test.TestUserFunctions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.736, "name": "udf_with_udt_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.059, "name": "bug_6069_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "conditional_ddl_index_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "identifier_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.115, "name": "static_columns_cas_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "sparse_cf_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "bug_6327_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "reversed_comparator_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.114, "name": "simple_tuple_query_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "timestamp_and_ttl_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "keyspace_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "list_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "exclusive_slice_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "create_alter_options_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_supercolumns_test.TestSCUpgrade", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.057, "name": "upgrade_with_counters_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "upgrade_supercolumns_test.TestSCUpgrade", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.111, "name": "upgrade_with_index_creation_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "metadata_tests.TestMetadata", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0", "duration": 0.058, "name": "metadata_reset_while_compact_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "json_tools_test.TestJson", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.059, "name": "json_tools_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "offline_tools_test.TestOfflineTools", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 498.494, "name": "sstableverify_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, \n...[truncated 36632 chars]...\n(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "errorDetails": null, "skippedMessage": null, "duration": 54.206, "name": "static_columns_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 42.53, "name": "range_tombstones_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.581, "name": "refuse_in_with_indexes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.908, "name": "list_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.219, "name": "limit_sparse_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.797, "name": "simple_tuple_query_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.962, "name": "multiordering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.748, "name": "undefined_column_handling_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.845, "name": "in_order_by_without_selecting_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.56, "name": "bug_6115_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.828, "name": "cas_and_list_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.767, "name": "multi_collection_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.821, "name": "composite_index_collections_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.069, "name": "non_eq_conditional_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.344, "name": "invalid_custom_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.47, "name": "multiordering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.828, "name": "reversed_compact_multikey_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.921, "name": "range_key_ordered_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.0, "name": "cas_and_list_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.486, "name": "dense_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.725, "name": "test_single_partition_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingSizeNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.092, "name": "test_with_more_results_than_page_size", "errorStackTrace": null}, {"failedSince": 252, "skipped": false, "age": 65, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "There were multiple schema versions: '35d1e748-bd3b-3ef0-a5c0-1e84f7f4e51a: [127.0.0.1]\\n\\n\\t\\tUNREACHABLE: [127.0.0.2]'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-656_6P\ndtest: DEBUG: decommission_node_test()\ndtest: DEBUG: prepare_for_changes() ns1\ndtest: DEBUG: validate_schema_consistent() node1\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 154.468, "name": "decommission_node_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 475, in decommission_node_test\n    self.validate_schema_consistent(node1)\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 127, in validate_schema_consistent\n    assert num_schemas == 1, \"There were multiple schema versions: \" + pprint.pformat(schemas)\n\"There were multiple schema versions: '35d1e748-bd3b-3ef0-a5c0-1e84f7f4e51a: [127.0.0.1]\\\\n\\\\n\\\\t\\\\tUNREACHABLE: [127.0.0.2]'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-656_6P\\ndtest: DEBUG: decommission_node_test()\\ndtest: DEBUG: prepare_for_changes() ns1\\ndtest: DEBUG: validate_schema_consistent() node1\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 63.15, "name": "changes_while_node_down_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 135.021, "name": "test_bulk_round_trip", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.755, "name": "test_explicit_column_order_writing", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.732, "name": "test_null_as_null_indicator", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 79.247, "name": "test_refresh_schema_on_timeout_error", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.542, "name": "test_float_formatting", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.905, "name": "test_eat_glass", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.624, "name": "test_drop_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 92.958, "name": "add_dc_after_mv_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.959, "name": "secondary_index_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistent_bootstrap_test.TestBootstrapConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 89.199, "name": "consistent_reads_after_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.941, "name": "sstableloader_compression_none_to_deflate_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "values not within 20.00% of the max: (5.0, 3.883589)\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Wu4yu3\ndtest: DEBUG: 3.883589\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 69.18, "name": "compaction_throughput_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/compaction_test.py\", line 206, in compaction_throughput_test\n    assert_almost_equal(float(threshold), float(avgthroughput), error=0.2)\n  File \"/home/automaton/cassandra-dtest/assertions.py\", line 65, in assert_almost_equal\n    assert vmin > vmax * (1.0 - error) or vmin == vmax, \"values not within %.2f%% of the max: %s\" % (error * 100, args)\n'values not within 20.00% of the max: (5.0, 3.883589)\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Wu4yu3\\ndtest: DEBUG: 3.883589\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 313, "skipped": true, "age": 4, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "duration": 0.059, "name": "dtcs_deletion_test", "errorStackTrace": null}, {"failedSince": 313, "skipped": true, "age": 4, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "Not implemented unless DateTieredCompactionStrategy is used", "duration": 0.061, "name": "dtcs_deletion_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 60.306, "name": "test_mutation_v4", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.2.X", "duration": 0.059, "name": "test_mutation_v2", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 49.449, "name": "default_segment_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 21.879, "name": "die_failure_policy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 47.757, "name": "test_manual_rebuild_index", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.395, "name": "test_multi_index_filtering_query", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "secondary_indexes_test.TestUpgradeSecondaryIndexes", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.058, "name": "test_read_old_sstables_after_upgrade", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAccuracy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 43.675, "name": "test_simple_strategy_counters", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.984, "name": "test_nested_user_types", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "wide_rows_test.TestWideRows", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.123, "name": "test_wide_rows", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.011, "name": "test_paging_using_secondary_indexes_with_static_cols", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithModifiers", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 24.479, "name": "test_with_order_by", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.569, "name": "test_incr_decr_super_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.618, "name": "test_simple_expiration_batch_mutate", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.627, "name": "test_count", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.78, "name": "test_integer_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.653, "name": "test_insert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.411, "name": "test_batch_insert_blocking", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.491, "name": "test_index_scan_uuid_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.904, "name": "test_super_insert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 21.869, "name": "force_repair_range_async_3_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.059, "name": "materialized_views_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.269, "name": "create_ks_auth_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.1.x", "duration": 0.058, "name": "only_superusers_can_drop_users_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "stress_tool_test.TestStressSparsenessRatio", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.377, "name": "uniform_ratio_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonInsertTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 12.383, "name": "complex_data_types_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrub", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1jN0nx\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.284, "name": "test_standalone_scrub", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 377, in test_standalone_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-1jN0nx\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.323, "name": "creating_and_dropping_user_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.386, "name": "creating_and_dropping_keyspace_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_tests.StorageProxyCQLTester", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.117, "name": "statements_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.476, "name": "aggregate_function_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.462, "name": "builtin_functions_require_no_special_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.8, "name": "conditional_create_drop_role_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.305, "name": "create_and_grant_roles_with_superuser_status_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.715, "name": "create_drop_role_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.306, "name": "create_drop_role_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.975, "name": "create_user_as_alias_for_create_role_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.291, "name": "creator_of_db_resource_granted_all_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.013, "name": "disallow_grant_execute_on_non_function_resources_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.945, "name": "disallow_grant_revoke_on_builtin_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.357, "name": "drop_and_revoke_roles_with_superuser_status_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.478, "name": "drop_function_and_keyspace_cleans_up_udf_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.492, "name": "drop_keyspace_cleans_up_function_level_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.168, "name": "drop_role_cleans_up_udf_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.982, "name": "drop_role_removes_memberships_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.894, "name": "drop_role_revokes_permissions_granted_on_it_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.255, "name": "filter_granted_permissions_by_resource_type_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.823, "name": "function_resource_hierarchy_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.775, "name": "grant_revoke_are_idempotent_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.578, "name": "grant_revoke_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.407, "name": "grant_revoke_role_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.862, "name": "grant_revoke_roles_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.919, "name": "grant_revoke_udf_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.733, "name": "ignore_invalid_roles_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.364, "name": "inheritence_of_udf_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.842, "name": "list_permissions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.735, "name": "list_permissions_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.339, "name": "list_roles_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.991, "name": "list_users_considers_inherited_superuser_status_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.729, "name": "prevent_circular_grants_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.579, "name": "role_admin_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 20.613, "name": "role_caching_authenticated_user_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 20.684, "name": "role_name_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.695, "name": "role_requires_login_privilege_to_authenticate_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.205, "name": "role_requires_password_to_login_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.017, "name": "roles_do_not_inherit_login_privilege_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.164, "name": "superuser_status_is_inherited_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.319, "name": "udf_permissions_in_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.26, "name": "udf_permissions_in_insert_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.275, "name": "udf_permissions_in_select_where_clause_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.193, "name": "udf_permissions_in_selection_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.252, "name": "udf_permissions_in_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.694, "name": "udf_permissions_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_roles_test.TestAuthRoles", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.224, "name": "udf_with_overloads_permissions_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.058, "name": "select_distinct_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "boolean_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "bug_8558_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "ticket_5230_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "bug_5732_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "cas_and_ttl_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "limit_multiget_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "select_count_paging_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "truncate_clean_cache_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "composite_partition_key_validation_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "negative_timestamp_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.111, "name": "multi_list_set_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.113, "name": "validate_counter_regular_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "clustering_indexing_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "function_with_null_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": true, "age": 1, "className": "deprecated_cql_tests.TestCQL", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "3.0.0 > 2.0.x", "duration": 0.112, "name": "blobAs_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_internal_auth_test.TestAuthUpgrade", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-2.2)\nCompiling Cassandra cassandra-2.2 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nFetching Cassandra updates...\n", "errorDetails": null, "skippedMessage": null, "duration": 393.496, "name": "upgrade_to_22_test", "errorStackTrace": null}, {"failedSince": 315, "skipped": false, "age": 2, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "510 != 509\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLeoba\ndtest: DEBUG: executing 500 alters\ndtest: DEBUG: waiting for alters to propagate\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 212.991, "name": "create_lots_of_alters_concurrently_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/concurrent_schema_changes_test.py\", line 188, in create_lots_of_alters_concurrently_test\n    self.assertEqual(510, column_ct)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n'510 != 509\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-iLeoba\\ndtest: DEBUG: executing 500 alters\\ndtest: DEBUG: waiting for alters to propagate\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 63.921, "name": "changes_while_node_toggle_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 88.923, "name": "bug_6612_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 41.627, "name": "bug7105_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.101, "name": "indexes_composite_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.043, "name": "rename_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.025, "name": "user_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 39.703, "name": "expanded_list_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.658, "name": "limit_ranges_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.027, "name": "ticket_5230_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.345, "name": "set_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.183, "name": "order_by_multikey_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.698, "name": "static_columns_cas_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 78.416, "name": "test_paging_a_single_wide_row", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.362, "name": "conditional_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.867, "name": "cas_and_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.006, "name": "boolean_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.765, "name": "limit_ranges_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.179, "name": "empty_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.078, "name": "more_user_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.655, "name": "bug_6050_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.062, "name": "multi_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.941, "name": "select_with_alias_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.84, "name": "compact_metadata_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.746, "name": "float_with_exponent_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.773, "name": "indexed_with_eq_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "errorDetails": null, "skippedMessage": null, "duration": 36.579, "name": "test_with_order_by_reversed", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 160.427, "name": "resumable_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "errorDetails": null, "skippedMessage": null, "duration": 39.938, "name": "logged_batch_compatibility_2_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.782, "name": "counter_batch_rejects_regular_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 104.793, "name": "counter_consistency_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.251, "name": "multi_counter_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 85.187, "name": "sstableloader_compression_none_to_snappy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.237, "name": "incompressible_data_in_compressed_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 77.321, "name": "test_rf_expand_property_file_snitch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 71.556, "name": "compaction_throughput_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.582, "name": "sstable_deletion_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 56.189, "name": "data_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 57.621, "name": "test_6924_dropping_cf", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "internode_ssl_test.TestInternodeSSL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 39.078, "name": "putget_with_internode_ssl_without_compression_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.538, "name": "test_compression_error", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.286, "name": "drop_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.255, "name": "test_incr_decr_standard_batch_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.408, "name": "test_system_keyspace_operations", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.526, "name": "test_batch_mutate_remove_slice_of_entire_supercolumns", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.213, "name": "test_insert_ttl", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 9.717, "name": "test_get_range_slice_after_deletion", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.428, "name": "test_get_range_slice_super", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestCQLAccesses", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.838, "name": "test_range_tombstone_and_static", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "udtencoding_test.TestUDTEncoding", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.859, "name": "udt_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deprecated_repair_test.TestDeprecatedRepairAPI", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 23.695, "name": "force_repair_async_2_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 19.285, "name": "test_list_queries", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.165, "name": "test_connect_timeout", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 8.767, "name": "test_tuple_data", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.881, "name": "test_all_datatypes_read", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.243, "name": "test_quoted_column_names_writing_dont_specify_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.631, "name": "test_create_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.635, "name": "test_colons_in_string_literals", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.52, "name": "grant_revoke_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.486, "name": "create_cf_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.736, "name": "dropping_nonexistent_user_throws_exception_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.99, "name": "delete_with_ttl_expired_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrub", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w_g1v0\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.233, "name": "test_standalone_scrub_essential_files_only", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 404, in test_standalone_scrub_essential_files_only\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-w_g1v0\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.568, "name": "udf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.865, "name": "test_no_counters_in_user_types", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestConsistency", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 430.035, "name": "short_read_reversed_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 198.104, "name": "large_count_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 44.958, "name": "edge_2i_on_complex_pk_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.052, "name": "clustering_order_and_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.373, "name": "select_distinct_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 40.358, "name": "map_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.175, "name": "blobAs_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.411, "name": "nonpure_function_collection_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.641, "name": "exclusive_slice_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.47, "name": "conversion_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.873, "name": "collection_indexing_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.255, "name": "map_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.393, "name": "null_support_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.004, "name": "invalid_custom_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.843, "name": "bug_6069_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.994, "name": "tuple_notation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.086, "name": "noncomposite_static_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.824, "name": "collection_and_regular_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.765, "name": "list_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.869, "name": "test_data_change_impacting_earlier_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.254, "name": "test_paging_using_secondary_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 176.44, "name": "simultaneous_bootstrap_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 100.771, "name": "shutdown_wiped_node_cannot_join_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 135.593, "name": "simple_sequential_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepairDataSystemTable", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 93.699, "name": "repair_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 82.508, "name": "stop_commit_failure_policy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 49.493, "name": "small_segment_size_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 80.289, "name": "sstableloader_compression_none_to_none_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 66.634, "name": "compaction_throughput_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.085, "name": "disable_autocompaction_alter_and_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 23.869, "name": "disable_autocompaction_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 74.559, "name": "snapshot_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.465, "name": "basic_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\n", "errorDetails": null, "skippedMessage": null, "duration": 130.216, "name": "logged_batch_compatibility_3_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.556, "name": "logged_batch_rejects_counter_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.483, "name": "counter_batch_accepts_counter_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "configuration_test.TestConfiguration", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 51.806, "name": "change_durable_writes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "jmxmetrics_test.TestJMXMetrics", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.054, "name": "begin_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.893, "name": "static_columns_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.657, "name": "test_type_dropping", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.399, "name": "test_only_coordinator_chooses_index_for_query", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.195, "name": "query_new_column_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.403, "name": "prepared_statement_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.216, "name": "simple_increment_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 22.754, "name": "test_colon_delimiter", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.529, "name": "test_describe_round_trip", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.571, "name": "test_client_warnings", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.709, "name": "drop_ks_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.794, "name": "drop_cf_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.012, "name": "cant_create_existing_user_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "offline_tools_test.TestOfflineTools", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 12.902, "name": "sstableexpiredblockers_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.363, "name": "test_simple_expiration", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.849, "name": "test_dynamic_indexes_creation_deletion", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.296, "name": "test_get_slice_by_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.391, "name": "test_batch_mutate_super_deletion", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.658, "name": "test_batch_mutate_remove_super_columns_with_none_given_underneath", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.406, "name": "test_incr_decr_standard_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.276, "name": "test_describe_ring", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.473, "name": "test_batch_mutate_remove_slice_standard", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.39, "name": "test_batch_insert_super_blocking", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.531, "name": "test_super_cf_resurrect_subcolumn", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.063, "name": "creating_and_dropping_table_with_2ary_indexes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.791, "name": "basic_table_datatype_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.066, "name": "creating_and_dropping_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.807, "name": "clustering_order_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_internal_auth_test.TestAuthUpgrade", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.1\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nCloning Cassandra (from local cache)\nChecking out requested branch (cassandra-3.0)\nCompiling Cassandra cassandra-3.0 ...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "errorDetails": null, "skippedMessage": null, "duration": 342.189, "name": "upgrade_to_30_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_crc_check_chance_test.TestCrcCheckChanceUpgrade", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\nhttp://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-3.0\nFetching Cassandra updates...\n", "errorDetails": null, "skippedMessage": null, "duration": 113.789, "name": "crc_check_chance_upgrade_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAvailability", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 176.168, "name": "test_network_topology_strategy", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "consistency_test.TestAvailability", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 56.149, "name": "test_simple_strategy", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 130.267, "name": "really_complex_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 67.11, "name": "simple_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.165, "name": "crc_check_chance_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.087, "name": "clustering_column_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "offline_tools_test.TestOfflineTools", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 117.107, "name": "sstablelevelreset_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "rebuild_test.TestRebuild", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 92.786, "name": "simple_rebuild_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 92.639, "name": "test_paging_across_multi_wide_rows", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 80.479, "name": "test_paging_across_multi_wide_rows", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "errorDetails": "<ErrorMessage code=0000 [Server error] message=\"java.lang.NullPointerException\">\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LCrDvc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 32.897, "name": "static_columns_paging_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 859, in static_columns_paging_test\n    results = list(cursor.execute(\"SELECT %s FROM test\" % selector))\n  File \"cassandra/cluster.py\", line 3375, in cassandra.cluster.PagedResult.next (cassandra/cluster.c:63341)\n    result = self.response_future.result()\n  File \"cassandra/cluster.py\", line 3205, in cassandra.cluster.ResponseFuture.result (cassandra/cluster.c:61306)\n    raise self._final_exception\n'<ErrorMessage code=0000 [Server error] message=\"java.lang.NullPointerException\">\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LCrDvc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version=\\'binary:2.2.3\\', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {\\'install_dir\\': \\'/home/automaton/cassandra\\'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector \\'*\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s1\\'\\ndtest: DEBUG: Using selector \\'a, b, c, s2\\'\\ndtest: DEBUG: Using selector \\'a, b, c\\'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector \\'*\\'\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingDataNodes2RF1", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": "[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n[Row(a=1, b=0, s1=17, s2=42, c=0),\n Row(a=1, b=1, s1=17, s2=42, c=1),\n Row(a=1, b=2, s1=17, s2=42, c=2),\n Row(a=1, b=3, s1=17, s2=42, c=3),\n Row(a=0, b=0, s1=17, s2=42, c=0),\n Row(a=0, b=1, s1=17, s2=42, c=1),\n Row(a=0, b=2, s1=17, s2=42, c=2),\n Row(a=0, b=3, s1=17, s2=42, c=3),\n Row(a=2, b=0, s1=17, s2=42, c=0),\n Row(a=2, b=1, s1=17, s2=42, c=1),\n Row(a=2, b=2, s1=17, s2=42, c=2),\n Row(a=2, b=3, s1=17, s2=42, c=3),\n Row(a=3, b=0, s1=17, s2=42, c=0),\n Row(a=3, b=1, s1=17, s2=42, c=1),\n Row(a=3, b=2, s1=17, s2=42, c=2),\n Row(a=3, b=3, s1=17, s2=42, c=3)]\n[Row(a=1, b=0, c=0, s1=17, s2=42),\n Row(a=1, b=1, c=1, s1=17, s2=42),\n Row(a=1, b=2, c=2, s1=17, s2=42),\n Row(a=1, b=3, c=3, s1=17, s2=42),\n Row(a=0, b=0, c=0, s1=17, s2=42),\n Row(a=0, b=1, c=1, s1=17, s2=42),\n Row(a=0, b=2, c=2, s1=17, s2=42),\n Row(a=0, b=3, c=3, s1=17, s2=42),\n Row(a=2, b=0, c=0, s1=17, s2=42),\n Row(a=2, b=1, c=1, s1=17, s2=42),\n Row(a=2, b=2, c=2, s1=17, s2=42),\n Row(a=2, b=3, c=3, s1=17, s2=42),\n Row(a=3, b=0, c=0, s1=17, s2=42),\n Row(a=3, b=1, c=1, s1=17, s2=42),\n Row(a=3, b=2, c=2, s1=17, s2=42),\n Row(a=3, b=3, c=3, s1=17, s2=42)]\n[Row(a=1, b=0, c=0, s1=17),\n Row(a=1, b=1, c=1, s1=17),\n Row(a=1, b=2, c=2, s1=17),\n Row(a=1, b=3, c=3, s1=17),\n Row(a=0, b=0, c=0, s1=17),\n Row(a=0, b=1, c=1, s1=17),\n Row(a=0, b=2, c=2, s1=17),\n Row(a=0, b=3, c=3, s1=17),\n Row(a=2, b=0, c=0, s1=17),\n Row(a=2, b=1, c=1, s1=17),\n Row(a=2, b=2, c=2, s1=17),\n Row(a=2, b=3, c=3, s1=17),\n Row(a=3, b=0, c=0, s1=17),\n Row(a=3, b=1, c=1, s1=17),\n Row(a=3, b=2, c=2, s1=17),\n Row(a=3, b=3, c=3, s1=17)]\n[Row(a=1, b=0, c=0, s2=42),\n Row(a=1, b=1, c=1, s2=42),\n Row(a=1, b=2, c=2, s2=42),\n Row(a=1, b=3, c=3, s2=42),\n Row(a=0, b=0, c=0, s2=42),\n Row(a=0, b=1, c=1, s2=42),\n Row(a=0, b=2, c=2, s2=42),\n Row(a=0, b=3, c=3, s2=42),\n Row(a=2, b=0, c=0, s2=42),\n Row(a=2, b=1, c=1, s2=42),\n Row(a=2, b=2, c=2, s2=42),\n Row(a=2, b=3, c=3, s2=42),\n Row(a=3, b=0, c=0, s2=42),\n Row(a=3, b=1, c=1, s2=42),\n Row(a=3, b=2, c=2, s2=42),\n Row(a=3, b=3, c=3, s2=42)]\n[Row(a=1, b=0, c=0),\n Row(a=1, b=1, c=1),\n Row(a=1, b=2, c=2),\n Row(a=1, b=3, c=3),\n Row(a=0, b=0, c=0),\n Row(a=0, b=1, c=1),\n Row(a=0, b=2, c=2),\n Row(a=0, b=3, c=3),\n Row(a=2, b=0, c=0),\n Row(a=2, b=1, c=1),\n Row(a=2, b=2, c=2),\n Row(a=2, b=3, c=3),\n Row(a=3, b=0, c=0),\n Row(a=3, b=1, c=1),\n Row(a=3, b=2, c=2),\n Row(a=3, b=3, c=3)]\n", "errorDetails": "Unexpected error in node2 node log: ['ERROR [SharedPool-Worker-3] 2015-11-03 17:57:44,412 QueryMessage.java:136 - Unexpected error during query\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.containsPreviousLast(RangeSliceQueryPager.java:103) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.pager.AbstractQueryPager.fetchPage(AbstractQueryPager.java:119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.fetchPage(RangeSliceQueryPager.java:39) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:239) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:76) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:225) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:256) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:241) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:123) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\n\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\nERROR [SharedPool-Worker-3] 2015-11-03 17:57:44,412 ErrorMessage.java:336 - Unexpected exception during request\\njava.lang.NullPointerException: null\\n\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.containsPreviousLast(RangeSliceQueryPager.java:103) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.pager.AbstractQueryPager.fetchPage(AbstractQueryPager.java:119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.fetchPage(RangeSliceQueryPager.java:39) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:239) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:76) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:225) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:256) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:241) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:123) ~[apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\n\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\n\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [apache-cassandra-2.2.3.jar:2.2.3]\\n\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]']\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LCrDvc\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 3\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 4\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 5\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 15\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 16\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 17\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Using page size of 100\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\ndtest: DEBUG: Using selector 'a, b, c, s1'\ndtest: DEBUG: Using selector 'a, b, c, s2'\ndtest: DEBUG: Using selector 'a, b, c'\ndtest: DEBUG: Querying old node\ndtest: DEBUG: Using page size of 2\ndtest: DEBUG: Using selector '*'\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-LCrDvc\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-LCrDvc] directory\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 33.205, "name": "static_columns_paging_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 358, in run\n    self.tearDown()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/upgrade_base.py\", line 267, in tearDown\n    super(UpgradeTester, self).tearDown()\n  File \"/home/automaton/cassandra-dtest/dtest.py\", line 550, in tearDown\n    raise AssertionError('Unexpected error in %s node log: %s' % (node.name, errors))\n\"Unexpected error in node2 node log: ['ERROR [SharedPool-Worker-3] 2015-11-03 17:57:44,412 QueryMessage.java:136 - Unexpected error during query\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.containsPreviousLast(RangeSliceQueryPager.java:103) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.pager.AbstractQueryPager.fetchPage(AbstractQueryPager.java:119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.fetchPage(RangeSliceQueryPager.java:39) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:239) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:76) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:225) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:256) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:241) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:123) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\\\\nERROR [SharedPool-Worker-3] 2015-11-03 17:57:44,412 ErrorMessage.java:336 - Unexpected exception during request\\\\njava.lang.NullPointerException: null\\\\n\\\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.containsPreviousLast(RangeSliceQueryPager.java:103) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.pager.AbstractQueryPager.fetchPage(AbstractQueryPager.java:119) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.service.pager.RangeSliceQueryPager.fetchPage(RangeSliceQueryPager.java:39) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:239) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:179) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.statements.SelectStatement.execute(SelectStatement.java:76) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.processStatement(QueryProcessor.java:225) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:256) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.cql3.QueryProcessor.process(QueryProcessor.java:241) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.messages.QueryMessage.execute(QueryMessage.java:123) ~[apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:507) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.transport.Message$Dispatcher.channelRead0(Message.java:401) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:333) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext.access$700(AbstractChannelHandlerContext.java:32) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat io.netty.channel.AbstractChannelHandlerContext$8.run(AbstractChannelHandlerContext.java:324) [netty-all-4.0.23.Final.jar:4.0.23.Final]\\\\n\\\\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\\\\n\\\\tat org.apache.cassandra.concurrent.AbstractTracingAwareExecutorService$FutureTask.run(AbstractTracingAwareExecutorService.java:164) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:105) [apache-cassandra-2.2.3.jar:2.2.3]\\\\n\\\\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]']\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-LCrDvc\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 3\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 4\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 5\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 15\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 16\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 17\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Using page size of 100\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: Using selector 'a, b, c, s1, s2'\\ndtest: DEBUG: Using selector 'a, b, c, s1'\\ndtest: DEBUG: Using selector 'a, b, c, s2'\\ndtest: DEBUG: Using selector 'a, b, c'\\ndtest: DEBUG: Querying old node\\ndtest: DEBUG: Using page size of 2\\ndtest: DEBUG: Using selector '*'\\ndtest: DEBUG: removing ccm cluster test at: /mnt/tmp/dtest-LCrDvc\\ndtest: DEBUG: clearing ssl stores from [/mnt/tmp/dtest-LCrDvc] directory\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 39.796, "name": "bug_6327_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.348, "name": "expanded_list_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.419, "name": "blobAs_functions_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.624, "name": "whole_list_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.875, "name": "composite_index_collections_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.632, "name": "reversed_compact_multikey_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.66, "name": "composite_row_key_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.355, "name": "order_by_multikey_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.466, "name": "function_with_null_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b_rHMg\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 39.483, "name": "test_single_partition_deletions", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1506, in test_single_partition_deletions\n    timeout=10)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1453, in check_all_paging_results\n    pf.request_all(timeout=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 116, in request_all\n    self.wait(seconds=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-b_rHMg\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.716, "name": "test_single_row_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.139, "name": "reversed_comparator_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.68, "name": "large_clustering_in_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.276, "name": "dynamic_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.833, "name": "limit_sparse_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.605, "name": "function_and_reverse_type_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.058, "name": "range_with_deletes_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.313, "name": "bug_6115_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.762, "name": "in_order_by_without_selecting_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.414, "name": "multi_list_set_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstable_generation_loading_test.TestSSTableGenerationAndLoading", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 80.415, "name": "sstableloader_compression_snappy_to_snappy_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 66.421, "name": "test_6924_dropping_ks", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "jmx_test.TestJMX", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 46.041, "name": "table_metric_mbeans_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "delete_insert_test.DeleteInsertTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 39.683, "name": "delete_insert_search_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.661, "name": "putget_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "concurrent_schema_changes_test.TestConcurrentSchemaChanges", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.778, "name": "load_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.348, "name": "test_single_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.225, "name": "replace_nonexistent_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "multidc_putget_test.TestMultiDCPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.528, "name": "putget_2dc_rf1_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.782, "name": "disable_autocompaction_alter_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.637, "name": "large_compaction_warning_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.552, "name": "sstable_deletion_test", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "largecolumn_test.TestLargeColumn", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "Expected output from nodetool gcstats starts with a header line with first column Interval\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GkgEAh\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 19.232, "name": "cleanup_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 40, in cleanup_test\n    debug(\"Before stress {0}\".format(self.directbytes(node1)))\n  File \"/home/automaton/cassandra-dtest/largecolumn_test.py\", line 20, in directbytes\n    assert output[0].strip().startswith(\"Interval\"), \"Expected output from nodetool gcstats starts with a header line with first column Interval\"\n'Expected output from nodetool gcstats starts with a header line with first column Interval\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-GkgEAh\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.826, "name": "type_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.748, "name": "remove_column_ttl_with_default_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.964, "name": "update_single_column_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.ToJsonSelectTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.652, "name": "basic_data_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonUpdateTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.301, "name": "basic_data_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.672, "name": "test_drop_table", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.512, "name": "test_truncate", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.623, "name": "test_delete", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  <stdin>:6:SyntaxException: <ErrorMessage code=2000 [Syntax error in CQL query] message=\"line 1:0 no viable alternative at input ';' ([;])\">(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.805, "name": "test_commented_lines", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.394, "name": "test_insert", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.246, "name": "test_quoted_column_names_writing_specify_names", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.415, "name": "test_batch_mutate_remove_standard_row", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.221, "name": "test_describe_ring_on_invalid_keyspace", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.284, "name": "test_batch_mutate_remove_super_columns_with_standard_under", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.324, "name": "test_super_cf_remove_and_range_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.138, "name": "test_batch_insert_super", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.384, "name": "uda_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.843, "name": "compact_storage_composite_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compression_test.TestCompression", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.928, "name": "compression_cql_disabled_with_alter_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compression_test.TestCompression", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.115, "name": "compression_cql_enabled_with_alter_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "global_row_key_cache_test.TestGlobalRowKeyCache", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 251.045, "name": "functional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 241.202, "name": "replace_with_reset_resume_state_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 91.704, "name": "replace_active_node_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 196.115, "name": "dc_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 134.493, "name": "simple_parallel_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "repair_test.TestRepair", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 83.507, "name": "empty_vs_gcable_sequential_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "sstableutil_test.SSTableUtilTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 150.436, "name": "abortedcompaction_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 210.669, "name": "test_paging_a_single_wide_row", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDataNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n\n...[truncated 5000 chars]...\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n[[1, 0, 0, u'1.0'],\n [1, 1, 0, u'1.1'],\n [1, 2, 0, u'1.2'],\n [1, 3, 0, u'1.3'],\n [1, 4, 0, u'1.4'],\n [0, 0, 0, u'0.0'],\n [0, 1, 0, u'0.1'],\n [0, 2, 0, u'0.2'],\n [0, 3, 0, u'0.3'],\n [0, 4, 0, u'0.4'],\n [2, 0, 0, u'2.0'],\n [2, 1, 0, u'2.1'],\n [2, 2, 0, u'2.2'],\n [2, 3, 0, u'2.3'],\n [2, 4, 0, u'2.4']]\n", "errorDetails": null, "skippedMessage": null, "duration": 41.4, "name": "basic_compound_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 45.327, "name": "large_count_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 32.154, "name": "whole_map_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.667, "name": "in_clause_wide_rows_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.486, "name": "user_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.421, "name": "empty_blob_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.157, "name": "dynamic_cf_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.019, "name": "column_name_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.391, "name": "order_by_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "FIXED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 46.034, "name": "test_failure_threshold_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.305, "name": "bug_5240_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.043, "name": "cas_and_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.713, "name": "static_columns_with_2i_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.505, "name": "order_by_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.141, "name": "bug_4882_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.57, "name": "list_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.638, "name": "composite_row_key_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.293, "name": "negative_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.404, "name": "test_with_order_by", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.169, "name": "test_with_allow_filtering", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.526, "name": "test_data_change_impacting_earlier_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.727, "name": "test_data_change_impacting_later_page", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replication_test.SnitchConfigurationUpdateTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 78.086, "name": "test_rf_collapse_gossiping_property_file_snitch", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "write_failures_test.TestWriteFailures", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 68.171, "name": "test_mutation_one", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 59.338, "name": "complex_mv_select_statements_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 25.437, "name": "insert_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.553, "name": "drop_mv_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 53.584, "name": "system_auth_ks_is_alterable_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 17.621, "name": "modify_and_select_auth_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.701, "name": "user_cant_drop_themselves_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 38.451, "name": "compaction_strategy_switching_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_LeveledCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.05, "name": "disable_autocompaction_alter_and_nodetool_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_DateTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.543, "name": "large_compaction_warning_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "commitlog_test.TestCommitLog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.396, "name": "test_bad_crc", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.81, "name": "non_local_read_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.083, "name": "test_incr_super_remove", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.116, "name": "test_incr_decr_standard_muliget_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.038, "name": "test_super_subcolumn_limit", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.017, "name": "test_get_slice_super_range", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.048, "name": "test_index_scan", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.725, "name": "test_invalid_strategy_class", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.997, "name": "test_counter_get_slice_super_range", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.747, "name": "test_multi_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.797, "name": "test_range_deletion", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingData", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 23.959, "name": "static_columns_with_empty_non_static_columns_paging_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 22.884, "name": "test_letter_delimiter", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.354, "name": "test_read_valid_data", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.CqlshSmokeTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 7.201, "name": "test_select", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "hintedhandoff_test.TestHintedHandoffConfig", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\nHinted handoff is not running'\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EP4lae\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 18.394, "name": "hintedhandoff_disabled_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/hintedhandoff_test.py\", line 106, in hintedhandoff_disabled_test\n    self.assertEqual('Hinted handoff is not running', res.rstrip())\n  File \"/usr/lib/python2.7/unittest/case.py\", line 513, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/usr/lib/python2.7/unittest/case.py\", line 506, in _baseAssertEqual\n    raise self.failureException(msg)\n\"'Hinted handoff is not running' != 'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\\\nHinted handoff is not running'\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-EP4lae\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonUpdateTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.614, "name": "complex_data_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "json_test.FromJsonInsertTests", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.493, "name": "basic_data_types_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.399, "name": "update_multiple_columns_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.899, "name": "test_8280_validate_indexed_values", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.668, "name": "creating_and_dropping_uda_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.489, "name": "nondefault_table_settings_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.144, "name": "logged_batch_accepts_regular_mutations_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cql_prepared_test.TestCQL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.225, "name": "batch_preparation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "counter_tests.TestCounters", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.53, "name": "validate_empty_column_name_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "putget_test.TestPutGet", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 244.46, "name": "wide_row_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "bootstrap_test.TestBootstrap", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 235.721, "name": "bootstrap_with_reset_bootstrap_state_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "http://git-wip-us.apache.org/repos/asf/cassandra.git git:cassandra-2.2.3\n", "errorDetails": null, "skippedMessage": null, "duration": 175.526, "name": "collection_flush_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 48.855, "name": "conditional_delete_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.1, "name": "expanded_map_item_conditional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.496, "name": "row_existence_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 35.176, "name": "map_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 36.524, "name": "token_range_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.574, "name": "nan_infinity_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.708, "name": "in_with_desc_order_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.749, "name": "order_by_validation_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 33.986, "name": "no_clustering_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 34.9, "name": "count_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingDatasetChangesNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 64.412, "name": "test_cell_TTL_expiry_during_paging", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 46.108, "name": "test_ttl_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes3RF3", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.115, "name": "test_single_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 37.448, "name": "timeuuid_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.44, "name": "conditional_update_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.85, "name": "limit_multiget_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.279, "name": "static_columns_cas_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 30.362, "name": "token_range_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.626, "name": "map_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 29.496, "name": "bug_4532_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.cql_tests.TestCQLNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 28.918, "name": "cas_and_compact_test", "errorStackTrace": null}, {"failedSince": 316, "skipped": false, "age": 1, "className": "upgrade_tests.paging_test.TestPagingWithDeletionsNodes2RF1", "stderr": null, "testActions": [], "status": "REGRESSION", "stdout": null, "errorDetails": "Requested pages were not delivered before timeout.\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QMkXM9\ndtest: DEBUG: getting default job version for 3.0.0\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\ndtest: DEBUG: starting from 2.2.3\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\ndtest: DEBUG: Querying upgraded node\ndtest: DEBUG: Querying old node\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 39.918, "name": "test_multiple_partition_deletions", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1526, in test_multiple_partition_deletions\n    timeout=10)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 1453, in check_all_paging_results\n    pf.request_all(timeout=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 116, in request_all\n    self.wait(seconds=timeout)\n  File \"/home/automaton/cassandra-dtest/upgrade_tests/paging_test.py\", line 135, in wait\n    raise RuntimeError(\"Requested pages were not delivered before timeout.\")\n\"Requested pages were not delivered before timeout.\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-QMkXM9\\ndtest: DEBUG: getting default job version for 3.0.0\\ndtest: DEBUG: UpgradePath(starting_version='binary:2.2.3', upgrade_version=None)\\ndtest: DEBUG: starting from 2.2.3\\ndtest: DEBUG: upgrading to {'install_dir': '/home/automaton/cassandra'}\\ndtest: DEBUG: Querying upgraded node\\ndtest: DEBUG: Querying old node\\n--------------------- >> end captured logging << ---------------------\""}, {"failedSince": 0, "skipped": false, "age": 0, "className": "upgrade_tests.paging_test.TestPagingWithModifiersNodes2RF1", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "pages: [3, 3, 3, 1]\npages: [3, 3, 3, 1]\n", "errorDetails": null, "skippedMessage": null, "duration": 29.72, "name": "test_with_order_by_reversed", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "replace_address_test.TestReplaceAddress", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 160.036, "name": "replace_first_boot_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "topology_test.TestTopology", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 129.763, "name": "crash_during_decommission_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestArchiveCommitlog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 90.817, "name": "test_archive_commitlog_point_in_time_with_active_commitlog", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestArchiveCommitlog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 81.724, "name": "test_archive_commitlog", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "snapshot_test.TestArchiveCommitlog", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 78.65, "name": "dont_test_archive_commitlog", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "super_counter_test.TestSuperCounterClusterRestart", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 86.635, "name": "functional_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 65.257, "name": "test_set_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexesOnCollections", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.848, "name": "test_multiple_indexes_on_single_map_column", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "secondary_indexes_test.TestSecondaryIndexes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 31.742, "name": "test_low_cardinality_indexes", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestDistributedTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 54.225, "name": "ttl_is_respected_on_delayed_replication_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestDistributedTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 41.582, "name": "ttl_is_respected_on_repair_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "ttl_test.TestTTL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 10.789, "name": "remove_column_ttl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_copy_tests.CqlshCopyTest", "stderr": null, "testActions": [], "status": "PASSED", "stdout": "(EE)  (EE)  ", "errorDetails": null, "skippedMessage": null, "duration": 43.32, "name": "test_round_trip_order_preserving", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.815, "name": "test_int_values", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "cqlsh_tests.cqlsh_tests.TestCqlsh", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.418, "name": "test_tracing", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.809, "name": "test_multiple_cell_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithDeletions", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.927, "name": "test_multiple_partition_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "paging_test.TestPagingWithModifiers", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 27.86, "name": "test_with_limit", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 26.978, "name": "test_nulls_in_user_types", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "user_types_test.TestUserTypes", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.833, "name": "test_user_type_isolation", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "materialized_views_test.TestMaterializedViews", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 24.942, "name": "create_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "native_transport_ssl_test.NativeTransportSSL", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 22.153, "name": "connect_to_ssl_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "compaction_test.TestCompaction_with_SizeTieredCompactionStrategy", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.797, "name": "large_compaction_warning_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 18.402, "name": "grant_revoke_cleanup_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "auth_test.TestAuth", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 16.891, "name": "users_cant_alter_their_superuser_status_test", "errorStackTrace": null}, {"failedSince": 268, "skipped": true, "age": 49, "className": "mixed_version_test.TestSchemaChanges", "stderr": null, "testActions": [], "status": "SKIPPED", "stdout": null, "errorDetails": null, "skippedMessage": "This test is only designed to work with 2.0 and 2.1 right now", "duration": 17.071, "name": "test_friendly_unrecognized_table_handling", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "deletion_test.TestDeletion", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 11.854, "name": "gc_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 8.801, "name": "test_update_expiring", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.394, "name": "test_batch_mutate_insertions_and_deletions", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.358, "name": "test_bad_system_calls", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.131, "name": "test_empty_slice", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.335, "name": "test_column_name_lengths", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "thrift_tests.TestMutations", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.325, "name": "test_cas", "errorStackTrace": null}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrubIndexes", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qV79b0\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.438, "name": "test_scrub_collections_table", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 279, in test_scrub_collections_table\n    initial_sstables = self.flush('users', 'user_uuids_idx')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-qV79b0\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 307, "skipped": false, "age": 10, "className": "scrub_test.TestScrub", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Vad_tH\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.135, "name": "test_nodetool_scrub", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 338, in test_nodetool_scrub\n    initial_sstables = self.flush('users')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-Vad_tH\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 307, "skipped": false, "age": 10, "className": "compression_test.TestCompression", "stderr": null, "testActions": [], "status": "FAILED", "stdout": null, "errorDetails": "WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\n\n-------------------- >> begin captured logging << --------------------\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KR3kKR\n--------------------- >> end captured logging << ---------------------", "skippedMessage": null, "duration": 8.188, "name": "disable_compression_cql_test", "errorStackTrace": "  File \"/usr/lib/python2.7/unittest/case.py\", line 329, in run\n    testMethod()\n  File \"/home/automaton/cassandra-dtest/tools.py\", line 253, in wrapped\n    f(obj)\n  File \"/home/automaton/cassandra-dtest/compression_test.py\", line 40, in disable_compression_cql_test\n    sstables = self.flush('disabled_compression_table')\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 117, in flush\n    self.perform_node_tool_cmd('flush', table, indexes)\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 108, in perform_node_tool_cmd\n    self.launch_nodetool_cmd('%s %s %s' % (cmd, KEYSPACE, table))\n  File \"/home/automaton/cassandra-dtest/scrub_test.py\", line 85, in launch_nodetool_cmd\n    assert len(response) == 0, response  # nodetool does not print anything unless there is an error\n'WARNING could not find libjemalloc.dylib, please install for better performance - search path: /lib64:/lib:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu/libfakeroot:/usr/local/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu\\n\\n-------------------- >> begin captured logging << --------------------\\ndtest: DEBUG: cluster ccm directory: /mnt/tmp/dtest-KR3kKR\\n--------------------- >> end captured logging << ---------------------'"}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.413, "name": "logged_batch_gcgs_below_threshold_single_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "batch_test.TestBatch", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 7.466, "name": "batch_uses_proper_timestamp_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "super_column_cache_test.TestSCCache", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.924, "name": "sc_with_row_cache_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "schema_metadata_test.TestSchemaMetadata", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 6.734, "name": "udt_table_test", "errorStackTrace": null}, {"failedSince": 0, "skipped": false, "age": 0, "className": "jmx_test.TestJMX", "stderr": null, "testActions": [], "status": "PASSED", "stdout": null, "errorDetails": null, "skippedMessage": null, "duration": 2994.712, "name": "cfhistograms_test", "errorStackTrace": null}], "timestamp": null, "duration": 42411.312, "name": "nosetests", "id": null}], "empty": false, "failCount": 26, "duration": 42411.312, "testActions": []}}
